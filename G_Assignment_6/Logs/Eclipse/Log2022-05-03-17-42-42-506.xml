<Events startTimestamp="1651614162506" logVersion="1.0.0.202108012048">
  <Command __id="43" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:42 EDT 2022" starttimestamp="1651614162506" timestamp="135" />
  <Command __id="45" _type="PauseCommand" date="Tue May 03 17:42:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1152">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1013]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="59" _type="PauseCommand" date="Tue May 03 17:42:55 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="12734">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7494]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="58" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:55 EDT 2022" starttimestamp="1651614162506" timestamp="12734" />
  <Command __id="61" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:55 EDT 2022" starttimestamp="1651614162506" timestamp="13428" />
  <Command __id="62" _type="MoveCaretCommand" caretOffset="985" date="Tue May 03 17:42:56 EDT 2022" docOffset="1104" starttimestamp="1651614162506" timestamp="13511" />
  <Command __id="63" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14430" />
  <Command __id="64" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14435" />
  <Command __id="65" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14435" />
  <Command __id="66" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14439" />
  <Command __id="67" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14439" />
  <Command __id="68" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14445" />
  <Command __id="69" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14445" />
  <Command __id="70" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14447" />
  <Command __id="71" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:56 EDT 2022" starttimestamp="1651614162506" timestamp="14447" />
  <Command __id="72" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="14586" />
  <Command __id="73" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="14587" />
  <Command __id="74" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="14594" />
  <Command __id="75" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="14594" />
  <Command __id="76" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="14601" />
  <Command __id="77" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="14601" />
  <Command __id="78" _type="EclipseCommand" commandID="" date="Tue May 03 17:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="14607" />
  <Command __id="79" _type="MoveCaretCommand" caretOffset="560" date="Tue May 03 17:42:57 EDT 2022" docOffset="679" starttimestamp="1651614162506" timestamp="14944" />
  <Command __id="83" _type="PauseCommand" date="Tue May 03 17:43:17 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="35022">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4644]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="82" _type="ShellCommand" date="Tue May 03 17:43:17 EDT 2022" starttimestamp="1651614162506" timestamp="35022" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="84" _type="EclipseCommand" commandID="org.eclipse.ltk.ui.refactoring.commands.renameResource" date="Tue May 03 17:43:17 EDT 2022" starttimestamp="1651614162506" timestamp="35036" />
  <Command __id="85" _type="EclipseCommand" commandID="" date="Tue May 03 17:43:17 EDT 2022" starttimestamp="1651614162506" timestamp="35131" />
  <Command __id="86" _type="EclipseCommand" commandID="" date="Tue May 03 17:43:17 EDT 2022" starttimestamp="1651614162506" timestamp="35167" />
  <Command __id="88" _type="PauseCommand" date="Tue May 03 17:43:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="37195">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2028]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="89" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 17:43:19 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="37403" />
  <Command __id="93" _type="PauseCommand" date="Tue May 03 17:43:30 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="47611">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6178]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="92" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 17:43:30 EDT 2022" start_end="END" starttimestamp="1651614162506" timestamp="47611" />
  <Command __id="94" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 17:43:30 EDT 2022" start_end="END" starttimestamp="1651614162506" timestamp="47612" />
  <Command __id="95" _type="ShellCommand" date="Tue May 03 17:43:30 EDT 2022" starttimestamp="1651614162506" timestamp="47764" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="96" _type="EclipseCommand" commandID="org.eclipse.ltk.ui.refactoring.commands.renameResource" date="Tue May 03 17:43:30 EDT 2022" starttimestamp="1651614162506" timestamp="47817" />
  <Command __id="97" _type="EclipseCommand" commandID="" date="Tue May 03 17:43:30 EDT 2022" starttimestamp="1651614162506" timestamp="47817" />
  <Command __id="98" _type="EclipseCommand" commandID="" date="Tue May 03 17:43:30 EDT 2022" starttimestamp="1651614162506" timestamp="47838" />
  <Command __id="100" _type="PauseCommand" date="Tue May 03 17:43:34 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="51590">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3752]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="99" _type="ShellCommand" date="Tue May 03 17:43:34 EDT 2022" starttimestamp="1651614162506" timestamp="51590" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="102" _type="PauseCommand" date="Tue May 03 17:43:41 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="58931">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7341]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="101" _type="ShellCommand" date="Tue May 03 17:43:41 EDT 2022" starttimestamp="1651614162506" timestamp="58931" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="103" _type="EclipseCommand" commandID="org.eclipse.ltk.ui.refactoring.commands.renameResource" date="Tue May 03 17:43:41 EDT 2022" starttimestamp="1651614162506" timestamp="58948" />
  <Command __id="108" _type="PauseCommand" date="Tue May 03 17:43:45 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="63049">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2087]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="107" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 17:43:45 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="63049" type="Run" />
  <Command __id="109" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 17:43:45 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="63049" type="Run" />
  <Command __id="111" _type="PauseCommand" date="Tue May 03 17:43:48 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="65504">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2455]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="110" _type="ShellCommand" date="Tue May 03 17:43:48 EDT 2022" starttimestamp="1651614162506" timestamp="65504" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="113" _type="PauseCommand" date="Tue May 03 17:44:11 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="89336">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23832]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="112" _type="ConsoleOutput" date="Tue May 03 17:44:11 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="89336" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21492
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <Command __id="115" _type="PauseCommand" date="Tue May 03 17:44:26 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="103523">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14187]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="114" _type="ConsoleOutput" date="Tue May 03 17:44:26 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="103523" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14132
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(EQUAL,"14"), Diff(DELETE,"9"), Diff(INSERT,"13"), Diff(EQUAL,"2¶")]]]></diff>
  </Command>
  <Command __id="117" _type="PauseCommand" date="Tue May 03 17:44:40 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="117794">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14271]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="116" _type="ConsoleOutput" date="Tue May 03 17:44:40 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="117794" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14320
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):14"), Diff(DELETE,"1"), Diff(EQUAL,"32"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="119" _type="PauseCommand" date="Tue May 03 17:46:02 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="200123">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[82329]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="118" _type="ConsoleOutput" date="Tue May 03 17:46:02 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="200123" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67569
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14320"), Diff(INSERT,"67569"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="146" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298585" />
  <Command __id="147" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298586" />
  <Command __id="148" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298589" />
  <Command __id="149" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298589" />
  <Command __id="150" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298593" />
  <Command __id="151" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298594" />
  <Command __id="152" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298599" />
  <Command __id="153" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298600" />
  <Command __id="154" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298604" />
  <Command __id="155" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298604" />
  <Command __id="156" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298605" />
  <Command __id="157" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298606" />
  <Command __id="158" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298611" />
  <Command __id="159" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298611" />
  <Command __id="160" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298616" />
  <Command __id="161" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298616" />
  <Command __id="162" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298641" />
  <Command __id="163" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298641" />
  <Command __id="164" _type="EclipseCommand" commandID="" date="Tue May 03 17:47:41 EDT 2022" starttimestamp="1651614162506" timestamp="298646" />
  <Command __id="166" _type="PauseCommand" date="Tue May 03 17:47:55 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="312744">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[14098]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="165" _type="ConsoleOutput" date="Tue May 03 17:47:55 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="312744" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112568
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112568¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="168" _type="PauseCommand" date="Tue May 03 17:48:17 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="335265">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22521]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="167" _type="ConsoleOutput" date="Tue May 03 17:48:17 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="335265" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22566
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"256"), Diff(DELETE,"8¶Number of traces > 800  turning tracing off"), Diff(INSERT,"6"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="170" _type="PauseCommand" date="Tue May 03 17:48:40 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="357832">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22567]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="169" _type="ConsoleOutput" date="Tue May 03 17:48:40 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="357832" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22564
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2256"), Diff(DELETE,"6"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="172" _type="PauseCommand" date="Tue May 03 17:49:02 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="380400">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22568]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="171" _type="ConsoleOutput" date="Tue May 03 17:49:02 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="380400" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22564
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22564¶")]]]></diff>
  </Command>
  <Command __id="174" _type="PauseCommand" date="Tue May 03 17:49:25 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="403020">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22620]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="173" _type="ConsoleOutput" date="Tue May 03 17:49:25 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="403020" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22568
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2256"), Diff(DELETE,"4"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="176" _type="PauseCommand" date="Tue May 03 17:51:19 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="516916">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[113896]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="175" _type="ShellCommand" date="Tue May 03 17:51:19 EDT 2022" starttimestamp="1651614162506" timestamp="516916" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="177" _type="MoveCaretCommand" caretOffset="448" date="Tue May 03 17:51:19 EDT 2022" docOffset="567" starttimestamp="1651614162506" timestamp="516975" />
  <Command __id="179" _type="PauseCommand" date="Tue May 03 17:51:33 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="530865">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[13890]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="180" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 17:51:33 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="530980" />
  <Command __id="182" _type="PauseCommand" date="Tue May 03 17:51:35 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="533379">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2399]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="181" _type="MoveCaretCommand" caretOffset="410" date="Tue May 03 17:51:35 EDT 2022" docOffset="445" starttimestamp="1651614162506" timestamp="533379" />
  <Command __id="184" _type="PauseCommand" date="Tue May 03 17:51:39 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="537280">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3901]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="183" _type="SelectTextCommand" caretOffset="332" date="Tue May 03 17:51:39 EDT 2022" end="332" start="238" starttimestamp="1651614162506" timestamp="537280" />
  <Command __id="186" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:51:40 EDT 2022" starttimestamp="1651614162506" timestamp="537874" />
  <Command __id="188" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:51:40 EDT 2022" starttimestamp="1651614162506" timestamp="537961" />
  <Command __id="190" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:51:40 EDT 2022" starttimestamp="1651614162506" timestamp="538282" />
  <Command __id="192" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:51:40 EDT 2022" starttimestamp="1651614162506" timestamp="538450" />
  <Command __id="194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:51:41 EDT 2022" starttimestamp="1651614162506" timestamp="538732" />
  <Command __id="196" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:51:41 EDT 2022" starttimestamp="1651614162506" timestamp="539034" />
  <Command __id="198" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:51:41 EDT 2022" starttimestamp="1651614162506" timestamp="539365" />
  <Command __id="200" _type="PauseCommand" date="Tue May 03 17:51:55 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="553214">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[13849]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="199" _type="ShellCommand" date="Tue May 03 17:51:55 EDT 2022" starttimestamp="1651614162506" timestamp="553214" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="201" _type="ShellCommand" date="Tue May 03 17:51:55 EDT 2022" starttimestamp="1651614162506" timestamp="553310" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="204" _type="PauseCommand" date="Tue May 03 17:51:57 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="555190">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[1779]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="205" _type="UndoCommand" date="Tue May 03 17:51:57 EDT 2022" starttimestamp="1651614162506" timestamp="555203" />
  <Command __id="206" _type="MoveCaretCommand" caretOffset="308" date="Tue May 03 17:51:58 EDT 2022" docOffset="343" starttimestamp="1651614162506" timestamp="555799" />
  <Command __id="208" _type="PauseCommand" date="Tue May 03 17:52:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="557806">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2007]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="207" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:52:00 EDT 2022" starttimestamp="1651614162506" timestamp="557806" />
  <Command __id="209" _type="EclipseCommand" commandID="" date="Tue May 03 17:52:00 EDT 2022" starttimestamp="1651614162506" timestamp="557897" />
  <Command __id="210" _type="EclipseCommand" commandID="" date="Tue May 03 17:52:00 EDT 2022" starttimestamp="1651614162506" timestamp="557929" />
  <Command __id="212" _type="PauseCommand" date="Tue May 03 17:52:16 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="573978">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[16049]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="213" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 17:52:16 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="574159" />
  <Command __id="215" _type="PauseCommand" date="Tue May 03 17:52:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="577088">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2929]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="214" _type="MoveCaretCommand" caretOffset="281" date="Tue May 03 17:52:19 EDT 2022" docOffset="2707" starttimestamp="1651614162506" timestamp="577088" />
  <Command __id="217" _type="PauseCommand" date="Tue May 03 17:52:30 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="587576">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10488]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="216" _type="SelectTextCommand" caretOffset="429" date="Tue May 03 17:52:30 EDT 2022" end="487" start="429" starttimestamp="1651614162506" timestamp="587576" />
  <Command __id="219" _type="PauseCommand" date="Tue May 03 17:52:32 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="589658">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2082]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="220" _type="CutCommand" date="Tue May 03 17:52:32 EDT 2022" starttimestamp="1651614162506" timestamp="589679" />
  <Command __id="221" _type="MoveCaretCommand" caretOffset="362" date="Tue May 03 17:52:32 EDT 2022" docOffset="2788" starttimestamp="1651614162506" timestamp="590210" />
  <Command __id="223" _type="InsertStringCommand" date="Tue May 03 17:52:33 EDT 2022" starttimestamp="1651614162506" timestamp="590913" timestamp2="590913">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="225" _type="InsertStringCommand" date="Tue May 03 17:52:33 EDT 2022" starttimestamp="1651614162506" timestamp="591055" timestamp2="591055">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="227" _type="PasteCommand" date="Tue May 03 17:52:34 EDT 2022" starttimestamp="1651614162506" timestamp="591691" />
  <Command __id="229" _type="InsertStringCommand" date="Tue May 03 17:52:34 EDT 2022" starttimestamp="1651614162506" timestamp="591918" timestamp2="591918">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="231" _type="PauseCommand" date="Tue May 03 17:52:35 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="593055">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1137]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="230" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:52:35 EDT 2022" starttimestamp="1651614162506" timestamp="593055" />
  <Command __id="232" _type="EclipseCommand" commandID="" date="Tue May 03 17:52:35 EDT 2022" starttimestamp="1651614162506" timestamp="593144" />
  <Command __id="233" _type="EclipseCommand" commandID="" date="Tue May 03 17:52:35 EDT 2022" starttimestamp="1651614162506" timestamp="593173" />
  <Command __id="234" _type="MoveCaretCommand" caretOffset="428" date="Tue May 03 17:52:36 EDT 2022" docOffset="2854" starttimestamp="1651614162506" timestamp="593573" />
  <Command __id="236" _type="PauseCommand" date="Tue May 03 17:52:37 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="595290">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1717]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="235" _type="SelectTextCommand" caretOffset="317" date="Tue May 03 17:52:37 EDT 2022" end="362" start="317" starttimestamp="1651614162506" timestamp="595290" />
  <Command __id="238" _type="CutCommand" date="Tue May 03 17:52:38 EDT 2022" starttimestamp="1651614162506" timestamp="595996" />
  <Command __id="239" _type="MoveCaretCommand" caretOffset="269" date="Tue May 03 17:52:38 EDT 2022" docOffset="2695" starttimestamp="1651614162506" timestamp="596427" />
  <Command __id="241" _type="InsertStringCommand" date="Tue May 03 17:52:39 EDT 2022" starttimestamp="1651614162506" timestamp="597092" timestamp2="597092">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="243" _type="PasteCommand" date="Tue May 03 17:52:39 EDT 2022" starttimestamp="1651614162506" timestamp="597387" />
  <Command __id="245" _type="InsertStringCommand" date="Tue May 03 17:52:40 EDT 2022" starttimestamp="1651614162506" timestamp="597735" timestamp2="597735">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="246" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:52:40 EDT 2022" starttimestamp="1651614162506" timestamp="598431" />
  <Command __id="247" _type="EclipseCommand" commandID="" date="Tue May 03 17:52:41 EDT 2022" starttimestamp="1651614162506" timestamp="598569" />
  <Command __id="248" _type="EclipseCommand" commandID="" date="Tue May 03 17:52:41 EDT 2022" starttimestamp="1651614162506" timestamp="598597" />
  <Command __id="249" _type="MoveCaretCommand" caretOffset="319" date="Tue May 03 17:52:41 EDT 2022" docOffset="2745" starttimestamp="1651614162506" timestamp="598978" />
  <Command __id="251" _type="PauseCommand" date="Tue May 03 17:52:43 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="601463">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2485]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="250" _type="ShellCommand" date="Tue May 03 17:52:43 EDT 2022" starttimestamp="1651614162506" timestamp="601463" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="253" _type="PauseCommand" date="Tue May 03 17:52:48 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="605881">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4418]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="252" _type="ShellCommand" date="Tue May 03 17:52:48 EDT 2022" starttimestamp="1651614162506" timestamp="605881" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="255" _type="PauseCommand" date="Tue May 03 17:52:58 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="615894">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10013]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="254" _type="MoveCaretCommand" caretOffset="801" date="Tue May 03 17:52:58 EDT 2022" docOffset="3227" starttimestamp="1651614162506" timestamp="615894" />
  <Command __id="257" _type="PauseCommand" date="Tue May 03 17:53:00 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="617765">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1870]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="256" _type="SelectTextCommand" caretOffset="735" date="Tue May 03 17:53:00 EDT 2022" end="807" start="735" starttimestamp="1651614162506" timestamp="617764" />
  <Command __id="259" _type="CutCommand" date="Tue May 03 17:53:00 EDT 2022" starttimestamp="1651614162506" timestamp="618407" />
  <Command __id="260" _type="MoveCaretCommand" caretOffset="647" date="Tue May 03 17:53:01 EDT 2022" docOffset="3073" starttimestamp="1651614162506" timestamp="618803" />
  <Command __id="262" _type="InsertStringCommand" date="Tue May 03 17:53:02 EDT 2022" starttimestamp="1651614162506" timestamp="619519" timestamp2="619519">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="264" _type="PasteCommand" date="Tue May 03 17:53:02 EDT 2022" starttimestamp="1651614162506" timestamp="619743" />
  <Command __id="265" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:53:02 EDT 2022" starttimestamp="1651614162506" timestamp="620246" />
  <Command __id="266" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:02 EDT 2022" starttimestamp="1651614162506" timestamp="620334" />
  <Command __id="267" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:02 EDT 2022" starttimestamp="1651614162506" timestamp="620362" />
  <Command __id="268" _type="MoveCaretCommand" caretOffset="659" date="Tue May 03 17:53:03 EDT 2022" docOffset="3085" starttimestamp="1651614162506" timestamp="620851" />
  <Command __id="270" _type="PauseCommand" date="Tue May 03 17:53:08 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="626062">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5211]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="269" _type="SelectTextCommand" caretOffset="1041" date="Tue May 03 17:53:08 EDT 2022" end="1041" start="815" starttimestamp="1651614162506" timestamp="626062" />
  <Command __id="272" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:09 EDT 2022" starttimestamp="1651614162506" timestamp="626670" />
  <Command __id="274" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:09 EDT 2022" starttimestamp="1651614162506" timestamp="627132" />
  <Command __id="276" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:09 EDT 2022" starttimestamp="1651614162506" timestamp="627364" />
  <Command __id="278" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:10 EDT 2022" starttimestamp="1651614162506" timestamp="627660" />
  <Command __id="280" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:10 EDT 2022" starttimestamp="1651614162506" timestamp="627917" />
  <Command __id="282" _type="PauseCommand" date="Tue May 03 17:53:12 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="629879">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1962]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="281" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:53:12 EDT 2022" starttimestamp="1651614162506" timestamp="629879" />
  <Command __id="283" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:12 EDT 2022" starttimestamp="1651614162506" timestamp="630019" />
  <Command __id="284" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:12 EDT 2022" starttimestamp="1651614162506" timestamp="630048" />
  <Command __id="286" _type="PauseCommand" date="Tue May 03 17:53:15 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="633258">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3210]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="285" _type="SelectTextCommand" caretOffset="1671" date="Tue May 03 17:53:15 EDT 2022" end="1671" start="1267" starttimestamp="1651614162506" timestamp="633258" />
  <Command __id="288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:16 EDT 2022" starttimestamp="1651614162506" timestamp="633666" />
  <Command __id="44" _type="DiffBasedFileOpenCommand" date="Tue May 03 17:42:43 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="826" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1148">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	HalloweenCommandProcessor getCommandProcessor();

	void setFactories();

	//For A6 checks
	void simulationCommand1(String aCommand);
	void nioInit(String[] args);

}
]]></snapshot>
  </Command>
  <DocumentChange __id="46" _type="Replace" date="Tue May 03 17:42:44 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="826" endLine="25" insertionLength="826" int_docASTNodeCount="1" int_docActiveCodeLength="0" int_docExpressionCount="0" int_docLength="0" length="826" offset="0" startLine="0" starttimestamp="1651614162506" timestamp="1500">
    <deletedText><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	HalloweenCommandProcessor getCommandProcessor();

	void setFactories();

	//For A6 checks
	void simulationCommand1(String aCommand);
	void nioInit(String[] args);

}
]]></deletedText>
    <insertedText><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	HalloweenCommandProcessor getCommandProcessor();

	void setFactories();

	//For A6 checks
	void simulationCommand1(String aCommand);
	void nioInit(String[] args);

}
]]></insertedText>
  </DocumentChange>
  <Command __id="51" _type="DiffBasedFileOpenCommand" date="Tue May 03 17:42:45 EDT 2022" docASTNodeCount="1" docActiveCodeLength="0" docExpressionCount="0" docLength="0" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3375">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObjectRmiGipcNio.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[]]></snapshot>
  </Command>
  <Command __id="60" _type="DiffBasedFileOpenCommand" date="Tue May 03 17:42:55 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="13270">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment6.S22Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

//import util.trace.Tracer;
public class RunTests {
	public static final int MAX_PRINTED_TRACES = 800;
	public static final int MAX_TRACES = 2000;
	public static final int TIME_OUT = 5;

	
	public static void main(final String[] args) {
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(TIME_OUT);
		// You need to always call such a method
		S22Assignment6Suite.main(args);

	}
}

]]></snapshot>
  </Command>
  <Command __id="87" _type="DiffBasedFileOpenCommand" date="Tue May 03 17:43:19 EDT 2022" docASTNodeCount="71" docActiveCodeLength="451" docExpressionCount="43" docLength="541" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="37195">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\Client1.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Client {
	public static void main(final String[] args) {
		try {

			// create client object
			//final ClientRemoteInterfaceRMI client = new ClientRemoteObject();
			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();
			
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="104" _type="DiffBasedFileOpenCommand" date="Tue May 03 17:43:43 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="60805">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="178" _type="DiffBasedFileOpenCommand" date="Tue May 03 17:51:33 EDT 2022" docASTNodeCount="71" docActiveCodeLength="451" docExpressionCount="43" docLength="541" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="530865">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\Client.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Client {
	public static void main(final String[] args) {
		try {

			// create client object
			//final ClientRemoteInterfaceRMI client = new ClientRemoteObject();
			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();
			
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="185" _type="Delete" date="Tue May 03 17:51:40 EDT 2022" docASTNodeCount="71" docActiveCodeLength="439" docExpressionCount="43" docLength="439" endLine="11" length="102" offset="265" repeat="7" startLine="8" starttimestamp="1651614162506" timestamp="537859" timestamp2="539362">
    <text><![CDATA[

			// create client object
			//final ClientRemoteInterfaceRMI client = new ClientRemoteObject();]]></text>
  </DocumentChange>
  <DocumentChange __id="202" _type="Delete" date="Tue May 03 17:51:55 EDT 2022" docASTNodeCount="33" docActiveCodeLength="214" docExpressionCount="27" docLength="214" endLine="17" length="225" offset="207" startLine="6" starttimestamp="1651614162506" timestamp="553411">
    <text><![CDATA[
	public static void main(final String[] args) {
		try {
			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();
			
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}]]></text>
  </DocumentChange>
  <DocumentChange __id="203" _type="Insert" date="Tue May 03 17:51:57 EDT 2022" docASTNodeCount="71" docActiveCodeLength="439" docExpressionCount="43" docLength="439" length="225" offset="207" starttimestamp="1651614162506" timestamp="555190">
    <text><![CDATA[
	public static void main(final String[] args) {
		try {
			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();
			
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}]]></text>
  </DocumentChange>
  <Command __id="211" _type="DiffBasedFileOpenCommand" date="Tue May 03 17:52:16 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13055" docExpressionCount="1211" docLength="14625" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="573978">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.Tracer;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(boolean fake) {
		return;
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand1(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int aProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		aProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		//reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="218" _type="Delete" date="Tue May 03 17:52:32 EDT 2022" docASTNodeCount="1721" docActiveCodeLength="12997" docExpressionCount="1208" docLength="14567" endLine="64" length="58" offset="2855" startLine="64" starttimestamp="1651614162506" timestamp="589658">
    <text><![CDATA[	public static final String EXPERIMENT_COMMAND_2 = "undo";]]></text>
  </DocumentChange>
  <DocumentChange __id="222" _type="Insert" date="Tue May 03 17:52:33 EDT 2022" docASTNodeCount="1721" docActiveCodeLength="13003" docExpressionCount="1208" docLength="14573" length="6" offset="2788" repeat="2" starttimestamp="1651614162506" timestamp="590904" timestamp2="591049">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="226" _type="Replace" date="Tue May 03 17:52:34 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13060" docExpressionCount="1211" docLength="14630" endLine="64" insertionLength="58" int_docASTNodeCount="1721" int_docActiveCodeLength="13002" int_docExpressionCount="1208" int_docLength="14572" length="1" offset="2793" startLine="64" starttimestamp="1651614162506" timestamp="591684">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public static final String EXPERIMENT_COMMAND_2 = "undo";]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="228" _type="Insert" date="Tue May 03 17:52:34 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13063" docExpressionCount="1211" docLength="14633" length="3" offset="2851" starttimestamp="1651614162506" timestamp="591911">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="237" _type="Delete" date="Tue May 03 17:52:38 EDT 2022" docASTNodeCount="1724" docActiveCodeLength="13018" docExpressionCount="1209" docLength="14588" endLine="62" length="45" offset="2743" startLine="62" starttimestamp="1651614162506" timestamp="595987">
    <text><![CDATA[	protected int NUM_EXPERIMENT_COMMANDS = 500;]]></text>
  </DocumentChange>
  <DocumentChange __id="240" _type="Insert" date="Tue May 03 17:52:39 EDT 2022" docASTNodeCount="1724" docActiveCodeLength="13021" docExpressionCount="1209" docLength="14591" length="3" offset="2695" starttimestamp="1651614162506" timestamp="597087">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="242" _type="Replace" date="Tue May 03 17:52:39 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13065" docExpressionCount="1211" docLength="14635" endLine="61" insertionLength="45" int_docASTNodeCount="1724" int_docActiveCodeLength="13020" int_docExpressionCount="1209" int_docLength="14590" length="1" offset="2697" startLine="61" starttimestamp="1651614162506" timestamp="597382">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	protected int NUM_EXPERIMENT_COMMANDS = 500;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="244" _type="Insert" date="Tue May 03 17:52:40 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13068" docExpressionCount="1211" docLength="14638" length="3" offset="2742" starttimestamp="1651614162506" timestamp="597728">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="258" _type="Delete" date="Tue May 03 17:53:00 EDT 2022" docASTNodeCount="1716" docActiveCodeLength="12996" docExpressionCount="1207" docLength="14566" endLine="78" length="72" offset="3161" startLine="77" starttimestamp="1651614162506" timestamp="618391">
    <text><![CDATA[	private static String SERVER_NAME;
	private static String CLIENT_NAME;]]></text>
  </DocumentChange>
  <DocumentChange __id="261" _type="Insert" date="Tue May 03 17:53:02 EDT 2022" docASTNodeCount="1716" docActiveCodeLength="12999" docExpressionCount="1207" docLength="14569" length="3" offset="3073" starttimestamp="1651614162506" timestamp="619513">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="263" _type="Replace" date="Tue May 03 17:53:02 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13070" docExpressionCount="1211" docLength="14640" endLine="74" insertionLength="72" int_docASTNodeCount="1716" int_docActiveCodeLength="12998" int_docExpressionCount="1207" int_docLength="14568" length="1" offset="3075" startLine="74" starttimestamp="1651614162506" timestamp="619738">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	private static String SERVER_NAME;
	private static String CLIENT_NAME;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="271" _type="Delete" date="Tue May 03 17:53:09 EDT 2022" docASTNodeCount="1697" docActiveCodeLength="12842" docExpressionCount="1203" docLength="14408" endLine="86" length="232" offset="3235" repeat="5" startLine="79" starttimestamp="1651614162506" timestamp="626660" timestamp2="627914">
    <text><![CDATA[
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;]]></text>
  </DocumentChange>
  <DocumentChange __id="287" _type="Delete" date="Tue May 03 17:53:16 EDT 2022" docASTNodeCount="1637" docActiveCodeLength="12438" docExpressionCount="1148" docLength="14004" endLine="96" length="404" offset="3693" startLine="92" starttimestamp="1651614162506" timestamp="633657">
    <text><![CDATA[System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));]]></text>
  </DocumentChange>
  <Command __id="290" _type="PauseCommand" date="Tue May 03 17:53:22 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="640148">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6482]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="289" _type="SelectTextCommand" caretOffset="1815" date="Tue May 03 17:53:22 EDT 2022" end="1815" start="1687" starttimestamp="1651614162506" timestamp="640148" />
  <Command __id="292" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:23 EDT 2022" starttimestamp="1651614162506" timestamp="640742" />
  <Command __id="294" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:23 EDT 2022" starttimestamp="1651614162506" timestamp="640919" />
  <Command __id="296" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:23 EDT 2022" starttimestamp="1651614162506" timestamp="641164" />
  <Command __id="298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:23 EDT 2022" starttimestamp="1651614162506" timestamp="641436" />
  <Command __id="300" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:24 EDT 2022" starttimestamp="1651614162506" timestamp="641716" />
  <Command __id="302" _type="PauseCommand" date="Tue May 03 17:53:28 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="645869">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4153]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="301" _type="SelectTextCommand" caretOffset="2282" date="Tue May 03 17:53:28 EDT 2022" end="2282" start="2071" starttimestamp="1651614162506" timestamp="645869" />
  <Command __id="304" _type="PauseCommand" date="Tue May 03 17:53:30 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="648298">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2429]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="303" _type="SelectTextCommand" caretOffset="1782" date="Tue May 03 17:53:30 EDT 2022" end="2307" start="1782" starttimestamp="1651614162506" timestamp="648298" />
  <Command __id="305" _type="MoveCaretCommand" caretOffset="2043" date="Tue May 03 17:53:31 EDT 2022" docOffset="4469" starttimestamp="1651614162506" timestamp="648603" />
  <Command __id="307" _type="PauseCommand" date="Tue May 03 17:53:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="650143">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1540]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="306" _type="SelectTextCommand" caretOffset="2301" date="Tue May 03 17:53:32 EDT 2022" end="2301" start="2067" starttimestamp="1651614162506" timestamp="650143" />
  <Command __id="309" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:33 EDT 2022" starttimestamp="1651614162506" timestamp="650601" />
  <Command __id="311" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:33 EDT 2022" starttimestamp="1651614162506" timestamp="651000" />
  <Command __id="313" _type="PauseCommand" date="Tue May 03 17:53:34 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="652404">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1404]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="312" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:53:34 EDT 2022" starttimestamp="1651614162506" timestamp="652404" />
  <Command __id="314" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:35 EDT 2022" starttimestamp="1651614162506" timestamp="652546" />
  <Command __id="315" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:35 EDT 2022" starttimestamp="1651614162506" timestamp="652572" />
  <Command __id="317" _type="PauseCommand" date="Tue May 03 17:53:38 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="656057">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3485]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="318" _type="UndoCommand" date="Tue May 03 17:53:38 EDT 2022" starttimestamp="1651614162506" timestamp="656061" />
  <Command __id="320" _type="UndoCommand" date="Tue May 03 17:53:38 EDT 2022" starttimestamp="1651614162506" timestamp="656429" />
  <Command __id="322" _type="UndoCommand" date="Tue May 03 17:53:39 EDT 2022" starttimestamp="1651614162506" timestamp="656913" />
  <Command __id="324" _type="UndoCommand" date="Tue May 03 17:53:39 EDT 2022" starttimestamp="1651614162506" timestamp="657372" />
  <Command __id="326" _type="UndoCommand" date="Tue May 03 17:53:40 EDT 2022" starttimestamp="1651614162506" timestamp="657755" />
  <Command __id="328" _type="UndoCommand" date="Tue May 03 17:53:40 EDT 2022" starttimestamp="1651614162506" timestamp="658179" />
  <Command __id="330" _type="UndoCommand" date="Tue May 03 17:53:41 EDT 2022" starttimestamp="1651614162506" timestamp="659027" />
  <Command __id="332" _type="PauseCommand" date="Tue May 03 17:53:42 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="660045">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1018]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="333" _type="UndoCommand" date="Tue May 03 17:53:42 EDT 2022" starttimestamp="1651614162506" timestamp="660056" />
  <Command __id="335" _type="UndoCommand" date="Tue May 03 17:53:43 EDT 2022" starttimestamp="1651614162506" timestamp="660534" />
  <Command __id="337" _type="UndoCommand" date="Tue May 03 17:53:43 EDT 2022" starttimestamp="1651614162506" timestamp="661117" />
  <Command __id="339" _type="PauseCommand" date="Tue May 03 17:53:45 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="662793">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1676]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="340" _type="CutCommand" date="Tue May 03 17:53:45 EDT 2022" starttimestamp="1651614162506" timestamp="662807" />
  <Command __id="341" _type="MoveCaretCommand" caretOffset="647" date="Tue May 03 17:53:45 EDT 2022" docOffset="3073" starttimestamp="1651614162506" timestamp="663335" />
  <Command __id="343" _type="PasteCommand" date="Tue May 03 17:53:46 EDT 2022" starttimestamp="1651614162506" timestamp="664054" />
  <Command __id="345" _type="PauseCommand" date="Tue May 03 17:53:48 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="665868">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1814]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="344" _type="SelectTextCommand" caretOffset="808" date="Tue May 03 17:53:48 EDT 2022" end="816" start="808" starttimestamp="1651614162506" timestamp="665868" />
  <Command __id="347" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:48 EDT 2022" starttimestamp="1651614162506" timestamp="666415" />
  <Command __id="349" _type="PauseCommand" date="Tue May 03 17:53:52 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="669511">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3096]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="348" _type="SelectTextCommand" caretOffset="2316" date="Tue May 03 17:53:52 EDT 2022" end="2316" start="2312" starttimestamp="1651614162506" timestamp="669511" />
  <Command __id="351" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:52 EDT 2022" starttimestamp="1651614162506" timestamp="669632" />
  <Command __id="353" _type="PauseCommand" date="Tue May 03 17:53:54 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="671714">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2082]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="352" _type="SelectTextCommand" caretOffset="3056" date="Tue May 03 17:53:54 EDT 2022" end="3056" start="2826" starttimestamp="1651614162506" timestamp="671714" />
  <Command __id="355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:54 EDT 2022" starttimestamp="1651614162506" timestamp="671808" />
  <Command __id="357" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:54 EDT 2022" starttimestamp="1651614162506" timestamp="672095" />
  <Command __id="359" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:54 EDT 2022" starttimestamp="1651614162506" timestamp="672312" />
  <Command __id="361" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:53:55 EDT 2022" starttimestamp="1651614162506" timestamp="672598" />
  <Command __id="363" _type="PauseCommand" date="Tue May 03 17:53:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="673914">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1316]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="362" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:53:56 EDT 2022" starttimestamp="1651614162506" timestamp="673914" />
  <Command __id="364" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:56 EDT 2022" starttimestamp="1651614162506" timestamp="674005" />
  <Command __id="365" _type="EclipseCommand" commandID="" date="Tue May 03 17:53:56 EDT 2022" starttimestamp="1651614162506" timestamp="674047" />
  <Command __id="367" _type="PauseCommand" date="Tue May 03 17:54:12 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="690138">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[16091]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="366" _type="SelectTextCommand" caretOffset="5931" date="Tue May 03 17:54:12 EDT 2022" end="5966" start="5931" starttimestamp="1651614162506" timestamp="690138" />
  <Command __id="369" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:13 EDT 2022" starttimestamp="1651614162506" timestamp="690577" />
  <Command __id="371" _type="PauseCommand" date="Tue May 03 17:54:14 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="692138">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1561]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="370" _type="SelectTextCommand" caretOffset="6117" date="Tue May 03 17:54:14 EDT 2022" end="6143" start="6117" starttimestamp="1651614162506" timestamp="692138" />
  <Command __id="373" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:14 EDT 2022" starttimestamp="1651614162506" timestamp="692221" />
  <Command __id="375" _type="PauseCommand" date="Tue May 03 17:54:16 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="693621">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1400]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="374" _type="SelectTextCommand" caretOffset="6400" date="Tue May 03 17:54:16 EDT 2022" end="6424" start="6400" starttimestamp="1651614162506" timestamp="693621" />
  <Command __id="377" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:16 EDT 2022" starttimestamp="1651614162506" timestamp="693710" />
  <Command __id="379" _type="PauseCommand" date="Tue May 03 17:54:18 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="696296">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2586]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="378" _type="SelectTextCommand" caretOffset="6631" date="Tue May 03 17:54:18 EDT 2022" end="6631" start="6597" starttimestamp="1651614162506" timestamp="696296" />
  <Command __id="381" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:18 EDT 2022" starttimestamp="1651614162506" timestamp="696379" />
  <Command __id="382" _type="SelectTextCommand" caretOffset="6756" date="Tue May 03 17:54:19 EDT 2022" end="6790" start="6756" starttimestamp="1651614162506" timestamp="697339" />
  <Command __id="384" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:19 EDT 2022" starttimestamp="1651614162506" timestamp="697431" />
  <Command __id="386" _type="PauseCommand" date="Tue May 03 17:54:21 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="699334">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1903]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="385" _type="SelectTextCommand" caretOffset="6881" date="Tue May 03 17:54:21 EDT 2022" end="6930" start="6881" starttimestamp="1651614162506" timestamp="699334" />
  <Command __id="388" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:21 EDT 2022" starttimestamp="1651614162506" timestamp="699445" />
  <Command __id="390" _type="PauseCommand" date="Tue May 03 17:54:25 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="702689">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3244]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="389" _type="SelectTextCommand" caretOffset="7241" date="Tue May 03 17:54:25 EDT 2022" end="7241" start="7135" starttimestamp="1651614162506" timestamp="702689" />
  <Command __id="392" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:25 EDT 2022" starttimestamp="1651614162506" timestamp="702764" />
  <Command __id="394" _type="PauseCommand" date="Tue May 03 17:54:27 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="705298">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2534]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="393" _type="SelectTextCommand" caretOffset="7416" date="Tue May 03 17:54:27 EDT 2022" end="7416" start="7371" starttimestamp="1651614162506" timestamp="705298" />
  <Command __id="396" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:27 EDT 2022" starttimestamp="1651614162506" timestamp="705386" />
  <Command __id="398" _type="PauseCommand" date="Tue May 03 17:54:29 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="707400">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2014]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="397" _type="SelectTextCommand" caretOffset="7808" date="Tue May 03 17:54:29 EDT 2022" end="7808" start="7731" starttimestamp="1651614162506" timestamp="707400" />
  <Command __id="400" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:29 EDT 2022" starttimestamp="1651614162506" timestamp="707483" />
  <Command __id="402" _type="PauseCommand" date="Tue May 03 17:54:31 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="709060">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1577]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="401" _type="SelectTextCommand" caretOffset="7880" date="Tue May 03 17:54:31 EDT 2022" end="7880" start="7787" starttimestamp="1651614162506" timestamp="709060" />
  <Command __id="404" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:31 EDT 2022" starttimestamp="1651614162506" timestamp="709121" />
  <Command __id="406" _type="PauseCommand" date="Tue May 03 17:54:34 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="711585">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2464]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="405" _type="SelectTextCommand" caretOffset="7876" date="Tue May 03 17:54:34 EDT 2022" end="7876" start="7874" starttimestamp="1651614162506" timestamp="711585" />
  <DocumentChange __id="291" _type="Delete" date="Tue May 03 17:53:23 EDT 2022" docASTNodeCount="1623" docActiveCodeLength="12308" docExpressionCount="1136" docLength="13870" endLine="106" length="134" offset="4107" repeat="5" startLine="102" starttimestamp="1651614162506" timestamp="640734" timestamp2="641713">
    <text><![CDATA[

		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="308" _type="Delete" date="Tue May 03 17:53:33 EDT 2022" docASTNodeCount="1595" docActiveCodeLength="12076" docExpressionCount="1115" docLength="13634" endLine="129" length="236" offset="4491" repeat="2" startLine="120" starttimestamp="1651614162506" timestamp="650595" timestamp2="650996">
    <text><![CDATA[

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);]]></text>
  </DocumentChange>
  <DocumentChange __id="316" _type="Insert" date="Tue May 03 17:53:38 EDT 2022" docASTNodeCount="1623" docActiveCodeLength="12308" docExpressionCount="1136" docLength="13870" length="236" offset="4491" repeat="2" starttimestamp="1651614162506" timestamp="656057" timestamp2="656426">
    <text><![CDATA[

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);]]></text>
  </DocumentChange>
  <DocumentChange __id="321" _type="Insert" date="Tue May 03 17:53:39 EDT 2022" docASTNodeCount="1637" docActiveCodeLength="12438" docExpressionCount="1148" docLength="14004" length="134" offset="4107" repeat="2" starttimestamp="1651614162506" timestamp="656907" timestamp2="657369">
    <text><![CDATA[

		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);]]></text>
  </DocumentChange>
  <DocumentChange __id="325" _type="Insert" date="Tue May 03 17:53:40 EDT 2022" docASTNodeCount="1697" docActiveCodeLength="12842" docExpressionCount="1203" docLength="14408" length="404" offset="3693" starttimestamp="1651614162506" timestamp="657750">
    <text><![CDATA[System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));]]></text>
  </DocumentChange>
  <DocumentChange __id="327" _type="Insert" date="Tue May 03 17:53:40 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13070" docExpressionCount="1211" docLength="14640" length="232" offset="3235" repeat="2" starttimestamp="1651614162506" timestamp="658176" timestamp2="659009">
    <text><![CDATA[
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;]]></text>
  </DocumentChange>
  <DocumentChange __id="331" _type="Replace" date="Tue May 03 17:53:42 EDT 2022" docASTNodeCount="1716" docActiveCodeLength="12999" docExpressionCount="1207" docLength="14569" endLine="75" insertionLength="1" int_docASTNodeCount="1716" int_docActiveCodeLength="12998" int_docExpressionCount="1207" int_docLength="14568" length="72" offset="3075" startLine="74" starttimestamp="1651614162506" timestamp="660045">
    <deletedText><![CDATA[	private static String SERVER_NAME;
	private static String CLIENT_NAME;]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="334" _type="Delete" date="Tue May 03 17:53:43 EDT 2022" docASTNodeCount="1716" docActiveCodeLength="12996" docExpressionCount="1207" docLength="14566" endLine="74" length="3" offset="3073" startLine="73" starttimestamp="1651614162506" timestamp="660528">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="336" _type="Insert" date="Tue May 03 17:53:43 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13068" docExpressionCount="1211" docLength="14638" length="72" offset="3161" starttimestamp="1651614162506" timestamp="661113">
    <text><![CDATA[	private static String SERVER_NAME;
	private static String CLIENT_NAME;]]></text>
  </DocumentChange>
  <DocumentChange __id="338" _type="Delete" date="Tue May 03 17:53:45 EDT 2022" docASTNodeCount="1716" docActiveCodeLength="12996" docExpressionCount="1207" docLength="14566" endLine="78" length="72" offset="3161" startLine="77" starttimestamp="1651614162506" timestamp="662793">
    <text><![CDATA[	private static String SERVER_NAME;
	private static String CLIENT_NAME;]]></text>
  </DocumentChange>
  <DocumentChange __id="342" _type="Replace" date="Tue May 03 17:53:46 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13067" docExpressionCount="1211" docLength="14637" endLine="73" insertionLength="72" int_docASTNodeCount="1716" int_docActiveCodeLength="12995" int_docExpressionCount="1207" int_docLength="14565" length="1" offset="3072" startLine="73" starttimestamp="1651614162506" timestamp="664045">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	private static String SERVER_NAME;
	private static String CLIENT_NAME;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="346" _type="Delete" date="Tue May 03 17:53:48 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13063" docExpressionCount="1211" docLength="14629" endLine="80" length="8" offset="3234" startLine="79" starttimestamp="1651614162506" timestamp="666409">
    <text><![CDATA[	
	//A5]]></text>
  </DocumentChange>
  <DocumentChange __id="350" _type="Delete" date="Tue May 03 17:53:52 EDT 2022" docASTNodeCount="1730" docActiveCodeLength="13063" docExpressionCount="1211" docLength="14625" endLine="113" length="4" offset="4738" startLine="113" starttimestamp="1651614162506" timestamp="669627">
    <text><![CDATA[//A5]]></text>
  </DocumentChange>
  <DocumentChange __id="354" _type="Delete" date="Tue May 03 17:53:54 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12833" docExpressionCount="1190" docLength="14391" endLine="142" length="234" offset="5248" repeat="4" startLine="134" starttimestamp="1651614162506" timestamp="671803" timestamp2="672595">
    <text><![CDATA[
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);]]></text>
  </DocumentChange>
  <DocumentChange __id="368" _type="Delete" date="Tue May 03 17:54:13 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12831" docExpressionCount="1190" docLength="14356" endLine="153" length="35" offset="5931" startLine="153" starttimestamp="1651614162506" timestamp="690570">
    <text><![CDATA[		//Register Client with GIPC Proxy]]></text>
  </DocumentChange>
  <DocumentChange __id="372" _type="Delete" date="Tue May 03 17:54:14 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12825" docExpressionCount="1190" docLength="14330" endLine="162" length="26" offset="6117" startLine="161" starttimestamp="1651614162506" timestamp="692214">
    <text><![CDATA[		
		// Locate RMI Server]]></text>
  </DocumentChange>
  <DocumentChange __id="376" _type="Delete" date="Tue May 03 17:54:16 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12823" docExpressionCount="1190" docLength="14306" endLine="169" length="24" offset="6400" startLine="169" starttimestamp="1651614162506" timestamp="693694">
    <text><![CDATA[		// Get RMI server here]]></text>
  </DocumentChange>
  <DocumentChange __id="380" _type="Delete" date="Tue May 03 17:54:18 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12823" docExpressionCount="1190" docLength="14272" endLine="175" length="34" offset="6597" startLine="175" starttimestamp="1651614162506" timestamp="696374">
    <text><![CDATA[// TODO Auto-generated catch block]]></text>
  </DocumentChange>
  <DocumentChange __id="383" _type="Delete" date="Tue May 03 17:54:19 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12821" docExpressionCount="1190" docLength="14238" endLine="184" length="34" offset="6756" startLine="184" starttimestamp="1651614162506" timestamp="697428">
    <text><![CDATA[		// export client to create proxy]]></text>
  </DocumentChange>
  <DocumentChange __id="387" _type="Delete" date="Tue May 03 17:54:21 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12819" docExpressionCount="1190" docLength="14189" endLine="191" length="49" offset="6881" startLine="191" starttimestamp="1651614162506" timestamp="699441">
    <text><![CDATA[		// have the server register the exported client]]></text>
  </DocumentChange>
  <DocumentChange __id="391" _type="Delete" date="Tue May 03 17:54:25 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12815" docExpressionCount="1190" docLength="14083" endLine="201" length="106" offset="7135" startLine="200" starttimestamp="1651614162506" timestamp="702758">
    <text><![CDATA[//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener]]></text>
  </DocumentChange>
  <DocumentChange __id="395" _type="Delete" date="Tue May 03 17:54:27 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12815" docExpressionCount="1190" docLength="14038" endLine="208" length="45" offset="7371" startLine="208" starttimestamp="1651614162506" timestamp="705382">
    <text><![CDATA[//final int aProposalNumber = proposalNumber;]]></text>
  </DocumentChange>
  <DocumentChange __id="399" _type="Delete" date="Tue May 03 17:54:29 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12815" docExpressionCount="1190" docLength="13961" endLine="220" length="77" offset="7731" startLine="218" starttimestamp="1651614162506" timestamp="707478">
    <text><![CDATA[/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */]]></text>
  </DocumentChange>
  <DocumentChange __id="403" _type="Delete" date="Tue May 03 17:54:31 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12803" docExpressionCount="1190" docLength="13868" endLine="223" length="93" offset="7787" startLine="220" starttimestamp="1651614162506" timestamp="709115">
    <text><![CDATA[//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}]]></text>
  </DocumentChange>
  <Command __id="408" _type="PauseCommand" date="Tue May 03 17:54:35 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="712611">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1026]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="407" _type="SelectTextCommand" caretOffset="7836" date="Tue May 03 17:54:35 EDT 2022" end="7908" start="7836" starttimestamp="1651614162506" timestamp="712611" />
  <Command __id="410" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:35 EDT 2022" starttimestamp="1651614162506" timestamp="712695" />
  <Command __id="412" _type="PauseCommand" date="Tue May 03 17:54:37 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="715428">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2733]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="411" _type="SelectTextCommand" caretOffset="8194" date="Tue May 03 17:54:37 EDT 2022" end="8194" start="8148" starttimestamp="1651614162506" timestamp="715428" />
  <Command __id="414" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:37 EDT 2022" starttimestamp="1651614162506" timestamp="715477" />
  <Command __id="416" _type="PauseCommand" date="Tue May 03 17:54:39 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="717291">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1814]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="415" _type="SelectTextCommand" caretOffset="8489" date="Tue May 03 17:54:39 EDT 2022" end="8489" start="8444" starttimestamp="1651614162506" timestamp="717291" />
  <Command __id="418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:39 EDT 2022" starttimestamp="1651614162506" timestamp="717361" />
  <Command __id="420" _type="PauseCommand" date="Tue May 03 17:54:44 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="722444">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5083]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="419" _type="SelectTextCommand" caretOffset="8455" date="Tue May 03 17:54:44 EDT 2022" end="8479" start="8455" starttimestamp="1651614162506" timestamp="722444" />
  <Command __id="422" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:45 EDT 2022" starttimestamp="1651614162506" timestamp="722912" />
  <Command __id="423" _type="SelectTextCommand" caretOffset="8697" date="Tue May 03 17:54:46 EDT 2022" end="8731" start="8697" starttimestamp="1651614162506" timestamp="723826" />
  <Command __id="425" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:46 EDT 2022" starttimestamp="1651614162506" timestamp="723864" />
  <Command __id="427" _type="PauseCommand" date="Tue May 03 17:54:48 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="725569">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1705]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="426" _type="SelectTextCommand" caretOffset="8918" date="Tue May 03 17:54:48 EDT 2022" end="8918" start="8876" starttimestamp="1651614162506" timestamp="725569" />
  <Command __id="429" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:48 EDT 2022" starttimestamp="1651614162506" timestamp="725648" />
  <Command __id="431" _type="PauseCommand" date="Tue May 03 17:54:52 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="730214">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4566]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="430" _type="SelectTextCommand" caretOffset="10709" date="Tue May 03 17:54:52 EDT 2022" end="10709" start="10598" starttimestamp="1651614162506" timestamp="730214" />
  <Command __id="433" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:52 EDT 2022" starttimestamp="1651614162506" timestamp="730332" />
  <Command __id="435" _type="PauseCommand" date="Tue May 03 17:54:54 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="731652">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1320]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="434" _type="SelectTextCommand" caretOffset="10497" date="Tue May 03 17:54:54 EDT 2022" end="10497" start="10491" starttimestamp="1651614162506" timestamp="731652" />
  <Command __id="437" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:54 EDT 2022" starttimestamp="1651614162506" timestamp="731725" />
  <Command __id="439" _type="PauseCommand" date="Tue May 03 17:54:55 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="733267">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1542]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="440" _type="UndoCommand" date="Tue May 03 17:54:55 EDT 2022" starttimestamp="1651614162506" timestamp="733271" />
  <Command __id="441" _type="MoveCaretCommand" caretOffset="10519" date="Tue May 03 17:54:56 EDT 2022" docOffset="10519" starttimestamp="1651614162506" timestamp="734012" />
  <DocumentChange __id="409" _type="Delete" date="Tue May 03 17:54:35 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12731" docExpressionCount="1178" docLength="13796" endLine="223" length="72" offset="7836" startLine="222" starttimestamp="1651614162506" timestamp="712690">
    <text><![CDATA[		System.out.println("IPC Mechanism");
		System.out.println(mechanism);]]></text>
  </DocumentChange>
  <DocumentChange __id="413" _type="Delete" date="Tue May 03 17:54:37 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12685" docExpressionCount="1172" docLength="13750" endLine="230" length="46" offset="8148" startLine="230" starttimestamp="1651614162506" timestamp="715474">
    <text><![CDATA[System.out.println("using gipc proxy server");]]></text>
  </DocumentChange>
  <DocumentChange __id="417" _type="Delete" date="Tue May 03 17:54:39 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12640" docExpressionCount="1166" docLength="13705" endLine="236" length="45" offset="8444" startLine="236" starttimestamp="1651614162506" timestamp="717358">
    <text><![CDATA[System.out.println("using RMI proxy server");]]></text>
  </DocumentChange>
  <DocumentChange __id="421" _type="Delete" date="Tue May 03 17:54:45 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12638" docExpressionCount="1166" docLength="13681" endLine="239" length="24" offset="8455" startLine="239" starttimestamp="1651614162506" timestamp="722908">
    <text><![CDATA[		//IPC Mechanism Change]]></text>
  </DocumentChange>
  <DocumentChange __id="424" _type="Delete" date="Tue May 03 17:54:46 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12638" docExpressionCount="1166" docLength="13647" endLine="244" length="34" offset="8697" startLine="244" starttimestamp="1651614162506" timestamp="723861">
    <text><![CDATA[// TODO Auto-generated catch block]]></text>
  </DocumentChange>
  <DocumentChange __id="428" _type="Delete" date="Tue May 03 17:54:48 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12638" docExpressionCount="1166" docLength="13605" endLine="252" length="42" offset="8876" startLine="252" starttimestamp="1651614162506" timestamp="725645">
    <text><![CDATA[//commandProcessor.setInputString("quit");]]></text>
  </DocumentChange>
  <DocumentChange __id="432" _type="Delete" date="Tue May 03 17:54:52 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12621" docExpressionCount="1166" docLength="13494" endLine="316" length="111" offset="10598" startLine="313" starttimestamp="1651614162506" timestamp="730325">
    <text><![CDATA[	//Create new read thread Runnable
		//reader = new ClientReadThread(this);
						
		//Create new readThread]]></text>
  </DocumentChange>
  <DocumentChange __id="436" _type="Delete" date="Tue May 03 17:54:54 EDT 2022" docASTNodeCount="1671" docActiveCodeLength="12593" docExpressionCount="1163" docLength="13488" endLine="307" length="6" offset="10491" startLine="306" starttimestamp="1651614162506" timestamp="731718">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="438" _type="Insert" date="Tue May 03 17:54:55 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12621" docExpressionCount="1166" docLength="13494" length="6" offset="10491" starttimestamp="1651614162506" timestamp="733267">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <Command __id="443" _type="PauseCommand" date="Tue May 03 17:54:59 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="736655">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2643]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="442" _type="SelectTextCommand" caretOffset="10449" date="Tue May 03 17:54:59 EDT 2022" end="10491" start="10449" starttimestamp="1651614162506" timestamp="736655" />
  <Command __id="445" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue May 03 17:54:59 EDT 2022" starttimestamp="1651614162506" timestamp="737115" />
  <Command __id="447" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:54:59 EDT 2022" starttimestamp="1651614162506" timestamp="737133" />
  <Command __id="450" _type="PauseCommand" date="Tue May 03 17:55:00 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="738423">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1290]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="449" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:00 EDT 2022" starttimestamp="1651614162506" timestamp="738423" />
  <Command __id="452" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:01 EDT 2022" starttimestamp="1651614162506" timestamp="738684" />
  <Command __id="454" _type="PauseCommand" date="Tue May 03 17:55:03 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="741210">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2526]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="453" _type="SelectTextCommand" caretOffset="10978" date="Tue May 03 17:55:03 EDT 2022" end="10978" start="10741" starttimestamp="1651614162506" timestamp="741210" />
  <Command __id="456" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:03 EDT 2022" starttimestamp="1651614162506" timestamp="741254" />
  <Command __id="458" _type="PauseCommand" date="Tue May 03 17:55:04 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="742448">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1194]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="457" _type="SelectTextCommand" caretOffset="10710" date="Tue May 03 17:55:04 EDT 2022" end="10710" start="10677" starttimestamp="1651614162506" timestamp="742448" />
  <Command __id="460" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:04 EDT 2022" starttimestamp="1651614162506" timestamp="742481" />
  <Command __id="462" _type="PauseCommand" date="Tue May 03 17:55:07 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="744816">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2335]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="461" _type="SelectTextCommand" caretOffset="10967" date="Tue May 03 17:55:07 EDT 2022" end="10967" start="10933" starttimestamp="1651614162506" timestamp="744816" />
  <Command __id="464" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:07 EDT 2022" starttimestamp="1651614162506" timestamp="744870" />
  <Command __id="466" _type="PauseCommand" date="Tue May 03 17:55:08 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="746282">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1412]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="465" _type="SelectTextCommand" caretOffset="11137" date="Tue May 03 17:55:08 EDT 2022" end="11171" start="11137" starttimestamp="1651614162506" timestamp="746282" />
  <Command __id="468" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:08 EDT 2022" starttimestamp="1651614162506" timestamp="746303" />
  <Command __id="470" _type="PauseCommand" date="Tue May 03 17:55:10 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="747598">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1295]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="469" _type="SelectTextCommand" caretOffset="11268" date="Tue May 03 17:55:10 EDT 2022" end="11268" start="11234" starttimestamp="1651614162506" timestamp="747598" />
  <Command __id="472" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:10 EDT 2022" starttimestamp="1651614162506" timestamp="747635" />
  <Command __id="474" _type="PauseCommand" date="Tue May 03 17:55:12 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="750110">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2475]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="473" _type="SelectTextCommand" caretOffset="11378" date="Tue May 03 17:55:12 EDT 2022" end="11378" start="11344" starttimestamp="1651614162506" timestamp="750110" />
  <Command __id="476" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:55:12 EDT 2022" starttimestamp="1651614162506" timestamp="750170" />
  <Command __id="486" _type="PauseCommand" date="Tue May 03 17:55:21 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="759359">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2273]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="485" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 17:55:21 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="759359" type="Run" />
  <Command __id="488" _type="PauseCommand" date="Tue May 03 17:55:24 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="761810">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2451]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="487" _type="ShellCommand" date="Tue May 03 17:55:24 EDT 2022" starttimestamp="1651614162506" timestamp="761810" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="490" _type="PauseCommand" date="Tue May 03 17:55:47 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="784638">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22828]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="489" _type="ConsoleOutput" date="Tue May 03 17:55:47 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="784638" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21484
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"2568"), Diff(INSERT,"1484"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="492" _type="PauseCommand" date="Tue May 03 17:56:01 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="798938">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14300]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="491" _type="ConsoleOutput" date="Tue May 03 17:56:01 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="798938" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14245
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(EQUAL,"14"), Diff(DELETE,"84"), Diff(INSERT,"245"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="494" _type="PauseCommand" date="Tue May 03 17:56:15 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="813142">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14204]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="493" _type="ConsoleOutput" date="Tue May 03 17:56:15 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="813142" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14248
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1424"), Diff(DELETE,"5"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="496" _type="PauseCommand" date="Tue May 03 17:56:44 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="842094">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[28952]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="495" _type="ShellCommand" date="Tue May 03 17:56:44 EDT 2022" starttimestamp="1651614162506" timestamp="842094" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="497" _type="MoveCaretCommand" caretOffset="11658" date="Tue May 03 17:56:44 EDT 2022" docOffset="11658" starttimestamp="1651614162506" timestamp="842144" />
  <Command __id="499" _type="PauseCommand" date="Tue May 03 17:56:45 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="843276">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1132]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="498" _type="MoveCaretCommand" caretOffset="11913" date="Tue May 03 17:56:45 EDT 2022" docOffset="11913" starttimestamp="1651614162506" timestamp="843276" />
  <Command __id="501" _type="PauseCommand" date="Tue May 03 17:56:48 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="845867">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2591]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="500" _type="MoveCaretCommand" caretOffset="11137" date="Tue May 03 17:56:48 EDT 2022" docOffset="11137" starttimestamp="1651614162506" timestamp="845867" />
  <Command __id="503" _type="PauseCommand" date="Tue May 03 17:56:49 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="847009">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1142]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="504" _type="InsertStringCommand" date="Tue May 03 17:56:49 EDT 2022" starttimestamp="1651614162506" timestamp="847012" timestamp2="847012">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="506" _type="InsertStringCommand" date="Tue May 03 17:56:49 EDT 2022" starttimestamp="1651614162506" timestamp="847168" timestamp2="847168">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="508" _type="InsertStringCommand" date="Tue May 03 17:56:49 EDT 2022" starttimestamp="1651614162506" timestamp="847249" timestamp2="847249">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="510" _type="InsertStringCommand" date="Tue May 03 17:56:49 EDT 2022" starttimestamp="1651614162506" timestamp="847347" timestamp2="847347">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="512" _type="InsertStringCommand" date="Tue May 03 17:56:49 EDT 2022" starttimestamp="1651614162506" timestamp="847427" timestamp2="847427">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:56:50 EDT 2022" starttimestamp="1651614162506" timestamp="847955" />
  <Command __id="516" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:56:50 EDT 2022" starttimestamp="1651614162506" timestamp="848076" />
  <Command __id="518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:56:50 EDT 2022" starttimestamp="1651614162506" timestamp="848186" />
  <Command __id="520" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:56:50 EDT 2022" starttimestamp="1651614162506" timestamp="848296" />
  <Command __id="522" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:56:50 EDT 2022" starttimestamp="1651614162506" timestamp="848415" />
  <Command __id="524" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:56:51 EDT 2022" starttimestamp="1651614162506" timestamp="848525" />
  <Command __id="526" _type="PauseCommand" date="Tue May 03 17:56:54 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="851905">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3380]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="525" _type="SelectTextCommand" caretOffset="11046" date="Tue May 03 17:56:54 EDT 2022" end="11046" start="10990" starttimestamp="1651614162506" timestamp="851905" />
  <Command __id="527" _type="CopyCommand" date="Tue May 03 17:56:54 EDT 2022" starttimestamp="1651614162506" timestamp="852448" />
  <Command __id="528" _type="MoveCaretCommand" caretOffset="11136" date="Tue May 03 17:56:55 EDT 2022" docOffset="11136" starttimestamp="1651614162506" timestamp="852920" />
  <Command __id="530" _type="PasteCommand" date="Tue May 03 17:56:55 EDT 2022" starttimestamp="1651614162506" timestamp="853262" />
  <Command __id="532" _type="PauseCommand" date="Tue May 03 17:56:57 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="855344">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2082]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="531" _type="SelectTextCommand" caretOffset="11178" date="Tue May 03 17:56:57 EDT 2022" end="11178" start="11156" starttimestamp="1651614162506" timestamp="855344" />
  <Command __id="533" _type="MoveCaretCommand" caretOffset="11178" date="Tue May 03 17:56:58 EDT 2022" docOffset="11178" starttimestamp="1651614162506" timestamp="855500" />
  <Command __id="535" _type="PauseCommand" date="Tue May 03 17:56:59 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="857160">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1660]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="534" _type="SelectTextCommand" caretOffset="11197" date="Tue May 03 17:56:59 EDT 2022" end="11197" start="11157" starttimestamp="1651614162506" timestamp="857160" />
  <Command __id="537" _type="PauseCommand" date="Tue May 03 17:57:01 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="858811">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1651]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="536" _type="MoveCaretCommand" caretOffset="11164" date="Tue May 03 17:57:01 EDT 2022" docOffset="11164" starttimestamp="1651614162506" timestamp="858811" />
  <Command __id="539" _type="PauseCommand" date="Tue May 03 17:57:03 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="860595">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1784]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="538" _type="SelectTextCommand" caretOffset="11190" date="Tue May 03 17:57:03 EDT 2022" end="11190" start="11157" starttimestamp="1651614162506" timestamp="860595" />
  <Command __id="541" _type="InsertStringCommand" date="Tue May 03 17:57:03 EDT 2022" starttimestamp="1651614162506" timestamp="861203" timestamp2="861203">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="543" _type="InsertStringCommand" date="Tue May 03 17:57:03 EDT 2022" starttimestamp="1651614162506" timestamp="861383" timestamp2="861383">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="545" _type="InsertStringCommand" date="Tue May 03 17:57:03 EDT 2022" starttimestamp="1651614162506" timestamp="861451" timestamp2="861451">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="547" _type="InsertStringCommand" date="Tue May 03 17:57:04 EDT 2022" starttimestamp="1651614162506" timestamp="861550" timestamp2="861550">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="549" _type="InsertStringCommand" date="Tue May 03 17:57:04 EDT 2022" starttimestamp="1651614162506" timestamp="861669" timestamp2="861669">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="551" _type="InsertStringCommand" date="Tue May 03 17:57:04 EDT 2022" starttimestamp="1651614162506" timestamp="861810" timestamp2="861810">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="553" _type="InsertStringCommand" date="Tue May 03 17:57:04 EDT 2022" starttimestamp="1651614162506" timestamp="861936" timestamp2="861936">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="555" _type="InsertStringCommand" date="Tue May 03 17:57:04 EDT 2022" starttimestamp="1651614162506" timestamp="862031" timestamp2="862031">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="557" _type="InsertStringCommand" date="Tue May 03 17:57:04 EDT 2022" starttimestamp="1651614162506" timestamp="862491" timestamp2="862491">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="559" _type="InsertStringCommand" date="Tue May 03 17:57:05 EDT 2022" starttimestamp="1651614162506" timestamp="862692" timestamp2="862692">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="561" _type="InsertStringCommand" date="Tue May 03 17:57:05 EDT 2022" starttimestamp="1651614162506" timestamp="862788" timestamp2="862788">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="563" _type="InsertStringCommand" date="Tue May 03 17:57:05 EDT 2022" starttimestamp="1651614162506" timestamp="863120" timestamp2="863120">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="565" _type="InsertStringCommand" date="Tue May 03 17:57:05 EDT 2022" starttimestamp="1651614162506" timestamp="863289" timestamp2="863289">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="567" _type="InsertStringCommand" date="Tue May 03 17:57:05 EDT 2022" starttimestamp="1651614162506" timestamp="863409" timestamp2="863409">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="569" _type="PauseCommand" date="Tue May 03 17:57:08 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="865615">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2206]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="570" _type="InsertStringCommand" date="Tue May 03 17:57:08 EDT 2022" starttimestamp="1651614162506" timestamp="865618" timestamp2="865618">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="572" _type="InsertStringCommand" date="Tue May 03 17:57:08 EDT 2022" starttimestamp="1651614162506" timestamp="865757" timestamp2="865757">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="574" _type="InsertStringCommand" date="Tue May 03 17:57:08 EDT 2022" starttimestamp="1651614162506" timestamp="865918" timestamp2="865918">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="576" _type="InsertStringCommand" date="Tue May 03 17:57:08 EDT 2022" starttimestamp="1651614162506" timestamp="865949" timestamp2="865949">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="578" _type="InsertStringCommand" date="Tue May 03 17:57:08 EDT 2022" starttimestamp="1651614162506" timestamp="866049" timestamp2="866049">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="580" _type="InsertStringCommand" date="Tue May 03 17:57:08 EDT 2022" starttimestamp="1651614162506" timestamp="866168" timestamp2="866168">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="582" _type="InsertStringCommand" date="Tue May 03 17:57:08 EDT 2022" starttimestamp="1651614162506" timestamp="866400" timestamp2="866400">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="584" _type="InsertStringCommand" date="Tue May 03 17:57:09 EDT 2022" starttimestamp="1651614162506" timestamp="866760" timestamp2="866760">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="586" _type="InsertStringCommand" date="Tue May 03 17:57:09 EDT 2022" starttimestamp="1651614162506" timestamp="866820" timestamp2="866820">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="588" _type="InsertStringCommand" date="Tue May 03 17:57:09 EDT 2022" starttimestamp="1651614162506" timestamp="866900" timestamp2="866900">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="590" _type="InsertStringCommand" date="Tue May 03 17:57:09 EDT 2022" starttimestamp="1651614162506" timestamp="867061" timestamp2="867061">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="592" _type="InsertStringCommand" date="Tue May 03 17:57:09 EDT 2022" starttimestamp="1651614162506" timestamp="867158" timestamp2="867158">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="594" _type="InsertStringCommand" date="Tue May 03 17:57:09 EDT 2022" starttimestamp="1651614162506" timestamp="867321" timestamp2="867321">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="596" _type="InsertStringCommand" date="Tue May 03 17:57:09 EDT 2022" starttimestamp="1651614162506" timestamp="867421" timestamp2="867421">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="598" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="867503" timestamp2="867503">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="600" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="867753" timestamp2="867753">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="602" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="867849" timestamp2="867849">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="604" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="867912" timestamp2="867912">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="606" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="868122" timestamp2="868122">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="608" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="868204" timestamp2="868204">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="610" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="868273" timestamp2="868273">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="612" _type="InsertStringCommand" date="Tue May 03 17:57:10 EDT 2022" starttimestamp="1651614162506" timestamp="868393" timestamp2="868393">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="614" _type="PauseCommand" date="Tue May 03 17:57:13 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="871181">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2788]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="613" _type="SelectTextCommand" caretOffset="11196" date="Tue May 03 17:57:13 EDT 2022" end="11196" start="11137" starttimestamp="1651614162506" timestamp="871181" />
  <Command __id="615" _type="CopyCommand" date="Tue May 03 17:57:14 EDT 2022" starttimestamp="1651614162506" timestamp="871748" />
  <Command __id="617" _type="PauseCommand" date="Tue May 03 17:57:16 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="873616">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1868]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="616" _type="SelectTextCommand" caretOffset="11046" date="Tue May 03 17:57:16 EDT 2022" end="11046" start="10990" starttimestamp="1651614162506" timestamp="873616" />
  <Command __id="619" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:16 EDT 2022" starttimestamp="1651614162506" timestamp="874106" />
  <Command __id="620" _type="MoveCaretCommand" caretOffset="10933" date="Tue May 03 17:57:17 EDT 2022" docOffset="10933" starttimestamp="1651614162506" timestamp="874783" />
  <Command __id="622" _type="PasteCommand" date="Tue May 03 17:57:18 EDT 2022" starttimestamp="1651614162506" timestamp="875670" />
  <Command __id="624" _type="PauseCommand" date="Tue May 03 17:57:21 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="878677">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3007]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="623" _type="SelectTextCommand" caretOffset="10989" date="Tue May 03 17:57:21 EDT 2022" end="10989" start="10953" starttimestamp="1651614162506" timestamp="878677" />
  <Command __id="626" _type="PauseCommand" date="Tue May 03 17:57:22 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="879735">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1058]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="627" _type="InsertStringCommand" date="Tue May 03 17:57:22 EDT 2022" starttimestamp="1651614162506" timestamp="879740" timestamp2="879740">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="629" _type="InsertStringCommand" date="Tue May 03 17:57:22 EDT 2022" starttimestamp="1651614162506" timestamp="879857" timestamp2="879857">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="631" _type="InsertStringCommand" date="Tue May 03 17:57:22 EDT 2022" starttimestamp="1651614162506" timestamp="879919" timestamp2="879919">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="633" _type="InsertStringCommand" date="Tue May 03 17:57:22 EDT 2022" starttimestamp="1651614162506" timestamp="880050" timestamp2="880050">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="635" _type="InsertStringCommand" date="Tue May 03 17:57:22 EDT 2022" starttimestamp="1651614162506" timestamp="880159" timestamp2="880159">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="637" _type="InsertStringCommand" date="Tue May 03 17:57:22 EDT 2022" starttimestamp="1651614162506" timestamp="880268" timestamp2="880268">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="639" _type="InsertStringCommand" date="Tue May 03 17:57:23 EDT 2022" starttimestamp="1651614162506" timestamp="880525" timestamp2="880525">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="641" _type="InsertStringCommand" date="Tue May 03 17:57:23 EDT 2022" starttimestamp="1651614162506" timestamp="880664" timestamp2="880664">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="643" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:23 EDT 2022" starttimestamp="1651614162506" timestamp="880973" />
  <Command __id="645" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:23 EDT 2022" starttimestamp="1651614162506" timestamp="881113" />
  <Command __id="647" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:23 EDT 2022" starttimestamp="1651614162506" timestamp="881214" />
  <Command __id="649" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:23 EDT 2022" starttimestamp="1651614162506" timestamp="881324" />
  <Command __id="651" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:23 EDT 2022" starttimestamp="1651614162506" timestamp="881434" />
  <Command __id="653" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:24 EDT 2022" starttimestamp="1651614162506" timestamp="881554" />
  <Command __id="655" _type="InsertStringCommand" date="Tue May 03 17:57:24 EDT 2022" starttimestamp="1651614162506" timestamp="882197" timestamp2="882197">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="657" _type="InsertStringCommand" date="Tue May 03 17:57:24 EDT 2022" starttimestamp="1651614162506" timestamp="882284" timestamp2="882284">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="659" _type="InsertStringCommand" date="Tue May 03 17:57:24 EDT 2022" starttimestamp="1651614162506" timestamp="882478" timestamp2="882478">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="661" _type="InsertStringCommand" date="Tue May 03 17:57:25 EDT 2022" starttimestamp="1651614162506" timestamp="882608" timestamp2="882608">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="663" _type="InsertStringCommand" date="Tue May 03 17:57:25 EDT 2022" starttimestamp="1651614162506" timestamp="882838" timestamp2="882838">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="665" _type="InsertStringCommand" date="Tue May 03 17:57:25 EDT 2022" starttimestamp="1651614162506" timestamp="882941" timestamp2="882941">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="667" _type="InsertStringCommand" date="Tue May 03 17:57:25 EDT 2022" starttimestamp="1651614162506" timestamp="883121" timestamp2="883121">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="669" _type="InsertStringCommand" date="Tue May 03 17:57:25 EDT 2022" starttimestamp="1651614162506" timestamp="883240" timestamp2="883240">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="671" _type="InsertStringCommand" date="Tue May 03 17:57:25 EDT 2022" starttimestamp="1651614162506" timestamp="883362" timestamp2="883362">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="673" _type="InsertStringCommand" date="Tue May 03 17:57:26 EDT 2022" starttimestamp="1651614162506" timestamp="883520" timestamp2="883520">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="675" _type="InsertStringCommand" date="Tue May 03 17:57:26 EDT 2022" starttimestamp="1651614162506" timestamp="883752" timestamp2="883752">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="677" _type="InsertStringCommand" date="Tue May 03 17:57:26 EDT 2022" starttimestamp="1651614162506" timestamp="883831" timestamp2="883831">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="679" _type="PauseCommand" date="Tue May 03 17:57:28 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="885690">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1859]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="678" _type="MoveCaretCommand" caretOffset="11274" date="Tue May 03 17:57:28 EDT 2022" docOffset="11274" starttimestamp="1651614162506" timestamp="885690" />
  <Command __id="681" _type="PauseCommand" date="Tue May 03 17:57:29 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="886717">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1027]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="682" _type="PasteCommand" date="Tue May 03 17:57:29 EDT 2022" starttimestamp="1651614162506" timestamp="886722" />
  <DocumentChange __id="444" _type="Delete" date="Tue May 03 17:54:59 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12618" docExpressionCount="1166" docLength="13449" endLine="306" length="45" offset="10446" repeat="4" startLine="306" starttimestamp="1651614162506" timestamp="737110" timestamp2="738682">
    <text><![CDATA[			//0, // do not allow any incoming messages]]></text>
  </DocumentChange>
  <DocumentChange __id="455" _type="Delete" date="Tue May 03 17:55:03 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12606" docExpressionCount="1166" docLength="13212" endLine="325" length="237" offset="10741" startLine="322" starttimestamp="1651614162506" timestamp="741248">
    <text><![CDATA[//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);]]></text>
  </DocumentChange>
  <DocumentChange __id="459" _type="Delete" date="Tue May 03 17:55:04 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12606" docExpressionCount="1166" docLength="13179" endLine="319" length="33" offset="10677" startLine="319" starttimestamp="1651614162506" timestamp="742477">
    <text><![CDATA[//Start thread and do some action]]></text>
  </DocumentChange>
  <DocumentChange __id="463" _type="Delete" date="Tue May 03 17:55:07 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12606" docExpressionCount="1166" docLength="13145" endLine="333" length="34" offset="10933" startLine="333" starttimestamp="1651614162506" timestamp="744865">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="467" _type="Delete" date="Tue May 03 17:55:08 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12606" docExpressionCount="1166" docLength="13111" endLine="341" length="34" offset="11137" startLine="341" starttimestamp="1651614162506" timestamp="746299">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="471" _type="Delete" date="Tue May 03 17:55:10 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12606" docExpressionCount="1166" docLength="13077" endLine="347" length="34" offset="11234" startLine="347" starttimestamp="1651614162506" timestamp="747631">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="475" _type="Delete" date="Tue May 03 17:55:12 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12606" docExpressionCount="1166" docLength="13043" endLine="353" length="34" offset="11344" startLine="353" starttimestamp="1651614162506" timestamp="750166">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="479" _type="Delete" date="Tue May 03 17:55:18 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12606" docExpressionCount="1166" docLength="13009" endLine="369" length="34" offset="11702" startLine="369" starttimestamp="1651614162506" timestamp="755627">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="502" _type="Insert" date="Tue May 03 17:56:49 EDT 2022" docASTNodeCount="1676" docActiveCodeLength="12611" docExpressionCount="1167" docLength="13014" length="5" offset="11137" repeat="5" starttimestamp="1651614162506" timestamp="847009" timestamp2="847423">
    <text><![CDATA[print]]></text>
  </DocumentChange>
  <DocumentChange __id="513" _type="Delete" date="Tue May 03 17:56:50 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12605" docExpressionCount="1166" docLength="13008" endLine="341" length="6" offset="11136" repeat="6" startLine="341" starttimestamp="1651614162506" timestamp="847953" timestamp2="848523">
    <text><![CDATA[	print]]></text>
  </DocumentChange>
  <DocumentChange __id="529" _type="Replace" date="Tue May 03 17:56:55 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12662" docExpressionCount="1172" docLength="13065" endLine="341" insertionLength="58" int_docASTNodeCount="1674" int_docActiveCodeLength="12604" int_docExpressionCount="1166" int_docLength="13007" length="1" offset="11135" startLine="341" starttimestamp="1651614162506" timestamp="853257">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[		System.out.println("New Client connected to server!!!");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="540" _type="Replace" date="Tue May 03 17:57:03 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12630" docExpressionCount="1172" docLength="13033" endLine="341" insertionLength="1" int_docASTNodeCount="1681" int_docActiveCodeLength="12629" int_docExpressionCount="1172" int_docLength="13032" length="33" offset="11157" startLine="341" starttimestamp="1651614162506" timestamp="861198">
    <deletedText><![CDATA[New Client connected to server!!!]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="542" _type="Insert" date="Tue May 03 17:57:03 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12643" docExpressionCount="1172" docLength="13046" length="13" offset="11158" repeat="13" starttimestamp="1651614162506" timestamp="861366" timestamp2="863406">
    <text><![CDATA[his is stupid]]></text>
  </DocumentChange>
  <DocumentChange __id="568" _type="Insert" date="Tue May 03 17:57:08 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12665" docExpressionCount="1172" docLength="13068" length="22" offset="11171" repeat="22" starttimestamp="1651614162506" timestamp="865615" timestamp2="868390">
    <text><![CDATA[, dont want to do this]]></text>
  </DocumentChange>
  <DocumentChange __id="618" _type="Delete" date="Tue May 03 17:57:16 EDT 2022" docASTNodeCount="1674" docActiveCodeLength="12609" docExpressionCount="1166" docLength="13012" endLine="335" length="56" offset="10990" startLine="335" starttimestamp="1651614162506" timestamp="874103">
    <text><![CDATA[System.out.println("New Client connected to server!!!");]]></text>
  </DocumentChange>
  <DocumentChange __id="621" _type="Replace" date="Tue May 03 17:57:18 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12668" docExpressionCount="1172" docLength="13071" endLine="333" insertionLength="61" int_docASTNodeCount="1674" int_docActiveCodeLength="12607" int_docExpressionCount="1166" int_docLength="13010" length="2" offset="10931" startLine="333" starttimestamp="1651614162506" timestamp="875662">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("this is stupid, dont want to do this");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="625" _type="Replace" date="Tue May 03 17:57:22 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12633" docExpressionCount="1172" docLength="13036" endLine="333" insertionLength="1" int_docASTNodeCount="1681" int_docActiveCodeLength="12632" int_docExpressionCount="1172" int_docLength="13035" length="36" offset="10953" startLine="333" starttimestamp="1651614162506" timestamp="879735">
    <deletedText><![CDATA[this is stupid, dont want to do this]]></deletedText>
    <insertedText><![CDATA[f]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="628" _type="Insert" date="Tue May 03 17:57:22 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12640" docExpressionCount="1172" docLength="13043" length="7" offset="10954" repeat="7" starttimestamp="1651614162506" timestamp="879854" timestamp2="880662">
    <text><![CDATA[inslly ]]></text>
  </DocumentChange>
  <DocumentChange __id="642" _type="Delete" date="Tue May 03 17:57:23 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12634" docExpressionCount="1172" docLength="13037" endLine="333" length="6" offset="10955" repeat="6" startLine="333" starttimestamp="1651614162506" timestamp="880971" timestamp2="881553">
    <text><![CDATA[nslly ]]></text>
  </DocumentChange>
  <DocumentChange __id="654" _type="Insert" date="Tue May 03 17:57:24 EDT 2022" docASTNodeCount="1681" docActiveCodeLength="12646" docExpressionCount="1172" docLength="13049" length="12" offset="10955" repeat="12" starttimestamp="1651614162506" timestamp="882193" timestamp2="883828">
    <text><![CDATA[nally worked]]></text>
  </DocumentChange>
  <DocumentChange __id="680" _type="Replace" date="Tue May 03 17:57:29 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12705" docExpressionCount="1178" docLength="13108" endLine="347" insertionLength="61" int_docASTNodeCount="1681" int_docActiveCodeLength="12644" int_docExpressionCount="1172" int_docLength="13047" length="2" offset="11272" startLine="347" starttimestamp="1651614162506" timestamp="886717">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("this is stupid, dont want to do this");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="685" _type="Replace" date="Tue May 03 17:57:32 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12670" docExpressionCount="1178" docLength="13073" endLine="347" insertionLength="1" int_docASTNodeCount="1688" int_docActiveCodeLength="12669" int_docExpressionCount="1178" int_docLength="13072" length="36" offset="11294" startLine="347" starttimestamp="1651614162506" timestamp="889762">
    <deletedText><![CDATA[this is stupid, dont want to do this]]></deletedText>
    <insertedText><![CDATA[p]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="687" _type="Insert" date="Tue May 03 17:57:32 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12681" docExpressionCount="1178" docLength="13084" length="11" offset="11295" repeat="11" starttimestamp="1651614162506" timestamp="889851" timestamp2="891404">
    <text><![CDATA[laceholder ]]></text>
  </DocumentChange>
  <DocumentChange __id="709" _type="Delete" date="Tue May 03 17:57:34 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12680" docExpressionCount="1178" docLength="13083" endLine="347" length="1" offset="11305" startLine="347" starttimestamp="1651614162506" timestamp="891714">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="684" _type="PauseCommand" date="Tue May 03 17:57:31 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="888788">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2066]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="683" _type="SelectTextCommand" caretOffset="11330" date="Tue May 03 17:57:31 EDT 2022" end="11330" start="11294" starttimestamp="1651614162506" timestamp="888788" />
  <Command __id="686" _type="InsertStringCommand" date="Tue May 03 17:57:32 EDT 2022" starttimestamp="1651614162506" timestamp="889767" timestamp2="889767">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="688" _type="InsertStringCommand" date="Tue May 03 17:57:32 EDT 2022" starttimestamp="1651614162506" timestamp="889854" timestamp2="889854">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="690" _type="InsertStringCommand" date="Tue May 03 17:57:32 EDT 2022" starttimestamp="1651614162506" timestamp="889904" timestamp2="889904">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="692" _type="InsertStringCommand" date="Tue May 03 17:57:32 EDT 2022" starttimestamp="1651614162506" timestamp="890101" timestamp2="890101">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="694" _type="InsertStringCommand" date="Tue May 03 17:57:32 EDT 2022" starttimestamp="1651614162506" timestamp="890225" timestamp2="890225">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="696" _type="InsertStringCommand" date="Tue May 03 17:57:33 EDT 2022" starttimestamp="1651614162506" timestamp="890535" timestamp2="890535">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="698" _type="InsertStringCommand" date="Tue May 03 17:57:33 EDT 2022" starttimestamp="1651614162506" timestamp="890706" timestamp2="890706">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="700" _type="InsertStringCommand" date="Tue May 03 17:57:33 EDT 2022" starttimestamp="1651614162506" timestamp="890885" timestamp2="890885">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="702" _type="InsertStringCommand" date="Tue May 03 17:57:33 EDT 2022" starttimestamp="1651614162506" timestamp="890996" timestamp2="890996">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="704" _type="InsertStringCommand" date="Tue May 03 17:57:33 EDT 2022" starttimestamp="1651614162506" timestamp="891176" timestamp2="891176">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="706" _type="InsertStringCommand" date="Tue May 03 17:57:33 EDT 2022" starttimestamp="1651614162506" timestamp="891276" timestamp2="891276">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="708" _type="InsertStringCommand" date="Tue May 03 17:57:33 EDT 2022" starttimestamp="1651614162506" timestamp="891408" timestamp2="891408">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="710" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:34 EDT 2022" starttimestamp="1651614162506" timestamp="891717" />
  <Command __id="712" _type="InsertStringCommand" date="Tue May 03 17:57:34 EDT 2022" starttimestamp="1651614162506" timestamp="891935" timestamp2="891935">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="714" _type="InsertStringCommand" date="Tue May 03 17:57:34 EDT 2022" starttimestamp="1651614162506" timestamp="892088" timestamp2="892088">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="716" _type="InsertStringCommand" date="Tue May 03 17:57:34 EDT 2022" starttimestamp="1651614162506" timestamp="892214" timestamp2="892214">
    <data><![CDATA[/]]></data>
  </Command>
  <Command __id="718" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:34 EDT 2022" starttimestamp="1651614162506" timestamp="892467" />
  <Command __id="720" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:35 EDT 2022" starttimestamp="1651614162506" timestamp="892608" />
  <Command __id="722" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:57:35 EDT 2022" starttimestamp="1651614162506" timestamp="892728" />
  <Command __id="724" _type="InsertStringCommand" date="Tue May 03 17:57:35 EDT 2022" starttimestamp="1651614162506" timestamp="892901" timestamp2="892901">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="726" _type="InsertStringCommand" date="Tue May 03 17:57:35 EDT 2022" starttimestamp="1651614162506" timestamp="893040" timestamp2="893040">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="728" _type="InsertStringCommand" date="Tue May 03 17:57:35 EDT 2022" starttimestamp="1651614162506" timestamp="893170" timestamp2="893170">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="730" _type="InsertStringCommand" date="Tue May 03 17:57:35 EDT 2022" starttimestamp="1651614162506" timestamp="893287" timestamp2="893287">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="732" _type="InsertStringCommand" date="Tue May 03 17:57:36 EDT 2022" starttimestamp="1651614162506" timestamp="893802" timestamp2="893802">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="734" _type="InsertStringCommand" date="Tue May 03 17:57:36 EDT 2022" starttimestamp="1651614162506" timestamp="893882" timestamp2="893882">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="736" _type="InsertStringCommand" date="Tue May 03 17:57:36 EDT 2022" starttimestamp="1651614162506" timestamp="894022" timestamp2="894022">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="738" _type="InsertStringCommand" date="Tue May 03 17:57:36 EDT 2022" starttimestamp="1651614162506" timestamp="894108" timestamp2="894108">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="740" _type="InsertStringCommand" date="Tue May 03 17:57:36 EDT 2022" starttimestamp="1651614162506" timestamp="894292" timestamp2="894292">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="742" _type="InsertStringCommand" date="Tue May 03 17:57:37 EDT 2022" starttimestamp="1651614162506" timestamp="894564" timestamp2="894564">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="744" _type="InsertStringCommand" date="Tue May 03 17:57:37 EDT 2022" starttimestamp="1651614162506" timestamp="894663" timestamp2="894663">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="746" _type="InsertStringCommand" date="Tue May 03 17:57:37 EDT 2022" starttimestamp="1651614162506" timestamp="894854" timestamp2="894854">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="748" _type="InsertStringCommand" date="Tue May 03 17:57:37 EDT 2022" starttimestamp="1651614162506" timestamp="895055" timestamp2="895055">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="750" _type="InsertStringCommand" date="Tue May 03 17:57:37 EDT 2022" starttimestamp="1651614162506" timestamp="895165" timestamp2="895165">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="752" _type="PauseCommand" date="Tue May 03 17:57:39 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="897156">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1991]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="751" _type="MoveCaretCommand" caretOffset="11432" date="Tue May 03 17:57:39 EDT 2022" docOffset="11432" starttimestamp="1651614162506" timestamp="897156" />
  <Command __id="754" _type="PauseCommand" date="Tue May 03 17:57:41 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="898803">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1647]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="755" _type="PasteCommand" date="Tue May 03 17:57:41 EDT 2022" starttimestamp="1651614162506" timestamp="898807" />
  <Command __id="757" _type="PauseCommand" date="Tue May 03 17:57:43 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="901113">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2306]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="756" _type="SelectTextCommand" caretOffset="11488" date="Tue May 03 17:57:43 EDT 2022" end="11488" start="11452" starttimestamp="1651614162506" timestamp="901113" />
  <Command __id="759" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="901711" timestamp2="901711">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="761" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="901799" timestamp2="901799">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="763" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="901849" timestamp2="901849">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="765" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="901940" timestamp2="901940">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="767" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="901975" timestamp2="901975">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="769" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="902097" timestamp2="902097">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="771" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="902109" timestamp2="902109">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="773" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="902226" timestamp2="902226">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="775" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="902249" timestamp2="902249">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="777" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="902360" timestamp2="902360">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="779" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="902379" timestamp2="902379">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="781" _type="InsertStringCommand" date="Tue May 03 17:57:44 EDT 2022" starttimestamp="1651614162506" timestamp="902489" timestamp2="902489">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="783" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="902560" timestamp2="902560">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="785" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="902581" timestamp2="902581">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="787" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="902677" timestamp2="902677">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="789" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="902725" timestamp2="902725">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="791" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="902795" timestamp2="902795">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="793" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="902826" timestamp2="902826">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="795" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="902886" timestamp2="902886">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="797" _type="InsertStringCommand" date="Tue May 03 17:57:45 EDT 2022" starttimestamp="1651614162506" timestamp="903026" timestamp2="903026">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="799" _type="PauseCommand" date="Tue May 03 17:57:47 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="905055">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2029]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="798" _type="SelectTextCommand" caretOffset="11056" date="Tue May 03 17:57:47 EDT 2022" end="11056" start="11040" starttimestamp="1651614162506" timestamp="905055" />
  <Command __id="801" _type="PauseCommand" date="Tue May 03 17:57:51 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="909342">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4287]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="800" _type="ConsoleOutput" date="Tue May 03 17:57:51 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="909342" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67570
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14248"), Diff(INSERT,"67570"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="803" _type="PauseCommand" date="Tue May 03 17:57:53 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="911449">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2107]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="802" _type="SelectTextCommand" caretOffset="11483" date="Tue May 03 17:57:53 EDT 2022" end="11483" start="10864" starttimestamp="1651614162506" timestamp="911449" />
  <Command __id="805" _type="PauseCommand" date="Tue May 03 17:57:55 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="912957">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1508]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="806" _type="CutCommand" date="Tue May 03 17:57:55 EDT 2022" starttimestamp="1651614162506" timestamp="912976" />
  <Command __id="808" _type="PauseCommand" date="Tue May 03 17:57:57 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="914654">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1677]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="807" _type="MoveCaretCommand" caretOffset="12519" date="Tue May 03 17:57:57 EDT 2022" docOffset="12519" starttimestamp="1651614162506" timestamp="914653" />
  <Command __id="809" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Tue May 03 17:57:58 EDT 2022" starttimestamp="1651614162506" timestamp="915629" />
  <Command __id="811" _type="InsertStringCommand" date="Tue May 03 17:57:58 EDT 2022" starttimestamp="1651614162506" timestamp="915862" timestamp2="915862">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="813" _type="InsertStringCommand" date="Tue May 03 17:57:58 EDT 2022" starttimestamp="1651614162506" timestamp="916136" timestamp2="916136">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="815" _type="PasteCommand" date="Tue May 03 17:57:59 EDT 2022" starttimestamp="1651614162506" timestamp="916767" />
  <Command __id="817" _type="PauseCommand" date="Tue May 03 17:58:01 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="918949">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2182]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="816" _type="ConsoleOutput" date="Tue May 03 17:58:01 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="918949" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67570"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="818" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:58:01 EDT 2022" starttimestamp="1651614162506" timestamp="919391" />
  <Command __id="819" _type="EclipseCommand" commandID="" date="Tue May 03 17:58:02 EDT 2022" starttimestamp="1651614162506" timestamp="919532" />
  <Command __id="820" _type="EclipseCommand" commandID="" date="Tue May 03 17:58:02 EDT 2022" starttimestamp="1651614162506" timestamp="919558" />
  <Command __id="822" _type="PauseCommand" date="Tue May 03 17:58:19 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="936722">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[17164]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="821" _type="ShellCommand" date="Tue May 03 17:58:19 EDT 2022" starttimestamp="1651614162506" timestamp="936722" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="824" _type="PauseCommand" date="Tue May 03 17:58:26 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="944060">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7338]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="823" _type="ShellCommand" date="Tue May 03 17:58:26 EDT 2022" starttimestamp="1651614162506" timestamp="944060" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="825" _type="EclipseCommand" commandID="" date="Tue May 03 17:58:26 EDT 2022" starttimestamp="1651614162506" timestamp="944188" />
  <Command __id="826" _type="EclipseCommand" commandID="" date="Tue May 03 17:58:26 EDT 2022" starttimestamp="1651614162506" timestamp="944191" />
  <Command __id="828" _type="PauseCommand" date="Tue May 03 17:58:37 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="955200">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11009]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="827" _type="ShellCommand" date="Tue May 03 17:58:37 EDT 2022" starttimestamp="1651614162506" timestamp="955200" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="829" _type="ShellCommand" date="Tue May 03 17:58:37 EDT 2022" starttimestamp="1651614162506" timestamp="955296" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="833" _type="PauseCommand" date="Tue May 03 17:58:39 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="956986">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1615]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="832" _type="ShellCommand" date="Tue May 03 17:58:39 EDT 2022" starttimestamp="1651614162506" timestamp="956986" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="834" _type="ShellCommand" date="Tue May 03 17:58:39 EDT 2022" starttimestamp="1651614162506" timestamp="957083" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="838" _type="PauseCommand" date="Tue May 03 17:58:40 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="958187">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1085]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="837" _type="ShellCommand" date="Tue May 03 17:58:40 EDT 2022" starttimestamp="1651614162506" timestamp="958187" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="839" _type="ShellCommand" date="Tue May 03 17:58:40 EDT 2022" starttimestamp="1651614162506" timestamp="958284" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="843" _type="PauseCommand" date="Tue May 03 17:58:42 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="959773">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1472]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="842" _type="ShellCommand" date="Tue May 03 17:58:42 EDT 2022" starttimestamp="1651614162506" timestamp="959773" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="844" _type="ShellCommand" date="Tue May 03 17:58:42 EDT 2022" starttimestamp="1651614162506" timestamp="959809" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="848" _type="PauseCommand" date="Tue May 03 17:58:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="961075">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1247]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="847" _type="ShellCommand" date="Tue May 03 17:58:43 EDT 2022" starttimestamp="1651614162506" timestamp="961075" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="849" _type="ShellCommand" date="Tue May 03 17:58:43 EDT 2022" starttimestamp="1651614162506" timestamp="961178" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="853" _type="PauseCommand" date="Tue May 03 17:58:46 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="964273">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[3081]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="852" _type="ShellCommand" date="Tue May 03 17:58:46 EDT 2022" starttimestamp="1651614162506" timestamp="964272" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="854" _type="ShellCommand" date="Tue May 03 17:58:46 EDT 2022" starttimestamp="1651614162506" timestamp="964379" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="858" _type="PauseCommand" date="Tue May 03 17:58:48 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="966025">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1631]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="857" _type="ShellCommand" date="Tue May 03 17:58:48 EDT 2022" starttimestamp="1651614162506" timestamp="966025" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="859" _type="ShellCommand" date="Tue May 03 17:58:48 EDT 2022" starttimestamp="1651614162506" timestamp="966121" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="862" _type="MoveCaretCommand" caretOffset="13099" date="Tue May 03 17:58:49 EDT 2022" docOffset="13099" starttimestamp="1651614162506" timestamp="966850" />
  <Command __id="864" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:58:50 EDT 2022" starttimestamp="1651614162506" timestamp="967778" />
  <Command __id="866" _type="InsertStringCommand" date="Tue May 03 17:58:50 EDT 2022" starttimestamp="1651614162506" timestamp="968074" timestamp2="968074">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="868" _type="InsertStringCommand" date="Tue May 03 17:58:50 EDT 2022" starttimestamp="1651614162506" timestamp="968274" timestamp2="968274">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="870" _type="InsertStringCommand" date="Tue May 03 17:58:50 EDT 2022" starttimestamp="1651614162506" timestamp="968405" timestamp2="968405">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="872" _type="InsertStringCommand" date="Tue May 03 17:58:51 EDT 2022" starttimestamp="1651614162506" timestamp="968506" timestamp2="968506">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="874" _type="InsertStringCommand" date="Tue May 03 17:58:51 EDT 2022" starttimestamp="1651614162506" timestamp="968585" timestamp2="968585">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="876" _type="PauseCommand" date="Tue May 03 17:58:53 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="970726">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2141]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="877" _type="InsertStringCommand" date="Tue May 03 17:58:53 EDT 2022" starttimestamp="1651614162506" timestamp="970730" timestamp2="970730">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="879" _type="InsertStringCommand" date="Tue May 03 17:58:53 EDT 2022" starttimestamp="1651614162506" timestamp="970831" timestamp2="970831">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="881" _type="InsertStringCommand" date="Tue May 03 17:58:53 EDT 2022" starttimestamp="1651614162506" timestamp="970989" timestamp2="970989">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="883" _type="PauseCommand" date="Tue May 03 17:58:54 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="972409">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1420]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="882" _type="MoveCaretCommand" caretOffset="13103" date="Tue May 03 17:58:54 EDT 2022" docOffset="13103" starttimestamp="1651614162506" timestamp="972409" />
  <Command __id="884" _type="SelectTextCommand" caretOffset="13106" date="Tue May 03 17:58:55 EDT 2022" end="13106" start="13095" starttimestamp="1651614162506" timestamp="972535" />
  <Command __id="885" _type="CopyCommand" date="Tue May 03 17:58:55 EDT 2022" starttimestamp="1651614162506" timestamp="973083" />
  <Command __id="886" _type="MoveCaretCommand" caretOffset="13131" date="Tue May 03 17:58:56 EDT 2022" docOffset="13131" starttimestamp="1651614162506" timestamp="973586" />
  <Command __id="887" _type="SelectTextCommand" caretOffset="13132" date="Tue May 03 17:58:56 EDT 2022" end="13132" start="13128" starttimestamp="1651614162506" timestamp="973720" />
  <Command __id="889" _type="PasteCommand" date="Tue May 03 17:58:56 EDT 2022" starttimestamp="1651614162506" timestamp="974016" />
  <Command __id="891" _type="PauseCommand" date="Tue May 03 17:58:57 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="975257">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1241]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="892" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:58:57 EDT 2022" starttimestamp="1651614162506" timestamp="975259" />
  <Command __id="894" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:58:57 EDT 2022" starttimestamp="1651614162506" timestamp="975389" />
  <Command __id="896" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:58:58 EDT 2022" starttimestamp="1651614162506" timestamp="975507" />
  <Command __id="898" _type="InsertStringCommand" date="Tue May 03 17:58:58 EDT 2022" starttimestamp="1651614162506" timestamp="975621" timestamp2="975621">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="900" _type="InsertStringCommand" date="Tue May 03 17:58:58 EDT 2022" starttimestamp="1651614162506" timestamp="975810" timestamp2="975810">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="902" _type="InsertStringCommand" date="Tue May 03 17:58:58 EDT 2022" starttimestamp="1651614162506" timestamp="975922" timestamp2="975922">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="904" _type="PauseCommand" date="Tue May 03 17:59:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="978145">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2223]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="903" _type="MoveCaretCommand" caretOffset="12953" date="Tue May 03 17:59:00 EDT 2022" docOffset="12953" starttimestamp="1651614162506" timestamp="978145" />
  <Command __id="905" _type="SelectTextCommand" caretOffset="12955" date="Tue May 03 17:59:00 EDT 2022" end="12955" start="12951" starttimestamp="1651614162506" timestamp="978265" />
  <Command __id="907" _type="PauseCommand" date="Tue May 03 17:59:02 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="979633">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1368]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="906" _type="MoveCaretCommand" caretOffset="12937" date="Tue May 03 17:59:02 EDT 2022" docOffset="12937" starttimestamp="1651614162506" timestamp="979633" />
  <Command __id="908" _type="SelectTextCommand" caretOffset="12939" date="Tue May 03 17:59:02 EDT 2022" end="12939" start="12935" starttimestamp="1651614162506" timestamp="979744" />
  <Command __id="910" _type="PasteCommand" date="Tue May 03 17:59:03 EDT 2022" starttimestamp="1651614162506" timestamp="980578" />
  <Command __id="911" _type="MoveCaretCommand" caretOffset="12757" date="Tue May 03 17:59:03 EDT 2022" docOffset="12757" starttimestamp="1651614162506" timestamp="981126" />
  <Command __id="912" _type="SelectTextCommand" caretOffset="12759" date="Tue May 03 17:59:03 EDT 2022" end="12759" start="12755" starttimestamp="1651614162506" timestamp="981273" />
  <Command __id="914" _type="PasteCommand" date="Tue May 03 17:59:04 EDT 2022" starttimestamp="1651614162506" timestamp="981668" />
  <DocumentChange __id="711" _type="Insert" date="Tue May 03 17:57:34 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12683" docExpressionCount="1178" docLength="13086" length="3" offset="11305" repeat="3" starttimestamp="1651614162506" timestamp="891931" timestamp2="892212">
    <text><![CDATA[///]]></text>
  </DocumentChange>
  <DocumentChange __id="717" _type="Delete" date="Tue May 03 17:57:34 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12680" docExpressionCount="1178" docLength="13083" endLine="347" length="3" offset="11305" repeat="3" startLine="347" starttimestamp="1651614162506" timestamp="892466" timestamp2="892726">
    <text><![CDATA[///]]></text>
  </DocumentChange>
  <DocumentChange __id="723" _type="Insert" date="Tue May 03 17:57:35 EDT 2022" docASTNodeCount="1688" docActiveCodeLength="12694" docExpressionCount="1178" docLength="13097" length="14" offset="11305" repeat="14" starttimestamp="1651614162506" timestamp="892898" timestamp2="895162">
    <text><![CDATA[....for credit]]></text>
  </DocumentChange>
  <DocumentChange __id="753" _type="Replace" date="Tue May 03 17:57:41 EDT 2022" docASTNodeCount="1695" docActiveCodeLength="12753" docExpressionCount="1184" docLength="13156" endLine="353" insertionLength="61" int_docASTNodeCount="1688" int_docActiveCodeLength="12692" int_docExpressionCount="1178" int_docLength="13095" length="2" offset="11430" startLine="353" starttimestamp="1651614162506" timestamp="898803">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("this is stupid, dont want to do this");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="758" _type="Replace" date="Tue May 03 17:57:44 EDT 2022" docASTNodeCount="1695" docActiveCodeLength="12718" docExpressionCount="1184" docLength="13121" endLine="353" insertionLength="1" int_docASTNodeCount="1695" int_docActiveCodeLength="12717" int_docExpressionCount="1184" int_docLength="13120" length="36" offset="11452" startLine="353" starttimestamp="1651614162506" timestamp="901707">
    <deletedText><![CDATA[this is stupid, dont want to do this]]></deletedText>
    <insertedText><![CDATA[l]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="760" _type="Insert" date="Tue May 03 17:57:44 EDT 2022" docASTNodeCount="1695" docActiveCodeLength="12737" docExpressionCount="1184" docLength="13140" length="19" offset="11453" repeat="19" starttimestamp="1651614162506" timestamp="901795" timestamp2="903023">
    <text><![CDATA[alalallalalalalalaa]]></text>
  </DocumentChange>
  <DocumentChange __id="804" _type="Delete" date="Tue May 03 17:57:55 EDT 2022" docASTNodeCount="1602" docActiveCodeLength="12118" docExpressionCount="1128" docLength="12521" endLine="355" length="619" offset="10864" startLine="331" starttimestamp="1651614162506" timestamp="912957">
    <text><![CDATA[@Override
	public void connected(SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		System.out.println("lalalallalalalalalaa");
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="810" _type="Insert" date="Tue May 03 17:57:58 EDT 2022" docASTNodeCount="1602" docActiveCodeLength="12124" docExpressionCount="1128" docLength="12527" length="6" offset="12516" repeat="2" starttimestamp="1651614162506" timestamp="915858" timestamp2="916132">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="814" _type="Replace" date="Tue May 03 17:57:59 EDT 2022" docASTNodeCount="1695" docActiveCodeLength="12743" docExpressionCount="1184" docLength="13146" endLine="392" insertionLength="620" int_docASTNodeCount="1602" int_docActiveCodeLength="12123" int_docExpressionCount="1128" int_docLength="12526" length="1" offset="12521" startLine="392" starttimestamp="1651614162506" timestamp="916756">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public void connected(SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		System.out.println("lalalallalalalalalaa");
		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="830" _type="Insert" date="Tue May 03 17:58:37 EDT 2022" docASTNodeCount="1696" docActiveCodeLength="12749" docExpressionCount="1184" docLength="13152" length="6" offset="12755" repeat="2" starttimestamp="1651614162506" timestamp="955371" timestamp2="955376">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="835" _type="Insert" date="Tue May 03 17:58:39 EDT 2022" docASTNodeCount="1697" docActiveCodeLength="12755" docExpressionCount="1184" docLength="13158" length="6" offset="12735" repeat="2" starttimestamp="1651614162506" timestamp="957102" timestamp2="957105">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="840" _type="Insert" date="Tue May 03 17:58:40 EDT 2022" docASTNodeCount="1698" docActiveCodeLength="12761" docExpressionCount="1184" docLength="13164" length="6" offset="12892" repeat="2" starttimestamp="1651614162506" timestamp="958301" timestamp2="958304">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="845" _type="Insert" date="Tue May 03 17:58:42 EDT 2022" docASTNodeCount="1699" docActiveCodeLength="12767" docExpressionCount="1184" docLength="13170" length="6" offset="12935" repeat="2" starttimestamp="1651614162506" timestamp="959828" timestamp2="959833">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="850" _type="Insert" date="Tue May 03 17:58:43 EDT 2022" docASTNodeCount="1700" docActiveCodeLength="12773" docExpressionCount="1184" docLength="13176" length="6" offset="12918" repeat="2" starttimestamp="1651614162506" timestamp="961191" timestamp2="961194">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="855" _type="Insert" date="Tue May 03 17:58:46 EDT 2022" docASTNodeCount="1701" docActiveCodeLength="12779" docExpressionCount="1184" docLength="13182" length="6" offset="13069" repeat="2" starttimestamp="1651614162506" timestamp="964394" timestamp2="964397">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="860" _type="Insert" date="Tue May 03 17:58:48 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12785" docExpressionCount="1184" docLength="13188" length="6" offset="13101" repeat="2" starttimestamp="1651614162506" timestamp="966138" timestamp2="966141">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="863" _type="Delete" date="Tue May 03 17:58:50 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12784" docExpressionCount="1184" docLength="13187" endLine="413" length="1" offset="13098" startLine="413" starttimestamp="1651614162506" timestamp="967776">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <DocumentChange __id="865" _type="Insert" date="Tue May 03 17:58:50 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12789" docExpressionCount="1184" docLength="13192" length="5" offset="13098" repeat="5" starttimestamp="1651614162506" timestamp="968070" timestamp2="968581">
    <text><![CDATA[ument]]></text>
  </DocumentChange>
  <DocumentChange __id="875" _type="Insert" date="Tue May 03 17:58:53 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12792" docExpressionCount="1184" docLength="13195" length="3" offset="13103" repeat="3" starttimestamp="1651614162506" timestamp="970726" timestamp2="970983">
    <text><![CDATA[one]]></text>
  </DocumentChange>
  <DocumentChange __id="888" _type="Replace" date="Tue May 03 17:58:56 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12799" docExpressionCount="1184" docLength="13202" endLine="413" insertionLength="11" int_docASTNodeCount="1690" int_docActiveCodeLength="12788" int_docExpressionCount="1176" int_docLength="13191" length="4" offset="13128" startLine="413" starttimestamp="1651614162506" timestamp="973997">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[argumentone]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="890" _type="Delete" date="Tue May 03 17:58:57 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12796" docExpressionCount="1184" docLength="13199" endLine="413" length="3" offset="13136" repeat="3" startLine="413" starttimestamp="1651614162506" timestamp="975257" timestamp2="975505">
    <text><![CDATA[one]]></text>
  </DocumentChange>
  <DocumentChange __id="897" _type="Insert" date="Tue May 03 17:58:58 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12799" docExpressionCount="1184" docLength="13202" length="3" offset="13136" repeat="3" starttimestamp="1651614162506" timestamp="975617" timestamp2="975917">
    <text><![CDATA[two]]></text>
  </DocumentChange>
  <DocumentChange __id="909" _type="Replace" date="Tue May 03 17:59:03 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12806" docExpressionCount="1184" docLength="13209" endLine="407" insertionLength="11" int_docASTNodeCount="1686" int_docActiveCodeLength="12795" int_docExpressionCount="1175" int_docLength="13198" length="4" offset="12935" startLine="407" starttimestamp="1651614162506" timestamp="980572">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[argumentone]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="913" _type="Replace" date="Tue May 03 17:59:04 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12813" docExpressionCount="1184" docLength="13216" endLine="401" insertionLength="11" int_docASTNodeCount="1685" int_docActiveCodeLength="12802" int_docExpressionCount="1174" int_docLength="13205" length="4" offset="12755" startLine="401" starttimestamp="1651614162506" timestamp="981657">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[argumentone]]></insertedText>
  </DocumentChange>
  <Command __id="916" _type="PauseCommand" date="Tue May 03 17:59:05 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="982984">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1316]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="915" _type="MoveCaretCommand" caretOffset="12786" date="Tue May 03 17:59:05 EDT 2022" docOffset="12786" starttimestamp="1651614162506" timestamp="982984" />
  <Command __id="917" _type="SelectTextCommand" caretOffset="12788" date="Tue May 03 17:59:05 EDT 2022" end="12788" start="12784" starttimestamp="1651614162506" timestamp="983130" />
  <DocumentChange __id="918" _type="Replace" date="Tue May 03 17:59:06 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12820" docExpressionCount="1184" docLength="13223" endLine="401" insertionLength="11" int_docASTNodeCount="1690" int_docActiveCodeLength="12809" int_docExpressionCount="1176" int_docLength="13212" length="4" offset="12784" startLine="401" starttimestamp="1651614162506" timestamp="983655">
    <deletedText><![CDATA[arg1]]></deletedText>
    <insertedText><![CDATA[argumentone]]></insertedText>
  </DocumentChange>
  <Command __id="919" _type="PasteCommand" date="Tue May 03 17:59:06 EDT 2022" starttimestamp="1651614162506" timestamp="983662" />
  <DocumentChange __id="920" _type="Delete" date="Tue May 03 17:59:07 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12817" docExpressionCount="1184" docLength="13220" endLine="401" length="3" offset="12792" repeat="3" startLine="401" starttimestamp="1651614162506" timestamp="984518" timestamp2="984787">
    <text><![CDATA[one]]></text>
  </DocumentChange>
  <Command __id="921" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:07 EDT 2022" starttimestamp="1651614162506" timestamp="984520" />
  <Command __id="923" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:07 EDT 2022" starttimestamp="1651614162506" timestamp="984681" />
  <Command __id="925" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:07 EDT 2022" starttimestamp="1651614162506" timestamp="984789" />
  <Command __id="927" _type="InsertStringCommand" date="Tue May 03 17:59:07 EDT 2022" starttimestamp="1651614162506" timestamp="984895" timestamp2="984895">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="929" _type="InsertStringCommand" date="Tue May 03 17:59:07 EDT 2022" starttimestamp="1651614162506" timestamp="985178" timestamp2="985178">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="931" _type="InsertStringCommand" date="Tue May 03 17:59:07 EDT 2022" starttimestamp="1651614162506" timestamp="985229" timestamp2="985229">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="933" _type="PauseCommand" date="Tue May 03 17:59:09 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="986736">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1507]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="932" _type="MoveCaretCommand" caretOffset="12791" date="Tue May 03 17:59:09 EDT 2022" docOffset="12791" starttimestamp="1651614162506" timestamp="986736" />
  <Command __id="934" _type="SelectTextCommand" caretOffset="12795" date="Tue May 03 17:59:09 EDT 2022" end="12795" start="12784" starttimestamp="1651614162506" timestamp="986863" />
  <Command __id="935" _type="CopyCommand" date="Tue May 03 17:59:09 EDT 2022" starttimestamp="1651614162506" timestamp="987487" />
  <Command __id="936" _type="MoveCaretCommand" caretOffset="12972" date="Tue May 03 17:59:10 EDT 2022" docOffset="12972" starttimestamp="1651614162506" timestamp="987909" />
  <Command __id="937" _type="MoveCaretCommand" caretOffset="12974" date="Tue May 03 17:59:10 EDT 2022" docOffset="12974" starttimestamp="1651614162506" timestamp="988204" />
  <Command __id="938" _type="SelectTextCommand" caretOffset="12976" date="Tue May 03 17:59:10 EDT 2022" end="12976" start="12972" starttimestamp="1651614162506" timestamp="988328" />
  <Command __id="940" _type="PasteCommand" date="Tue May 03 17:59:11 EDT 2022" starttimestamp="1651614162506" timestamp="988929" />
  <Command __id="941" _type="MoveCaretCommand" caretOffset="13164" date="Tue May 03 17:59:11 EDT 2022" docOffset="13164" starttimestamp="1651614162506" timestamp="989378" />
  <Command __id="942" _type="SelectTextCommand" caretOffset="13167" date="Tue May 03 17:59:12 EDT 2022" end="13167" start="13156" starttimestamp="1651614162506" timestamp="989512" />
  <Command __id="944" _type="PauseCommand" date="Tue May 03 17:59:15 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="992708">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3196]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="943" _type="ShellCommand" date="Tue May 03 17:59:15 EDT 2022" starttimestamp="1651614162506" timestamp="992708" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="945" _type="ShellCommand" date="Tue May 03 17:59:15 EDT 2022" starttimestamp="1651614162506" timestamp="992799" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="949" _type="PauseCommand" date="Tue May 03 17:59:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="994664">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1849]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="948" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:59:17 EDT 2022" starttimestamp="1651614162506" timestamp="994664" />
  <Command __id="950" _type="EclipseCommand" commandID="" date="Tue May 03 17:59:17 EDT 2022" starttimestamp="1651614162506" timestamp="994755" />
  <Command __id="951" _type="EclipseCommand" commandID="" date="Tue May 03 17:59:17 EDT 2022" starttimestamp="1651614162506" timestamp="994784" />
  <Command __id="953" _type="PauseCommand" date="Tue May 03 17:59:20 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="997614">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2830]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="952" _type="ShellCommand" date="Tue May 03 17:59:20 EDT 2022" starttimestamp="1651614162506" timestamp="997614" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="954" _type="ShellCommand" date="Tue May 03 17:59:20 EDT 2022" starttimestamp="1651614162506" timestamp="997719" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="958" _type="PauseCommand" date="Tue May 03 17:59:22 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="999812">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2072]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="957" _type="ShellCommand" date="Tue May 03 17:59:22 EDT 2022" starttimestamp="1651614162506" timestamp="999812" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="959" _type="ShellCommand" date="Tue May 03 17:59:22 EDT 2022" starttimestamp="1651614162506" timestamp="999915" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="963" _type="PauseCommand" date="Tue May 03 17:59:23 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1001003">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1072]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="962" _type="ShellCommand" date="Tue May 03 17:59:23 EDT 2022" starttimestamp="1651614162506" timestamp="1001003" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="964" _type="ShellCommand" date="Tue May 03 17:59:23 EDT 2022" starttimestamp="1651614162506" timestamp="1001099" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="968" _type="PauseCommand" date="Tue May 03 17:59:25 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1002842">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1728]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="967" _type="ShellCommand" date="Tue May 03 17:59:25 EDT 2022" starttimestamp="1651614162506" timestamp="1002842" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="969" _type="ShellCommand" date="Tue May 03 17:59:25 EDT 2022" starttimestamp="1651614162506" timestamp="1002921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="973" _type="PauseCommand" date="Tue May 03 17:59:27 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1004794">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1858]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="972" _type="MoveCaretCommand" caretOffset="10958" date="Tue May 03 17:59:27 EDT 2022" docOffset="10958" starttimestamp="1651614162506" timestamp="1004794" />
  <Command __id="974" _type="SelectTextCommand" caretOffset="10960" date="Tue May 03 17:59:27 EDT 2022" end="10960" start="10956" starttimestamp="1651614162506" timestamp="1004908" />
  <Command __id="976" _type="PasteCommand" date="Tue May 03 17:59:28 EDT 2022" starttimestamp="1651614162506" timestamp="1005636" />
  <Command __id="978" _type="PauseCommand" date="Tue May 03 17:59:29 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1006969">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1333]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="977" _type="MoveCaretCommand" caretOffset="10926" date="Tue May 03 17:59:29 EDT 2022" docOffset="10926" starttimestamp="1651614162506" timestamp="1006969" />
  <Command __id="979" _type="SelectTextCommand" caretOffset="10929" date="Tue May 03 17:59:29 EDT 2022" end="10929" start="10925" starttimestamp="1651614162506" timestamp="1007087" />
  <Command __id="981" _type="PasteCommand" date="Tue May 03 17:59:30 EDT 2022" starttimestamp="1651614162506" timestamp="1007602" />
  <Command __id="983" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:30 EDT 2022" starttimestamp="1651614162506" timestamp="1008189" />
  <Command __id="985" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:30 EDT 2022" starttimestamp="1651614162506" timestamp="1008333" />
  <Command __id="987" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:30 EDT 2022" starttimestamp="1651614162506" timestamp="1008452" />
  <Command __id="989" _type="InsertStringCommand" date="Tue May 03 17:59:31 EDT 2022" starttimestamp="1651614162506" timestamp="1008691" timestamp2="1008691">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="991" _type="InsertStringCommand" date="Tue May 03 17:59:31 EDT 2022" starttimestamp="1651614162506" timestamp="1008826" timestamp2="1008826">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="993" _type="InsertStringCommand" date="Tue May 03 17:59:31 EDT 2022" starttimestamp="1651614162506" timestamp="1008862" timestamp2="1008862">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="994" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 17:59:31 EDT 2022" starttimestamp="1651614162506" timestamp="1009408" />
  <Command __id="995" _type="EclipseCommand" commandID="" date="Tue May 03 17:59:32 EDT 2022" starttimestamp="1651614162506" timestamp="1009500" />
  <Command __id="996" _type="EclipseCommand" commandID="" date="Tue May 03 17:59:32 EDT 2022" starttimestamp="1651614162506" timestamp="1009533" />
  <Command __id="998" _type="PauseCommand" date="Tue May 03 17:59:33 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1011074">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1541]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="997" _type="ShellCommand" date="Tue May 03 17:59:33 EDT 2022" starttimestamp="1651614162506" timestamp="1011074" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="999" _type="ShellCommand" date="Tue May 03 17:59:33 EDT 2022" starttimestamp="1651614162506" timestamp="1011155" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1002" _type="ShellCommand" date="Tue May 03 17:59:34 EDT 2022" starttimestamp="1651614162506" timestamp="1012056" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1003" _type="ShellCommand" date="Tue May 03 17:59:34 EDT 2022" starttimestamp="1651614162506" timestamp="1012144" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1007" _type="PauseCommand" date="Tue May 03 17:59:36 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1013744">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1585]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1006" _type="ShellCommand" date="Tue May 03 17:59:36 EDT 2022" starttimestamp="1651614162506" timestamp="1013744" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1008" _type="ShellCommand" date="Tue May 03 17:59:36 EDT 2022" starttimestamp="1651614162506" timestamp="1013832" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1012" _type="PauseCommand" date="Tue May 03 17:59:37 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1015228">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1382]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1011" _type="ShellCommand" date="Tue May 03 17:59:37 EDT 2022" starttimestamp="1651614162506" timestamp="1015228" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1013" _type="ShellCommand" date="Tue May 03 17:59:37 EDT 2022" starttimestamp="1651614162506" timestamp="1015330" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1015" _type="PauseCommand" date="Tue May 03 17:59:41 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1018575">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3245]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1014" _type="SelectTextCommand" caretOffset="11033" date="Tue May 03 17:59:41 EDT 2022" end="11033" start="11000" starttimestamp="1651614162506" timestamp="1018575" />
  <Command __id="1017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:41 EDT 2022" starttimestamp="1651614162506" timestamp="1019086" />
  <Command __id="1019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 17:59:41 EDT 2022" starttimestamp="1651614162506" timestamp="1019215" />
  <Command __id="1021" _type="PauseCommand" date="Tue May 03 17:59:44 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1021573">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2358]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1020" _type="ShellCommand" date="Tue May 03 17:59:44 EDT 2022" starttimestamp="1651614162506" timestamp="1021573" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1022" _type="ShellCommand" date="Tue May 03 17:59:44 EDT 2022" starttimestamp="1651614162506" timestamp="1021664" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1025" _type="ConsoleOutput" date="Tue May 03 17:59:44 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1021966" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112569
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112569¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1027" _type="PauseCommand" date="Tue May 03 17:59:46 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1023991">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2025]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1026" _type="ShellCommand" date="Tue May 03 17:59:46 EDT 2022" starttimestamp="1651614162506" timestamp="1023991" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1028" _type="ShellCommand" date="Tue May 03 17:59:46 EDT 2022" starttimestamp="1651614162506" timestamp="1024084" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1032" _type="PauseCommand" date="Tue May 03 17:59:49 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1026631">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2525]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1031" _type="MoveCaretCommand" caretOffset="9866" date="Tue May 03 17:59:49 EDT 2022" docOffset="9866" starttimestamp="1651614162506" timestamp="1026631" />
  <Command __id="1034" _type="PauseCommand" date="Tue May 03 17:59:53 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1031027">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4396]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1033" _type="SelectTextCommand" caretOffset="9857" date="Tue May 03 17:59:53 EDT 2022" end="9857" start="9855" starttimestamp="1651614162506" timestamp="1031027" />
  <Command __id="1035" _type="MoveCaretCommand" caretOffset="9857" date="Tue May 03 17:59:53 EDT 2022" docOffset="9857" starttimestamp="1651614162506" timestamp="1031224" />
  <Command __id="1036" _type="SelectTextCommand" caretOffset="9867" date="Tue May 03 17:59:53 EDT 2022" end="9867" start="9845" starttimestamp="1651614162506" timestamp="1031342" />
  <Command __id="1037" _type="CopyCommand" date="Tue May 03 17:59:54 EDT 2022" starttimestamp="1651614162506" timestamp="1032186" />
  <Command __id="1039" _type="ShellCommand" date="Tue May 03 17:59:54 EDT 2022" starttimestamp="1651614162506" timestamp="1032466" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1040" _type="PasteCommand" date="Tue May 03 17:59:55 EDT 2022" starttimestamp="1651614162506" timestamp="1032630" />
  <Command __id="1042" _type="PauseCommand" date="Tue May 03 17:59:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1034230">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1600]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="1041" _type="PasteCommand" date="Tue May 03 17:59:56 EDT 2022" starttimestamp="1651614162506" timestamp="1034230" />
  <Command __id="1044" _type="PauseCommand" date="Tue May 03 18:00:03 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1040650">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[6420]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1045" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:00:03 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1041430" wrapSearch="false">
    <searchString><![CDATA[broadcastIPCMechanism1]]></searchString>
    <replaceString><![CDATA[broadcastIpcMechanism1]]></replaceString>
  </Command>
  <Command __id="1047" _type="PauseCommand" date="Tue May 03 18:00:05 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1043207">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1776]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1046" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:00:05 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1043206" wrapSearch="false">
    <searchString><![CDATA[broadcastIPCMechanism1]]></searchString>
    <replaceString><![CDATA[broadcastIpcMechanism1]]></replaceString>
  </Command>
  <Command __id="1048" _type="ShellCommand" date="Tue May 03 18:00:06 EDT 2022" starttimestamp="1651614162506" timestamp="1043700" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1049" _type="MoveCaretCommand" caretOffset="10037" date="Tue May 03 18:00:06 EDT 2022" docOffset="10037" starttimestamp="1651614162506" timestamp="1044086" />
  <Command __id="1050" _type="ConsoleOutput" date="Tue May 03 18:00:07 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1044557" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22567
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"256"), Diff(DELETE,"9¶Number of traces > 800  turning tracing off"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1052" _type="PauseCommand" date="Tue May 03 18:00:09 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1047139">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2582]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1051" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:00:09 EDT 2022" starttimestamp="1651614162506" timestamp="1047139" />
  <Command __id="1053" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:09 EDT 2022" starttimestamp="1651614162506" timestamp="1047226" />
  <Command __id="1054" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:09 EDT 2022" starttimestamp="1651614162506" timestamp="1047268" />
  <Command __id="1056" _type="PauseCommand" date="Tue May 03 18:00:12 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1049684">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2416]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1055" _type="ShellCommand" date="Tue May 03 18:00:12 EDT 2022" starttimestamp="1651614162506" timestamp="1049684" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1057" _type="ShellCommand" date="Tue May 03 18:00:12 EDT 2022" starttimestamp="1651614162506" timestamp="1049778" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1061" _type="PauseCommand" date="Tue May 03 18:00:13 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1051115">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1316]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1060" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:00:13 EDT 2022" starttimestamp="1651614162506" timestamp="1051115" />
  <Command __id="1062" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:13 EDT 2022" starttimestamp="1651614162506" timestamp="1051207" />
  <Command __id="1063" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:13 EDT 2022" starttimestamp="1651614162506" timestamp="1051233" />
  <Command __id="1065" _type="PauseCommand" date="Tue May 03 18:00:15 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1053129">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1896]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1064" _type="MoveCaretCommand" caretOffset="9697" date="Tue May 03 18:00:15 EDT 2022" docOffset="9697" starttimestamp="1651614162506" timestamp="1053129" />
  <Command __id="1067" _type="PauseCommand" date="Tue May 03 18:00:16 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1054141">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1012]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1066" _type="MoveCaretCommand" caretOffset="9452" date="Tue May 03 18:00:16 EDT 2022" docOffset="9452" starttimestamp="1651614162506" timestamp="1054141" />
  <Command __id="1069" _type="PauseCommand" date="Tue May 03 18:00:21 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1059124">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4983]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1070" _type="InsertStringCommand" date="Tue May 03 18:00:21 EDT 2022" starttimestamp="1651614162506" timestamp="1059128" timestamp2="1059128">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1072" _type="InsertStringCommand" date="Tue May 03 18:00:21 EDT 2022" starttimestamp="1651614162506" timestamp="1059244" timestamp2="1059244">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1074" _type="InsertStringCommand" date="Tue May 03 18:00:21 EDT 2022" starttimestamp="1651614162506" timestamp="1059314" timestamp2="1059314">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1076" _type="PauseCommand" date="Tue May 03 18:00:23 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1060564">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1250]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1075" _type="MoveCaretCommand" caretOffset="9464" date="Tue May 03 18:00:23 EDT 2022" docOffset="9464" starttimestamp="1651614162506" timestamp="1060564" />
  <Command __id="1077" _type="SelectTextCommand" caretOffset="9469" date="Tue May 03 18:00:23 EDT 2022" end="9469" start="9451" starttimestamp="1651614162506" timestamp="1060713" />
  <Command __id="1078" _type="CopyCommand" date="Tue May 03 18:00:23 EDT 2022" starttimestamp="1651614162506" timestamp="1061398" />
  <Command __id="1079" _type="MoveCaretCommand" caretOffset="9543" date="Tue May 03 18:00:24 EDT 2022" docOffset="9543" starttimestamp="1651614162506" timestamp="1062009" />
  <Command __id="1080" _type="SelectTextCommand" caretOffset="9554" date="Tue May 03 18:00:24 EDT 2022" end="9554" start="9539" starttimestamp="1651614162506" timestamp="1062136" />
  <Command __id="1082" _type="PasteCommand" date="Tue May 03 18:00:24 EDT 2022" starttimestamp="1651614162506" timestamp="1062328" />
  <Command __id="1084" _type="PauseCommand" date="Tue May 03 18:00:26 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1063787">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1459]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1083" _type="MoveCaretCommand" caretOffset="9688" date="Tue May 03 18:00:26 EDT 2022" docOffset="9688" starttimestamp="1651614162506" timestamp="1063787" />
  <Command __id="1085" _type="SelectTextCommand" caretOffset="9696" date="Tue May 03 18:00:26 EDT 2022" end="9696" start="9681" starttimestamp="1651614162506" timestamp="1063916" />
  <Command __id="1087" _type="PasteCommand" date="Tue May 03 18:00:26 EDT 2022" starttimestamp="1651614162506" timestamp="1064122" />
  <Command __id="1088" _type="MoveCaretCommand" caretOffset="9654" date="Tue May 03 18:00:27 EDT 2022" docOffset="9654" starttimestamp="1651614162506" timestamp="1064778" />
  <Command __id="1089" _type="SelectTextCommand" caretOffset="9664" date="Tue May 03 18:00:27 EDT 2022" end="9664" start="9649" starttimestamp="1651614162506" timestamp="1064915" />
  <Command __id="1091" _type="PasteCommand" date="Tue May 03 18:00:27 EDT 2022" starttimestamp="1651614162506" timestamp="1065066" />
  <Command __id="1092" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:00:28 EDT 2022" starttimestamp="1651614162506" timestamp="1065684" />
  <Command __id="1093" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:28 EDT 2022" starttimestamp="1651614162506" timestamp="1065814" />
  <Command __id="1094" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:28 EDT 2022" starttimestamp="1651614162506" timestamp="1065838" />
  <Command __id="1095" _type="MoveCaretCommand" caretOffset="9801" date="Tue May 03 18:00:28 EDT 2022" docOffset="9801" starttimestamp="1651614162506" timestamp="1066120" />
  <Command __id="1096" _type="ConsoleOutput" date="Tue May 03 18:00:29 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1067064" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22565
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2256"), Diff(DELETE,"7"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1098" _type="PauseCommand" date="Tue May 03 18:00:34 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1071764">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4700]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1097" _type="MoveCaretCommand" caretOffset="9456" date="Tue May 03 18:00:34 EDT 2022" docOffset="9456" starttimestamp="1651614162506" timestamp="1071764" />
  <Command __id="1099" _type="SelectTextCommand" caretOffset="9469" date="Tue May 03 18:00:34 EDT 2022" end="9469" start="9451" starttimestamp="1651614162506" timestamp="1071903" />
  <Command __id="1101" _type="PauseCommand" date="Tue May 03 18:00:44 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1081498">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[9595]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1100" _type="ShellCommand" date="Tue May 03 18:00:44 EDT 2022" starttimestamp="1651614162506" timestamp="1081498" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1102" _type="ShellCommand" date="Tue May 03 18:00:44 EDT 2022" starttimestamp="1651614162506" timestamp="1081583" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="926" _type="Insert" date="Tue May 03 17:59:07 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12820" docExpressionCount="1184" docLength="13223" length="3" offset="12792" repeat="3" starttimestamp="1651614162506" timestamp="984891" timestamp2="985226">
    <text><![CDATA[two]]></text>
  </DocumentChange>
  <DocumentChange __id="939" _type="Replace" date="Tue May 03 17:59:11 EDT 2022" docASTNodeCount="1702" docActiveCodeLength="12827" docExpressionCount="1184" docLength="13230" endLine="407" insertionLength="11" int_docASTNodeCount="1691" int_docActiveCodeLength="12816" int_docExpressionCount="1177" int_docLength="13219" length="4" offset="12972" startLine="407" starttimestamp="1651614162506" timestamp="988923">
    <deletedText><![CDATA[arg2]]></deletedText>
    <insertedText><![CDATA[argumenttwo]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="946" _type="Insert" date="Tue May 03 17:59:15 EDT 2022" docASTNodeCount="1703" docActiveCodeLength="12833" docExpressionCount="1184" docLength="13236" length="6" offset="12556" repeat="2" starttimestamp="1651614162506" timestamp="992815" timestamp2="992820">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="955" _type="Insert" date="Tue May 03 17:59:20 EDT 2022" docASTNodeCount="1704" docActiveCodeLength="12839" docExpressionCount="1184" docLength="13242" length="6" offset="11982" repeat="2" starttimestamp="1651614162506" timestamp="997740" timestamp2="997744">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="960" _type="Insert" date="Tue May 03 17:59:22 EDT 2022" docASTNodeCount="1705" docActiveCodeLength="12845" docExpressionCount="1184" docLength="13248" length="6" offset="11315" repeat="2" starttimestamp="1651614162506" timestamp="999931" timestamp2="999935">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="965" _type="Insert" date="Tue May 03 17:59:23 EDT 2022" docASTNodeCount="1706" docActiveCodeLength="12851" docExpressionCount="1184" docLength="13254" length="6" offset="11291" repeat="2" starttimestamp="1651614162506" timestamp="1001114" timestamp2="1001119">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="970" _type="Insert" date="Tue May 03 17:59:25 EDT 2022" docASTNodeCount="1707" docActiveCodeLength="12857" docExpressionCount="1184" docLength="13260" length="6" offset="11005" repeat="2" starttimestamp="1651614162506" timestamp="1002936" timestamp2="1002940">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="975" _type="Replace" date="Tue May 03 17:59:28 EDT 2022" docASTNodeCount="1707" docActiveCodeLength="12864" docExpressionCount="1184" docLength="13267" endLine="334" insertionLength="11" int_docASTNodeCount="1685" int_docActiveCodeLength="12853" int_docExpressionCount="1170" int_docLength="13256" length="4" offset="10956" startLine="334" starttimestamp="1651614162506" timestamp="1005630">
    <deletedText><![CDATA[arg2]]></deletedText>
    <insertedText><![CDATA[argumenttwo]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="980" _type="Replace" date="Tue May 03 17:59:30 EDT 2022" docASTNodeCount="1707" docActiveCodeLength="12871" docExpressionCount="1184" docLength="13274" endLine="334" insertionLength="11" int_docASTNodeCount="1677" int_docActiveCodeLength="12860" int_docExpressionCount="1166" int_docLength="13263" length="4" offset="10925" startLine="334" starttimestamp="1651614162506" timestamp="1007593">
    <deletedText><![CDATA[arg0]]></deletedText>
    <insertedText><![CDATA[argumenttwo]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="982" _type="Delete" date="Tue May 03 17:59:30 EDT 2022" docASTNodeCount="1707" docActiveCodeLength="12868" docExpressionCount="1184" docLength="13271" endLine="334" length="3" offset="10933" repeat="3" startLine="334" starttimestamp="1651614162506" timestamp="1008186" timestamp2="1008450">
    <text><![CDATA[two]]></text>
  </DocumentChange>
  <DocumentChange __id="988" _type="Insert" date="Tue May 03 17:59:31 EDT 2022" docASTNodeCount="1707" docActiveCodeLength="12871" docExpressionCount="1184" docLength="13274" length="3" offset="10933" repeat="3" starttimestamp="1651614162506" timestamp="1008687" timestamp2="1008858">
    <text><![CDATA[one]]></text>
  </DocumentChange>
  <DocumentChange __id="1000" _type="Insert" date="Tue May 03 17:59:33 EDT 2022" docASTNodeCount="1708" docActiveCodeLength="12877" docExpressionCount="1184" docLength="13280" length="6" offset="10938" repeat="2" starttimestamp="1651614162506" timestamp="1011175" timestamp2="1011179">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1004" _type="Insert" date="Tue May 03 17:59:34 EDT 2022" docASTNodeCount="1709" docActiveCodeLength="12883" docExpressionCount="1184" docLength="13286" length="6" offset="10965" repeat="2" starttimestamp="1651614162506" timestamp="1012159" timestamp2="1012162">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1009" _type="Insert" date="Tue May 03 17:59:36 EDT 2022" docASTNodeCount="1710" docActiveCodeLength="12889" docExpressionCount="1184" docLength="13292" length="6" offset="10911" repeat="2" starttimestamp="1651614162506" timestamp="1013846" timestamp2="1013850">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1016" _type="Delete" date="Tue May 03 17:59:41 EDT 2022" docASTNodeCount="1710" docActiveCodeLength="12889" docExpressionCount="1184" docLength="13258" endLine="335" length="34" offset="10999" repeat="2" startLine="335" starttimestamp="1651614162506" timestamp="1019083" timestamp2="1019213">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="1023" _type="Insert" date="Tue May 03 17:59:44 EDT 2022" docASTNodeCount="1711" docActiveCodeLength="12895" docExpressionCount="1184" docLength="13264" length="6" offset="10305" repeat="2" starttimestamp="1651614162506" timestamp="1021680" timestamp2="1021683">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1029" _type="Insert" date="Tue May 03 17:59:46 EDT 2022" docASTNodeCount="1712" docActiveCodeLength="12901" docExpressionCount="1184" docLength="13270" length="6" offset="10072" repeat="2" starttimestamp="1651614162506" timestamp="1024106" timestamp2="1024112">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1043" _type="Replace" date="Tue May 03 18:00:03 EDT 2022" docASTNodeCount="1712" docActiveCodeLength="12901" docExpressionCount="1184" docLength="13270" endLine="287" insertionLength="22" int_docASTNodeCount="1706" int_docActiveCodeLength="12879" int_docExpressionCount="1182" int_docLength="13248" length="22" offset="9845" startLine="287" starttimestamp="1651614162506" timestamp="1040650">
    <deletedText><![CDATA[broadcastIPCMechanism1]]></deletedText>
    <insertedText><![CDATA[broadcastIpcMechanism1]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1058" _type="Insert" date="Tue May 03 18:00:12 EDT 2022" docASTNodeCount="1713" docActiveCodeLength="12907" docExpressionCount="1184" docLength="13276" length="6" offset="9417" repeat="2" starttimestamp="1651614162506" timestamp="1049799" timestamp2="1049802">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1068" _type="Insert" date="Tue May 03 18:00:21 EDT 2022" docASTNodeCount="1713" docActiveCodeLength="12910" docExpressionCount="1184" docLength="13279" length="3" offset="9452" repeat="3" starttimestamp="1651614162506" timestamp="1059124" timestamp2="1059312">
    <text><![CDATA[New]]></text>
  </DocumentChange>
  <DocumentChange __id="1081" _type="Replace" date="Tue May 03 18:00:24 EDT 2022" docASTNodeCount="1713" docActiveCodeLength="12913" docExpressionCount="1184" docLength="13282" endLine="278" insertionLength="18" int_docASTNodeCount="1712" int_docActiveCodeLength="12895" int_docExpressionCount="1183" int_docLength="13264" length="15" offset="9539" startLine="278" starttimestamp="1651614162506" timestamp="1062323">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[aNewProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1086" _type="Replace" date="Tue May 03 18:00:26 EDT 2022" docASTNodeCount="1713" docActiveCodeLength="12916" docExpressionCount="1184" docLength="13285" endLine="281" insertionLength="20" int_docASTNodeCount="1710" int_docActiveCodeLength="12896" int_docExpressionCount="1182" int_docLength="13265" length="17" offset="9679" startLine="281" starttimestamp="1651614162506" timestamp="1064116">
    <deletedText><![CDATA[		aProposalNumber]]></deletedText>
    <insertedText><![CDATA[		aNewProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1090" _type="Replace" date="Tue May 03 18:00:27 EDT 2022" docASTNodeCount="1713" docActiveCodeLength="12919" docExpressionCount="1184" docLength="13288" endLine="280" insertionLength="18" int_docASTNodeCount="1712" int_docActiveCodeLength="12901" int_docExpressionCount="1183" int_docLength="13270" length="15" offset="9649" startLine="280" starttimestamp="1651614162506" timestamp="1065058">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[aNewProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1103" _type="Insert" date="Tue May 03 18:00:44 EDT 2022" docASTNodeCount="1714" docActiveCodeLength="12925" docExpressionCount="1184" docLength="13294" length="6" offset="9265" repeat="2" starttimestamp="1651614162506" timestamp="1081604" timestamp2="1081609">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1106" _type="PauseCommand" date="Tue May 03 18:00:45 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1083290">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1686]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1105" _type="ShellCommand" date="Tue May 03 18:00:45 EDT 2022" starttimestamp="1651614162506" timestamp="1083290" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1107" _type="ShellCommand" date="Tue May 03 18:00:45 EDT 2022" starttimestamp="1651614162506" timestamp="1083385" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1108" _type="Insert" date="Tue May 03 18:00:45 EDT 2022" docASTNodeCount="1715" docActiveCodeLength="12931" docExpressionCount="1184" docLength="13300" length="6" offset="8957" repeat="2" starttimestamp="1651614162506" timestamp="1083402" timestamp2="1083408">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1111" _type="PauseCommand" date="Tue May 03 18:00:47 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1084807">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1405]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1110" _type="ShellCommand" date="Tue May 03 18:00:47 EDT 2022" starttimestamp="1651614162506" timestamp="1084807" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1112" _type="ShellCommand" date="Tue May 03 18:00:47 EDT 2022" starttimestamp="1651614162506" timestamp="1084883" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1113" _type="Insert" date="Tue May 03 18:00:47 EDT 2022" docASTNodeCount="1716" docActiveCodeLength="12937" docExpressionCount="1184" docLength="13306" length="6" offset="8860" repeat="2" starttimestamp="1651614162506" timestamp="1084902" timestamp2="1084906">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1116" _type="PauseCommand" date="Tue May 03 18:00:49 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1087065">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2163]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1115" _type="ShellCommand" date="Tue May 03 18:00:49 EDT 2022" starttimestamp="1651614162506" timestamp="1087065" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1117" _type="ShellCommand" date="Tue May 03 18:00:49 EDT 2022" starttimestamp="1651614162506" timestamp="1087153" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1118" _type="Insert" date="Tue May 03 18:00:49 EDT 2022" docASTNodeCount="1717" docActiveCodeLength="12943" docExpressionCount="1184" docLength="13312" length="6" offset="7791" repeat="2" starttimestamp="1651614162506" timestamp="1087168" timestamp2="1087173">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1121" _type="PauseCommand" date="Tue May 03 18:00:50 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1088290">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1122]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1120" _type="ShellCommand" date="Tue May 03 18:00:50 EDT 2022" starttimestamp="1651614162506" timestamp="1088290" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1122" _type="ShellCommand" date="Tue May 03 18:00:50 EDT 2022" starttimestamp="1651614162506" timestamp="1088384" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1123" _type="Insert" date="Tue May 03 18:00:50 EDT 2022" docASTNodeCount="1718" docActiveCodeLength="12949" docExpressionCount="1184" docLength="13318" length="6" offset="7765" repeat="2" starttimestamp="1651614162506" timestamp="1088401" timestamp2="1088405">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1126" _type="PauseCommand" date="Tue May 03 18:00:52 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1089622">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1221]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1125" _type="ConsoleOutput" date="Tue May 03 18:00:52 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1089622" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22564
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2256"), Diff(DELETE,"5"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1127" _type="ShellCommand" date="Tue May 03 18:00:52 EDT 2022" starttimestamp="1651614162506" timestamp="1089776" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1128" _type="ShellCommand" date="Tue May 03 18:00:52 EDT 2022" starttimestamp="1651614162506" timestamp="1089871" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1129" _type="Insert" date="Tue May 03 18:00:52 EDT 2022" docASTNodeCount="1719" docActiveCodeLength="12955" docExpressionCount="1184" docLength="13324" length="6" offset="7346" repeat="2" starttimestamp="1651614162506" timestamp="1089896" timestamp2="1089903">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1132" _type="PauseCommand" date="Tue May 03 18:00:53 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1090904">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1008]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1131" _type="ShellCommand" date="Tue May 03 18:00:53 EDT 2022" starttimestamp="1651614162506" timestamp="1090904" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1133" _type="ShellCommand" date="Tue May 03 18:00:53 EDT 2022" starttimestamp="1651614162506" timestamp="1090992" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1136" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:00:54 EDT 2022" starttimestamp="1651614162506" timestamp="1091553" />
  <Command __id="1137" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:54 EDT 2022" starttimestamp="1651614162506" timestamp="1091643" />
  <Command __id="1138" _type="EclipseCommand" commandID="" date="Tue May 03 18:00:54 EDT 2022" starttimestamp="1651614162506" timestamp="1091682" />
  <Command __id="1140" _type="PauseCommand" date="Tue May 03 18:00:57 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1095394">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3712]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1139" _type="ShellCommand" date="Tue May 03 18:00:57 EDT 2022" starttimestamp="1651614162506" timestamp="1095394" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1141" _type="ShellCommand" date="Tue May 03 18:00:58 EDT 2022" starttimestamp="1651614162506" timestamp="1095988" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1144" _type="MoveCaretCommand" caretOffset="5381" date="Tue May 03 18:00:58 EDT 2022" docOffset="5381" starttimestamp="1651614162506" timestamp="1096368" />
  <Command __id="1145" _type="SelectTextCommand" caretOffset="5381" date="Tue May 03 18:00:59 EDT 2022" end="5381" start="5373" starttimestamp="1651614162506" timestamp="1096509" />
  <Command __id="1146" _type="SelectTextCommand" caretOffset="5403" date="Tue May 03 18:00:59 EDT 2022" end="5403" start="5356" starttimestamp="1651614162506" timestamp="1096863" />
  <Command __id="1148" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:00:59 EDT 2022" starttimestamp="1651614162506" timestamp="1097480" />
  <Command __id="1150" _type="PauseCommand" date="Tue May 03 18:01:02 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1099852">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2372]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1149" _type="ShellCommand" date="Tue May 03 18:01:02 EDT 2022" starttimestamp="1651614162506" timestamp="1099852" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1151" _type="ShellCommand" date="Tue May 03 18:01:02 EDT 2022" starttimestamp="1651614162506" timestamp="1099945" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1155" _type="PauseCommand" date="Tue May 03 18:01:05 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1102582">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2623]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1154" _type="MoveCaretCommand" caretOffset="4932" date="Tue May 03 18:01:05 EDT 2022" docOffset="4932" starttimestamp="1651614162506" timestamp="1102582" />
  <Command __id="1156" _type="SelectTextCommand" caretOffset="4934" date="Tue May 03 18:01:05 EDT 2022" end="4934" start="4930" starttimestamp="1651614162506" timestamp="1102689" />
  <Command __id="1158" _type="PauseCommand" date="Tue May 03 18:01:06 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1104030">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1341]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1159" _type="InsertStringCommand" date="Tue May 03 18:01:06 EDT 2022" starttimestamp="1651614162506" timestamp="1104044" timestamp2="1104044">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1161" _type="InsertStringCommand" date="Tue May 03 18:01:06 EDT 2022" starttimestamp="1651614162506" timestamp="1104165" timestamp2="1104165">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1163" _type="InsertStringCommand" date="Tue May 03 18:01:06 EDT 2022" starttimestamp="1651614162506" timestamp="1104241" timestamp2="1104241">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1165" _type="InsertStringCommand" date="Tue May 03 18:01:06 EDT 2022" starttimestamp="1651614162506" timestamp="1104370" timestamp2="1104370">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1167" _type="InsertStringCommand" date="Tue May 03 18:01:07 EDT 2022" starttimestamp="1651614162506" timestamp="1104951" timestamp2="1104951">
    <data><![CDATA[W]]></data>
  </Command>
  <Command __id="1169" _type="InsertStringCommand" date="Tue May 03 18:01:07 EDT 2022" starttimestamp="1651614162506" timestamp="1105203" timestamp2="1105203">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1171" _type="InsertStringCommand" date="Tue May 03 18:01:07 EDT 2022" starttimestamp="1651614162506" timestamp="1105330" timestamp2="1105330">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1173" _type="InsertStringCommand" date="Tue May 03 18:01:07 EDT 2022" starttimestamp="1651614162506" timestamp="1105454" timestamp2="1105454">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1175" _type="InsertStringCommand" date="Tue May 03 18:01:08 EDT 2022" starttimestamp="1651614162506" timestamp="1105534" timestamp2="1105534">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1177" _type="InsertStringCommand" date="Tue May 03 18:01:08 EDT 2022" starttimestamp="1651614162506" timestamp="1105706" timestamp2="1105706">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1179" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:08 EDT 2022" starttimestamp="1651614162506" timestamp="1105972" />
  <Command __id="1181" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:08 EDT 2022" starttimestamp="1651614162506" timestamp="1106114" />
  <Command __id="1183" _type="InsertStringCommand" date="Tue May 03 18:01:09 EDT 2022" starttimestamp="1651614162506" timestamp="1106776" timestamp2="1106776">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1185" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:09 EDT 2022" starttimestamp="1651614162506" timestamp="1107055" />
  <Command __id="1187" _type="InsertStringCommand" date="Tue May 03 18:01:09 EDT 2022" starttimestamp="1651614162506" timestamp="1107357" timestamp2="1107357">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1189" _type="InsertStringCommand" date="Tue May 03 18:01:10 EDT 2022" starttimestamp="1651614162506" timestamp="1107568" timestamp2="1107568">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1191" _type="InsertStringCommand" date="Tue May 03 18:01:10 EDT 2022" starttimestamp="1651614162506" timestamp="1107719" timestamp2="1107719">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1193" _type="InsertStringCommand" date="Tue May 03 18:01:10 EDT 2022" starttimestamp="1651614162506" timestamp="1107818" timestamp2="1107818">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1195" _type="InsertStringCommand" date="Tue May 03 18:01:10 EDT 2022" starttimestamp="1651614162506" timestamp="1107948" timestamp2="1107948">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1197" _type="InsertStringCommand" date="Tue May 03 18:01:10 EDT 2022" starttimestamp="1651614162506" timestamp="1108060" timestamp2="1108060">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1199" _type="InsertStringCommand" date="Tue May 03 18:01:11 EDT 2022" starttimestamp="1651614162506" timestamp="1108730" timestamp2="1108730">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="1201" _type="InsertStringCommand" date="Tue May 03 18:01:11 EDT 2022" starttimestamp="1651614162506" timestamp="1108890" timestamp2="1108890">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1203" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:11 EDT 2022" starttimestamp="1651614162506" timestamp="1109320" />
  <Command __id="1205" _type="InsertStringCommand" date="Tue May 03 18:01:11 EDT 2022" starttimestamp="1651614162506" timestamp="1109482" timestamp2="1109482">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1207" _type="InsertStringCommand" date="Tue May 03 18:01:12 EDT 2022" starttimestamp="1651614162506" timestamp="1109524" timestamp2="1109524">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1209" _type="PauseCommand" date="Tue May 03 18:01:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1112190">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2666]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1208" _type="ConsoleOutput" date="Tue May 03 18:01:14 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1112190" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22565
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2256"), Diff(DELETE,"4"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1210" _type="ShellCommand" date="Tue May 03 18:01:15 EDT 2022" starttimestamp="1651614162506" timestamp="1112558" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1211" _type="ShellCommand" date="Tue May 03 18:01:15 EDT 2022" starttimestamp="1651614162506" timestamp="1112650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1215" _type="PauseCommand" date="Tue May 03 18:01:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1114609">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1943]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1214" _type="ShellCommand" date="Tue May 03 18:01:17 EDT 2022" starttimestamp="1651614162506" timestamp="1114609" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1216" _type="ShellCommand" date="Tue May 03 18:01:17 EDT 2022" starttimestamp="1651614162506" timestamp="1114690" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1220" _type="PauseCommand" date="Tue May 03 18:01:18 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1116270">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1568]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1219" _type="SelectTextCommand" caretOffset="3925" date="Tue May 03 18:01:18 EDT 2022" end="4330" start="3925" starttimestamp="1651614162506" timestamp="1116270" />
  <Command __id="1222" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:19 EDT 2022" starttimestamp="1651614162506" timestamp="1117019" />
  <Command __id="1224" _type="PauseCommand" date="Tue May 03 18:01:22 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1119662">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2643]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1223" _type="ShellCommand" date="Tue May 03 18:01:22 EDT 2022" starttimestamp="1651614162506" timestamp="1119662" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1225" _type="ShellCommand" date="Tue May 03 18:01:22 EDT 2022" starttimestamp="1651614162506" timestamp="1119750" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1227" _type="PauseCommand" date="Tue May 03 18:01:25 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1123428">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3678]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1226" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:01:25 EDT 2022" starttimestamp="1651614162506" timestamp="1123428" />
  <Command __id="1228" _type="EclipseCommand" commandID="" date="Tue May 03 18:01:26 EDT 2022" starttimestamp="1651614162506" timestamp="1123518" />
  <Command __id="1229" _type="EclipseCommand" commandID="" date="Tue May 03 18:01:26 EDT 2022" starttimestamp="1651614162506" timestamp="1123546" />
  <Command __id="1231" _type="PauseCommand" date="Tue May 03 18:01:41 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="1138616">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[15070]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1230" _type="ShellCommand" date="Tue May 03 18:01:41 EDT 2022" starttimestamp="1651614162506" timestamp="1138616" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1232" _type="ShellCommand" date="Tue May 03 18:01:41 EDT 2022" starttimestamp="1651614162506" timestamp="1138743" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1236" _type="PauseCommand" date="Tue May 03 18:01:43 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1141329">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Delete]]></prev>
    <pause><![CDATA[2527]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1235" _type="SelectTextCommand" caretOffset="1742" date="Tue May 03 18:01:43 EDT 2022" end="1836" start="1742" starttimestamp="1651614162506" timestamp="1141329" />
  <Command __id="1238" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:44 EDT 2022" starttimestamp="1651614162506" timestamp="1141970" />
  <Command __id="1240" _type="PauseCommand" date="Tue May 03 18:01:45 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1143159">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1189]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1239" _type="SelectTextCommand" caretOffset="1611" date="Tue May 03 18:01:45 EDT 2022" end="1611" start="1609" starttimestamp="1651614162506" timestamp="1143159" />
  <Command __id="1241" _type="MoveCaretCommand" caretOffset="1586" date="Tue May 03 18:01:46 EDT 2022" docOffset="1586" starttimestamp="1651614162506" timestamp="1143839" />
  <Command __id="1242" _type="SelectTextCommand" caretOffset="1590" date="Tue May 03 18:01:46 EDT 2022" end="1590" start="1584" starttimestamp="1651614162506" timestamp="1143978" />
  <Command __id="1243" _type="SelectTextCommand" caretOffset="1611" date="Tue May 03 18:01:46 EDT 2022" end="1611" start="1584" starttimestamp="1651614162506" timestamp="1144099" />
  <Command __id="1245" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:47 EDT 2022" starttimestamp="1651614162506" timestamp="1144877" />
  <Command __id="1246" _type="MoveCaretCommand" caretOffset="1409" date="Tue May 03 18:01:48 EDT 2022" docOffset="1409" starttimestamp="1651614162506" timestamp="1145752" />
  <Command __id="1247" _type="SelectTextCommand" caretOffset="1417" date="Tue May 03 18:01:48 EDT 2022" end="1417" start="1409" starttimestamp="1651614162506" timestamp="1145912" />
  <Command __id="1248" _type="SelectTextCommand" caretOffset="1411" date="Tue May 03 18:01:48 EDT 2022" end="1411" start="1366" starttimestamp="1651614162506" timestamp="1146049" />
  <Command __id="1250" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:48 EDT 2022" starttimestamp="1651614162506" timestamp="1146339" />
  <Command __id="1251" _type="MoveCaretCommand" caretOffset="1314" date="Tue May 03 18:01:49 EDT 2022" docOffset="1314" starttimestamp="1651614162506" timestamp="1146953" />
  <Command __id="1252" _type="SelectTextCommand" caretOffset="1317" date="Tue May 03 18:01:49 EDT 2022" end="1317" start="1293" starttimestamp="1651614162506" timestamp="1147094" />
  <Command __id="1253" _type="SelectTextCommand" caretOffset="1320" date="Tue May 03 18:01:49 EDT 2022" end="1320" start="1272" starttimestamp="1651614162506" timestamp="1147220" />
  <Command __id="1255" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:49 EDT 2022" starttimestamp="1651614162506" timestamp="1147492" />
  <Command __id="1256" _type="MoveCaretCommand" caretOffset="1169" date="Tue May 03 18:01:50 EDT 2022" docOffset="1169" starttimestamp="1651614162506" timestamp="1148410" />
  <Command __id="1257" _type="SelectTextCommand" caretOffset="1180" date="Tue May 03 18:01:51 EDT 2022" end="1180" start="1164" starttimestamp="1651614162506" timestamp="1148555" />
  <Command __id="1258" _type="SelectTextCommand" caretOffset="1183" date="Tue May 03 18:01:51 EDT 2022" end="1183" start="1146" starttimestamp="1651614162506" timestamp="1148696" />
  <Command __id="1260" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:51 EDT 2022" starttimestamp="1651614162506" timestamp="1148934" />
  <Command __id="1262" _type="PauseCommand" date="Tue May 03 18:01:52 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1150063">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1129]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1261" _type="MoveCaretCommand" caretOffset="644" date="Tue May 03 18:01:52 EDT 2022" docOffset="644" starttimestamp="1651614162506" timestamp="1150063" />
  <Command __id="1263" _type="MoveCaretCommand" caretOffset="700" date="Tue May 03 18:01:53 EDT 2022" docOffset="700" starttimestamp="1651614162506" timestamp="1150648" />
  <Command __id="1264" _type="SelectTextCommand" caretOffset="717" date="Tue May 03 18:01:53 EDT 2022" end="717" start="676" starttimestamp="1651614162506" timestamp="1150794" />
  <Command __id="1265" _type="SelectTextCommand" caretOffset="720" date="Tue May 03 18:01:53 EDT 2022" end="720" start="657" starttimestamp="1651614162506" timestamp="1150924" />
  <Command __id="1267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:01:53 EDT 2022" starttimestamp="1651614162506" timestamp="1151088" />
  <Command __id="1269" _type="PauseCommand" date="Tue May 03 18:02:07 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="1164961">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[13873]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1268" _type="SelectTextCommand" caretOffset="4188" date="Tue May 03 18:02:07 EDT 2022" end="4188" start="4185" starttimestamp="1651614162506" timestamp="1164961" />
  <Command __id="1271" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:02:08 EDT 2022" starttimestamp="1651614162506" timestamp="1165818" />
  <Command __id="1272" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:02:09 EDT 2022" starttimestamp="1651614162506" timestamp="1166582" />
  <Command __id="1273" _type="EclipseCommand" commandID="" date="Tue May 03 18:02:09 EDT 2022" starttimestamp="1651614162506" timestamp="1166674" />
  <Command __id="1274" _type="EclipseCommand" commandID="" date="Tue May 03 18:02:09 EDT 2022" starttimestamp="1651614162506" timestamp="1166704" />
  <Command __id="1275" _type="MoveCaretCommand" caretOffset="4401" date="Tue May 03 18:02:09 EDT 2022" docOffset="4401" starttimestamp="1651614162506" timestamp="1167001" />
  <Command __id="1277" _type="PauseCommand" date="Tue May 03 18:02:10 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1168366">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1365]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1276" _type="ShellCommand" date="Tue May 03 18:02:10 EDT 2022" starttimestamp="1651614162506" timestamp="1168366" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1279" _type="PauseCommand" date="Tue May 03 18:02:12 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1170026">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1660]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1278" _type="ShellCommand" date="Tue May 03 18:02:12 EDT 2022" starttimestamp="1651614162506" timestamp="1170026" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1280" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:02:12 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1170175" type="Run" />
  <Command __id="1281" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:02:12 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1170175" type="Run" />
  <Command __id="1282" _type="ShellCommand" date="Tue May 03 18:02:13 EDT 2022" starttimestamp="1651614162506" timestamp="1170778" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1294" _type="PauseCommand" date="Tue May 03 18:02:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1176962">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2082]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="1293" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:02:19 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1176962" type="Run" />
  <Command __id="1295" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:02:19 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1176962" type="Run" />
  <Command __id="1297" _type="PauseCommand" date="Tue May 03 18:02:21 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1179463">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2501]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1296" _type="ShellCommand" date="Tue May 03 18:02:21 EDT 2022" starttimestamp="1651614162506" timestamp="1179463" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1299" _type="PauseCommand" date="Tue May 03 18:02:23 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1181416">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1953]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1298" _type="ShellCommand" date="Tue May 03 18:02:23 EDT 2022" starttimestamp="1651614162506" timestamp="1181416" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1300" _type="SelectTextCommand" caretOffset="4252" date="Tue May 03 18:02:24 EDT 2022" end="4258" start="4252" starttimestamp="1651614162506" timestamp="1181922" />
  <Command __id="1302" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:02:25 EDT 2022" starttimestamp="1651614162506" timestamp="1182514" />
  <Command __id="1304" _type="PauseCommand" date="Tue May 03 18:02:26 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1184321">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1807]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1303" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:02:26 EDT 2022" starttimestamp="1651614162506" timestamp="1184321" />
  <Command __id="1305" _type="EclipseCommand" commandID="" date="Tue May 03 18:02:26 EDT 2022" starttimestamp="1651614162506" timestamp="1184412" />
  <Command __id="1306" _type="EclipseCommand" commandID="" date="Tue May 03 18:02:26 EDT 2022" starttimestamp="1651614162506" timestamp="1184436" />
  <DocumentChange __id="1134" _type="Insert" date="Tue May 03 18:00:53 EDT 2022" docASTNodeCount="1720" docActiveCodeLength="12961" docExpressionCount="1184" docLength="13330" length="6" offset="7326" repeat="2" starttimestamp="1651614162506" timestamp="1091014" timestamp2="1091020">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1142" _type="Insert" date="Tue May 03 18:00:58 EDT 2022" docASTNodeCount="1721" docActiveCodeLength="12967" docExpressionCount="1184" docLength="13336" length="6" offset="5286" repeat="2" starttimestamp="1651614162506" timestamp="1096006" timestamp2="1096011">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1147" _type="Delete" date="Tue May 03 18:00:59 EDT 2022" docASTNodeCount="1721" docActiveCodeLength="12963" docExpressionCount="1184" docLength="13289" endLine="143" length="47" offset="5356" startLine="142" starttimestamp="1651614162506" timestamp="1097475">
    <text><![CDATA[		// Ideally the prefixes should be main args
]]></text>
  </DocumentChange>
  <DocumentChange __id="1152" _type="Insert" date="Tue May 03 18:01:02 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12969" docExpressionCount="1184" docLength="13295" length="6" offset="4916" repeat="2" starttimestamp="1651614162506" timestamp="1099959" timestamp2="1099963">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1157" _type="Replace" date="Tue May 03 18:01:06 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12966" docExpressionCount="1184" docLength="13292" endLine="120" insertionLength="1" int_docASTNodeCount="1717" int_docActiveCodeLength="12965" int_docExpressionCount="1183" int_docLength="13291" length="4" offset="4930" startLine="120" starttimestamp="1651614162506" timestamp="1104030">
    <deletedText><![CDATA[fake]]></deletedText>
    <insertedText><![CDATA[w]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1160" _type="Insert" date="Tue May 03 18:01:06 EDT 2022" docASTNodeCount="1721" docActiveCodeLength="12975" docExpressionCount="1184" docLength="13301" length="9" offset="4931" repeat="9" starttimestamp="1651614162506" timestamp="1104136" timestamp2="1105702">
    <text><![CDATA[ellWhat i]]></text>
  </DocumentChange>
  <DocumentChange __id="1178" _type="Delete" date="Tue May 03 18:01:08 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12973" docExpressionCount="1184" docLength="13299" endLine="120" length="2" offset="4938" repeat="2" startLine="120" starttimestamp="1651614162506" timestamp="1105970" timestamp2="1106111">
    <text><![CDATA[ i]]></text>
  </DocumentChange>
  <DocumentChange __id="1182" _type="Insert" date="Tue May 03 18:01:09 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12974" docExpressionCount="1184" docLength="13300" length="1" offset="4938" starttimestamp="1651614162506" timestamp="1106772">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="1184" _type="Delete" date="Tue May 03 18:01:09 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12973" docExpressionCount="1184" docLength="13299" endLine="120" length="1" offset="4938" startLine="120" starttimestamp="1651614162506" timestamp="1107053">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="1186" _type="Insert" date="Tue May 03 18:01:09 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12981" docExpressionCount="1184" docLength="13307" length="8" offset="4938" repeat="8" starttimestamp="1651614162506" timestamp="1107354" timestamp2="1108887">
    <text><![CDATA[ShouldI ]]></text>
  </DocumentChange>
  <DocumentChange __id="1202" _type="Delete" date="Tue May 03 18:01:11 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12980" docExpressionCount="1184" docLength="13306" endLine="120" length="1" offset="4945" startLine="120" starttimestamp="1651614162506" timestamp="1109318">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <DocumentChange __id="1204" _type="Insert" date="Tue May 03 18:01:11 EDT 2022" docASTNodeCount="1722" docActiveCodeLength="12982" docExpressionCount="1184" docLength="13308" length="2" offset="4945" repeat="2" starttimestamp="1651614162506" timestamp="1109478" timestamp2="1109520">
    <text><![CDATA[do]]></text>
  </DocumentChange>
  <DocumentChange __id="1212" _type="Insert" date="Tue May 03 18:01:15 EDT 2022" docASTNodeCount="1723" docActiveCodeLength="12988" docExpressionCount="1184" docLength="13314" length="6" offset="3894" repeat="2" starttimestamp="1651614162506" timestamp="1112666" timestamp2="1112669">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1217" _type="Insert" date="Tue May 03 18:01:17 EDT 2022" docASTNodeCount="1724" docActiveCodeLength="12994" docExpressionCount="1184" docLength="13320" length="6" offset="3569" repeat="2" starttimestamp="1651614162506" timestamp="1114702" timestamp2="1114707">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1221" _type="Delete" date="Tue May 03 18:01:19 EDT 2022" docASTNodeCount="1664" docActiveCodeLength="12589" docExpressionCount="1129" docLength="12915" endLine="101" length="405" offset="3925" startLine="97" starttimestamp="1651614162506" timestamp="1117015">
    <text><![CDATA[	System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));]]></text>
  </DocumentChange>
  <DocumentChange __id="1233" _type="Delete" date="Tue May 03 18:01:41 EDT 2022" docASTNodeCount="1656" docActiveCodeLength="12537" docExpressionCount="1122" docLength="12863" endLine="44" length="52" offset="1742" repeat="2" startLine="43" starttimestamp="1651614162506" timestamp="1138802" timestamp2="1138807">
    <text><![CDATA[import util.trace.port.PerformanceExperimentEnded;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1237" _type="Delete" date="Tue May 03 18:01:44 EDT 2022" docASTNodeCount="1640" docActiveCodeLength="12443" docExpressionCount="1108" docLength="12769" endLine="44" length="94" offset="1742" startLine="43" starttimestamp="1651614162506" timestamp="1141965">
    <text><![CDATA[import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.PortTraceUtility;]]></text>
  </DocumentChange>
  <DocumentChange __id="1244" _type="Delete" date="Tue May 03 18:01:47 EDT 2022" docASTNodeCount="1634" docActiveCodeLength="12416" docExpressionCount="1103" docLength="12742" endLine="40" length="27" offset="1584" startLine="39" starttimestamp="1651614162506" timestamp="1144871">
    <text><![CDATA[import util.trace.Tracer;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1249" _type="Delete" date="Tue May 03 18:01:48 EDT 2022" docASTNodeCount="1628" docActiveCodeLength="12371" docExpressionCount="1098" docLength="12697" endLine="35" length="45" offset="1366" startLine="34" starttimestamp="1651614162506" timestamp="1146334">
    <text><![CDATA[import server.remote.ServerRemoteObjectRMI;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1254" _type="Delete" date="Tue May 03 18:01:49 EDT 2022" docASTNodeCount="1622" docActiveCodeLength="12323" docExpressionCount="1093" docLength="12649" endLine="33" length="48" offset="1272" startLine="32" starttimestamp="1651614162506" timestamp="1147487">
    <text><![CDATA[import server.remote.ServerRemoteInterfaceRMI;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1259" _type="Delete" date="Tue May 03 18:01:51 EDT 2022" docASTNodeCount="1618" docActiveCodeLength="12286" docExpressionCount="1090" docLength="12612" endLine="30" length="37" offset="1146" startLine="29" starttimestamp="1651614162506" timestamp="1148929">
    <text><![CDATA[import readThread.ClientReadThread;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1266" _type="Delete" date="Tue May 03 18:01:53 EDT 2022" docASTNodeCount="1614" docActiveCodeLength="12223" docExpressionCount="1087" docLength="12549" endLine="20" length="63" offset="657" startLine="19" starttimestamp="1651614162506" timestamp="1151083">
    <text><![CDATA[import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
]]></text>
  </DocumentChange>
  <DocumentChange __id="1270" _type="Delete" date="Tue May 03 18:02:08 EDT 2022" docASTNodeCount="1614" docActiveCodeLength="12220" docExpressionCount="1087" docLength="12546" endLine="109" length="3" offset="4185" startLine="109" starttimestamp="1651614162506" timestamp="1165815">
    <text><![CDATA[Ido]]></text>
  </DocumentChange>
  <DocumentChange __id="1301" _type="Delete" date="Tue May 03 18:02:25 EDT 2022" docASTNodeCount="1614" docActiveCodeLength="12218" docExpressionCount="1087" docLength="12540" endLine="115" length="6" offset="4252" startLine="115" starttimestamp="1651614162506" timestamp="1182508">
    <text><![CDATA[		//A5]]></text>
  </DocumentChange>
  <Command __id="1308" _type="PauseCommand" date="Tue May 03 18:02:29 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1186717">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2281]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1307" _type="SelectTextCommand" caretOffset="4503" date="Tue May 03 18:02:29 EDT 2022" end="4503" start="4209" starttimestamp="1651614162506" timestamp="1186717" />
  <Command __id="1310" _type="CutCommand" date="Tue May 03 18:02:29 EDT 2022" starttimestamp="1651614162506" timestamp="1187482" />
  <Command __id="1312" _type="PauseCommand" date="Tue May 03 18:02:32 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1190194">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[2712]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1311" _type="MoveCaretCommand" caretOffset="12237" date="Tue May 03 18:02:32 EDT 2022" docOffset="12237" starttimestamp="1651614162506" timestamp="1190194" />
  <Command __id="1313" _type="MoveCaretCommand" caretOffset="12241" date="Tue May 03 18:02:33 EDT 2022" docOffset="12241" starttimestamp="1651614162506" timestamp="1190699" />
  <Command __id="1315" _type="PauseCommand" date="Tue May 03 18:02:34 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1192028">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1329]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1316" _type="InsertStringCommand" date="Tue May 03 18:02:34 EDT 2022" starttimestamp="1651614162506" timestamp="1192034" timestamp2="1192034">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1318" _type="InsertStringCommand" date="Tue May 03 18:02:34 EDT 2022" starttimestamp="1651614162506" timestamp="1192142" timestamp2="1192142">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1320" _type="PasteCommand" date="Tue May 03 18:02:34 EDT 2022" starttimestamp="1651614162506" timestamp="1192430" />
  <Command __id="1321" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:02:35 EDT 2022" starttimestamp="1651614162506" timestamp="1193057" />
  <Command __id="1322" _type="EclipseCommand" commandID="" date="Tue May 03 18:02:35 EDT 2022" starttimestamp="1651614162506" timestamp="1193147" />
  <Command __id="1323" _type="EclipseCommand" commandID="" date="Tue May 03 18:02:35 EDT 2022" starttimestamp="1651614162506" timestamp="1193169" />
  <Command __id="1325" _type="PauseCommand" date="Tue May 03 18:02:37 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1194547">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1378]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1324" _type="MoveCaretCommand" caretOffset="12346" date="Tue May 03 18:02:37 EDT 2022" docOffset="12346" starttimestamp="1651614162506" timestamp="1194547" />
  <Command __id="1327" _type="PauseCommand" date="Tue May 03 18:02:44 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1202397">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7850]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1326" _type="ConsoleOutput" date="Tue May 03 18:02:44 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1202397" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21753
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"2565"), Diff(INSERT,"1753"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1329" _type="PauseCommand" date="Tue May 03 18:02:46 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1204216">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1819]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1328" _type="ShellCommand" date="Tue May 03 18:02:46 EDT 2022" starttimestamp="1651614162506" timestamp="1204216" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1330" _type="ShellCommand" date="Tue May 03 18:02:46 EDT 2022" starttimestamp="1651614162506" timestamp="1204330" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1334" _type="PauseCommand" date="Tue May 03 18:02:49 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1207384">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2987]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1336" _type="UndoCommand" date="Tue May 03 18:02:49 EDT 2022" starttimestamp="1651614162506" timestamp="1207409" />
  <Command __id="1337" _type="MoveCaretCommand" caretOffset="8663" date="Tue May 03 18:02:50 EDT 2022" docOffset="8663" starttimestamp="1651614162506" timestamp="1208127" />
  <Command __id="1339" _type="PauseCommand" date="Tue May 03 18:02:56 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1213983">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5856]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1338" _type="MoveCaretCommand" caretOffset="4967" date="Tue May 03 18:02:56 EDT 2022" docOffset="4967" starttimestamp="1651614162506" timestamp="1213983" />
  <Command __id="1340" _type="SelectTextCommand" caretOffset="4970" date="Tue May 03 18:02:56 EDT 2022" end="4970" start="4966" starttimestamp="1651614162506" timestamp="1214122" />
  <Command __id="1341" _type="SelectTextCommand" caretOffset="4999" date="Tue May 03 18:02:56 EDT 2022" end="4999" start="4960" starttimestamp="1651614162506" timestamp="1214441" />
  <Command __id="1343" _type="PauseCommand" date="Tue May 03 18:02:59 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1216704">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2263]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1342" _type="ConsoleOutput" date="Tue May 03 18:02:59 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1216704" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14303
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2175"), Diff(INSERT,"1430"), Diff(EQUAL,"3¶")]]]></diff>
  </Command>
  <Command __id="1345" _type="PauseCommand" date="Tue May 03 18:03:05 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1222783">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[6079]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1346" _type="PasteCommand" date="Tue May 03 18:03:05 EDT 2022" starttimestamp="1651614162506" timestamp="1222793" />
  <Command __id="1348" _type="PauseCommand" date="Tue May 03 18:03:06 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1224240">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1447]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1349" _type="InsertStringCommand" date="Tue May 03 18:03:06 EDT 2022" starttimestamp="1651614162506" timestamp="1224246" timestamp2="1224246">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1351" _type="PauseCommand" date="Tue May 03 18:03:08 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1225867">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1621]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1350" _type="MoveCaretCommand" caretOffset="5010" date="Tue May 03 18:03:08 EDT 2022" docOffset="5010" starttimestamp="1651614162506" timestamp="1225867" />
  <Command __id="1352" _type="SelectTextCommand" caretOffset="5011" date="Tue May 03 18:03:08 EDT 2022" end="5011" start="5009" starttimestamp="1651614162506" timestamp="1226000" />
  <Command __id="1353" _type="SelectTextCommand" caretOffset="5024" date="Tue May 03 18:03:08 EDT 2022" end="5024" start="4960" starttimestamp="1651614162506" timestamp="1226116" />
  <Command __id="1354" _type="CopyCommand" date="Tue May 03 18:03:09 EDT 2022" starttimestamp="1651614162506" timestamp="1227029" />
  <Command __id="1355" _type="MoveCaretCommand" caretOffset="5010" date="Tue May 03 18:03:09 EDT 2022" docOffset="5010" starttimestamp="1651614162506" timestamp="1227222" />
  <DocumentChange __id="1309" _type="Delete" date="Tue May 03 18:02:29 EDT 2022" docASTNodeCount="1579" docActiveCodeLength="11924" docExpressionCount="1063" docLength="12246" endLine="124" length="294" offset="4209" startLine="113" starttimestamp="1651614162506" timestamp="1187461">
    <text><![CDATA[@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1314" _type="Insert" date="Tue May 03 18:02:34 EDT 2022" docASTNodeCount="1579" docActiveCodeLength="11930" docExpressionCount="1063" docLength="12252" length="6" offset="12241" repeat="2" starttimestamp="1651614162506" timestamp="1192028" timestamp2="1192138">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1319" _type="Replace" date="Tue May 03 18:02:34 EDT 2022" docASTNodeCount="1614" docActiveCodeLength="12224" docExpressionCount="1087" docLength="12546" endLine="395" insertionLength="295" int_docASTNodeCount="1579" int_docActiveCodeLength="11929" int_docExpressionCount="1063" int_docLength="12251" length="1" offset="12246" startLine="395" starttimestamp="1651614162506" timestamp="1192422">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1331" _type="Insert" date="Tue May 03 18:02:46 EDT 2022" docASTNodeCount="1615" docActiveCodeLength="12230" docExpressionCount="1087" docLength="12552" length="6" offset="8405" repeat="2" starttimestamp="1651614162506" timestamp="1204397" timestamp2="1204403">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1333" _type="Delete" date="Tue May 03 18:02:49 EDT 2022" docASTNodeCount="1614" docActiveCodeLength="12224" docExpressionCount="1087" docLength="12546" endLine="254" length="6" offset="8405" repeat="2" startLine="254" starttimestamp="1651614162506" timestamp="1207384" timestamp2="1207387">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1344" _type="Replace" date="Tue May 03 18:03:05 EDT 2022" docASTNodeCount="1621" docActiveCodeLength="12281" docExpressionCount="1093" docLength="12569" endLine="135" insertionLength="62" int_docASTNodeCount="1614" int_docActiveCodeLength="12219" int_docExpressionCount="1087" int_docLength="12507" length="39" offset="4960" startLine="134" starttimestamp="1651614162506" timestamp="1222783">
    <deletedText><![CDATA[			// TODO Auto-generated catch block
]]></deletedText>
    <insertedText><![CDATA[			System.out.println("this is stupid, dont want to do this");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1347" _type="Replace" date="Tue May 03 18:03:06 EDT 2022" docASTNodeCount="1621" docActiveCodeLength="12283" docExpressionCount="1093" docLength="12571" endLine="134" insertionLength="5" int_docASTNodeCount="1621" int_docActiveCodeLength="12278" int_docExpressionCount="1093" int_docLength="12566" length="3" offset="5022" startLine="134" starttimestamp="1651614162506" timestamp="1224240">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[
			]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1358" _type="Replace" date="Tue May 03 18:03:13 EDT 2022" docASTNodeCount="1621" docActiveCodeLength="12248" docExpressionCount="1093" docLength="12536" endLine="134" insertionLength="1" int_docASTNodeCount="1621" int_docActiveCodeLength="12247" int_docExpressionCount="1093" int_docLength="12535" length="36" offset="4983" startLine="134" starttimestamp="1651614162506" timestamp="1230683">
    <deletedText><![CDATA[this is stupid, dont want to do this]]></deletedText>
    <insertedText><![CDATA[w]]></insertedText>
  </DocumentChange>
  <Command __id="1357" _type="PauseCommand" date="Tue May 03 18:03:12 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1230329">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3107]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1356" _type="SelectTextCommand" caretOffset="5019" date="Tue May 03 18:03:12 EDT 2022" end="5019" start="4983" starttimestamp="1651614162506" timestamp="1230329" />
  <Command __id="1359" _type="InsertStringCommand" date="Tue May 03 18:03:13 EDT 2022" starttimestamp="1651614162506" timestamp="1230687" timestamp2="1230687">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1361" _type="InsertStringCommand" date="Tue May 03 18:03:13 EDT 2022" starttimestamp="1651614162506" timestamp="1230766" timestamp2="1230766">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1363" _type="InsertStringCommand" date="Tue May 03 18:03:13 EDT 2022" starttimestamp="1651614162506" timestamp="1231026" timestamp2="1231026">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1364" _type="ConsoleOutput" date="Tue May 03 18:03:13 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1231174" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14466
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):14"), Diff(DELETE,"303"), Diff(INSERT,"466"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1366" _type="InsertStringCommand" date="Tue May 03 18:03:13 EDT 2022" starttimestamp="1651614162506" timestamp="1231187" timestamp2="1231187">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1368" _type="InsertStringCommand" date="Tue May 03 18:03:13 EDT 2022" starttimestamp="1651614162506" timestamp="1231307" timestamp2="1231307">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1370" _type="InsertStringCommand" date="Tue May 03 18:03:13 EDT 2022" starttimestamp="1651614162506" timestamp="1231407" timestamp2="1231407">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1372" _type="InsertStringCommand" date="Tue May 03 18:03:14 EDT 2022" starttimestamp="1651614162506" timestamp="1231557" timestamp2="1231557">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1374" _type="InsertStringCommand" date="Tue May 03 18:03:14 EDT 2022" starttimestamp="1651614162506" timestamp="1231627" timestamp2="1231627">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1376" _type="InsertStringCommand" date="Tue May 03 18:03:14 EDT 2022" starttimestamp="1651614162506" timestamp="1231727" timestamp2="1231727">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1378" _type="InsertStringCommand" date="Tue May 03 18:03:14 EDT 2022" starttimestamp="1651614162506" timestamp="1231855" timestamp2="1231855">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1381" _type="PauseCommand" date="Tue May 03 18:03:15 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1232920">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1065]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1380" _type="InsertStringCommand" date="Tue May 03 18:03:15 EDT 2022" starttimestamp="1651614162506" timestamp="1232920" timestamp2="1232920">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1383" _type="InsertStringCommand" date="Tue May 03 18:03:15 EDT 2022" starttimestamp="1651614162506" timestamp="1233011" timestamp2="1233011">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1385" _type="InsertStringCommand" date="Tue May 03 18:03:15 EDT 2022" starttimestamp="1651614162506" timestamp="1233252" timestamp2="1233252">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1387" _type="InsertStringCommand" date="Tue May 03 18:03:15 EDT 2022" starttimestamp="1651614162506" timestamp="1233390" timestamp2="1233390">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1389" _type="InsertStringCommand" date="Tue May 03 18:03:16 EDT 2022" starttimestamp="1651614162506" timestamp="1233551" timestamp2="1233551">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1391" _type="InsertStringCommand" date="Tue May 03 18:03:16 EDT 2022" starttimestamp="1651614162506" timestamp="1233662" timestamp2="1233662">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1393" _type="InsertStringCommand" date="Tue May 03 18:03:16 EDT 2022" starttimestamp="1651614162506" timestamp="1233842" timestamp2="1233842">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1395" _type="InsertStringCommand" date="Tue May 03 18:03:16 EDT 2022" starttimestamp="1651614162506" timestamp="1234132" timestamp2="1234132">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1397" _type="InsertStringCommand" date="Tue May 03 18:03:17 EDT 2022" starttimestamp="1651614162506" timestamp="1234514" timestamp2="1234514">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1399" _type="InsertStringCommand" date="Tue May 03 18:03:17 EDT 2022" starttimestamp="1651614162506" timestamp="1234652" timestamp2="1234652">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1401" _type="InsertStringCommand" date="Tue May 03 18:03:17 EDT 2022" starttimestamp="1651614162506" timestamp="1234772" timestamp2="1234772">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1403" _type="PauseCommand" date="Tue May 03 18:03:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1237256">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2483]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1402" _type="MoveCaretCommand" caretOffset="4616" date="Tue May 03 18:03:19 EDT 2022" docOffset="4616" starttimestamp="1651614162506" timestamp="1237255" />
  <Command __id="1404" _type="MoveCaretCommand" caretOffset="4615" date="Tue May 03 18:03:20 EDT 2022" docOffset="4615" starttimestamp="1651614162506" timestamp="1238217" />
  <Command __id="1405" _type="SelectTextCommand" caretOffset="4615" date="Tue May 03 18:03:20 EDT 2022" end="4615" start="4611" starttimestamp="1651614162506" timestamp="1238356" />
  <Command __id="1406" _type="SelectTextCommand" caretOffset="4629" date="Tue May 03 18:03:20 EDT 2022" end="4629" start="4603" starttimestamp="1651614162506" timestamp="1238488" />
  <Command __id="1408" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:03:21 EDT 2022" starttimestamp="1651614162506" timestamp="1239415" />
  <Command __id="1409" _type="MoveCaretCommand" caretOffset="4404" date="Tue May 03 18:03:22 EDT 2022" docOffset="4404" starttimestamp="1651614162506" timestamp="1240070" />
  <Command __id="1410" _type="SelectTextCommand" caretOffset="4404" date="Tue May 03 18:03:22 EDT 2022" end="4404" start="4400" starttimestamp="1651614162506" timestamp="1240203" />
  <Command __id="1411" _type="SelectTextCommand" caretOffset="4413" date="Tue May 03 18:03:22 EDT 2022" end="4413" start="4389" starttimestamp="1651614162506" timestamp="1240328" />
  <Command __id="1413" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:03:23 EDT 2022" starttimestamp="1651614162506" timestamp="1240769" />
  <Command __id="1415" _type="PauseCommand" date="Tue May 03 18:03:25 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1242777">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2008]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1414" _type="MoveCaretCommand" caretOffset="4387" date="Tue May 03 18:03:25 EDT 2022" docOffset="4387" starttimestamp="1651614162506" timestamp="1242777" />
  <Command __id="1417" _type="InsertStringCommand" date="Tue May 03 18:03:25 EDT 2022" starttimestamp="1651614162506" timestamp="1243480" timestamp2="1243480">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1419" _type="PasteCommand" date="Tue May 03 18:03:26 EDT 2022" starttimestamp="1651614162506" timestamp="1244470" />
  <Command __id="1421" _type="PauseCommand" date="Tue May 03 18:03:30 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1247892">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3422]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1420" _type="SelectTextCommand" caretOffset="4447" date="Tue May 03 18:03:30 EDT 2022" end="4447" start="4411" starttimestamp="1651614162506" timestamp="1247892" />
  <Command __id="1423" _type="PauseCommand" date="Tue May 03 18:03:31 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1249083">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1191]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1424" _type="InsertStringCommand" date="Tue May 03 18:03:31 EDT 2022" starttimestamp="1651614162506" timestamp="1249087" timestamp2="1249087">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="1426" _type="InsertStringCommand" date="Tue May 03 18:03:31 EDT 2022" starttimestamp="1651614162506" timestamp="1249154" timestamp2="1249154">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1428" _type="InsertStringCommand" date="Tue May 03 18:03:31 EDT 2022" starttimestamp="1651614162506" timestamp="1249355" timestamp2="1249355">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1430" _type="InsertStringCommand" date="Tue May 03 18:03:31 EDT 2022" starttimestamp="1651614162506" timestamp="1249475" timestamp2="1249475">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1432" _type="InsertStringCommand" date="Tue May 03 18:03:32 EDT 2022" starttimestamp="1651614162506" timestamp="1249984" timestamp2="1249984">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1434" _type="InsertStringCommand" date="Tue May 03 18:03:32 EDT 2022" starttimestamp="1651614162506" timestamp="1250137" timestamp2="1250137">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1436" _type="InsertStringCommand" date="Tue May 03 18:03:32 EDT 2022" starttimestamp="1651614162506" timestamp="1250224" timestamp2="1250224">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1438" _type="InsertStringCommand" date="Tue May 03 18:03:32 EDT 2022" starttimestamp="1651614162506" timestamp="1250387" timestamp2="1250387">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1440" _type="InsertStringCommand" date="Tue May 03 18:03:33 EDT 2022" starttimestamp="1651614162506" timestamp="1250557" timestamp2="1250557">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1442" _type="InsertStringCommand" date="Tue May 03 18:03:33 EDT 2022" starttimestamp="1651614162506" timestamp="1250617" timestamp2="1250617">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1444" _type="InsertStringCommand" date="Tue May 03 18:03:33 EDT 2022" starttimestamp="1651614162506" timestamp="1250778" timestamp2="1250778">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1446" _type="InsertStringCommand" date="Tue May 03 18:03:33 EDT 2022" starttimestamp="1651614162506" timestamp="1250869" timestamp2="1250869">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1448" _type="InsertStringCommand" date="Tue May 03 18:03:34 EDT 2022" starttimestamp="1651614162506" timestamp="1251600" timestamp2="1251600">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1450" _type="InsertStringCommand" date="Tue May 03 18:03:34 EDT 2022" starttimestamp="1651614162506" timestamp="1251881" timestamp2="1251881">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1452" _type="InsertStringCommand" date="Tue May 03 18:03:34 EDT 2022" starttimestamp="1651614162506" timestamp="1251961" timestamp2="1251961">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1454" _type="InsertStringCommand" date="Tue May 03 18:03:34 EDT 2022" starttimestamp="1651614162506" timestamp="1252082" timestamp2="1252082">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1456" _type="InsertStringCommand" date="Tue May 03 18:03:34 EDT 2022" starttimestamp="1651614162506" timestamp="1252191" timestamp2="1252191">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1458" _type="InsertStringCommand" date="Tue May 03 18:03:34 EDT 2022" starttimestamp="1651614162506" timestamp="1252319" timestamp2="1252319">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1460" _type="InsertStringCommand" date="Tue May 03 18:03:35 EDT 2022" starttimestamp="1651614162506" timestamp="1252503" timestamp2="1252503">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1462" _type="InsertStringCommand" date="Tue May 03 18:03:35 EDT 2022" starttimestamp="1651614162506" timestamp="1252882" timestamp2="1252882">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1464" _type="InsertStringCommand" date="Tue May 03 18:03:35 EDT 2022" starttimestamp="1651614162506" timestamp="1253205" timestamp2="1253205">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1466" _type="InsertStringCommand" date="Tue May 03 18:03:35 EDT 2022" starttimestamp="1651614162506" timestamp="1253353" timestamp2="1253353">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1468" _type="PauseCommand" date="Tue May 03 18:03:37 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1255019">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1666]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1467" _type="MoveCaretCommand" caretOffset="4438" date="Tue May 03 18:03:37 EDT 2022" docOffset="4438" starttimestamp="1651614162506" timestamp="1255019" />
  <Command __id="1470" _type="PauseCommand" date="Tue May 03 18:03:39 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1256762">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1743]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1469" _type="MoveCaretCommand" caretOffset="4846" date="Tue May 03 18:03:39 EDT 2022" docOffset="4846" starttimestamp="1651614162506" timestamp="1256762" />
  <Command __id="1472" _type="PauseCommand" date="Tue May 03 18:03:40 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1258259">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1497]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1473" _type="PasteCommand" date="Tue May 03 18:03:40 EDT 2022" starttimestamp="1651614162506" timestamp="1258264" />
  <Command __id="1475" _type="PauseCommand" date="Tue May 03 18:03:42 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1260484">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2220]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1474" _type="SelectTextCommand" caretOffset="4902" date="Tue May 03 18:03:42 EDT 2022" end="4902" start="4866" starttimestamp="1651614162506" timestamp="1260484" />
  <Command __id="1477" _type="InsertStringCommand" date="Tue May 03 18:03:43 EDT 2022" starttimestamp="1651614162506" timestamp="1261008" timestamp2="1261008">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1479" _type="InsertStringCommand" date="Tue May 03 18:03:43 EDT 2022" starttimestamp="1651614162506" timestamp="1261217" timestamp2="1261217">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1481" _type="InsertStringCommand" date="Tue May 03 18:03:43 EDT 2022" starttimestamp="1651614162506" timestamp="1261377" timestamp2="1261377">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1483" _type="InsertStringCommand" date="Tue May 03 18:03:43 EDT 2022" starttimestamp="1651614162506" timestamp="1261487" timestamp2="1261487">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="1485" _type="InsertStringCommand" date="Tue May 03 18:03:44 EDT 2022" starttimestamp="1651614162506" timestamp="1261677" timestamp2="1261677">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1487" _type="InsertStringCommand" date="Tue May 03 18:03:44 EDT 2022" starttimestamp="1651614162506" timestamp="1261757" timestamp2="1261757">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1489" _type="InsertStringCommand" date="Tue May 03 18:03:44 EDT 2022" starttimestamp="1651614162506" timestamp="1262323" timestamp2="1262323">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1491" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1262824" timestamp2="1262824">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1493" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1262854" timestamp2="1262854">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1495" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1262884" timestamp2="1262884">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1497" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1262916" timestamp2="1262916">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1499" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1262946" timestamp2="1262946">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1501" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1262976" timestamp2="1262976">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1503" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263005" timestamp2="1263005">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1505" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263036" timestamp2="1263036">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1507" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263065" timestamp2="1263065">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1509" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263096" timestamp2="1263096">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1511" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263126" timestamp2="1263126">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1513" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263155" timestamp2="1263155">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1515" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263185" timestamp2="1263185">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1517" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263215" timestamp2="1263215">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1519" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263245" timestamp2="1263245">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1521" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263276" timestamp2="1263276">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1523" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263313" timestamp2="1263313">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1525" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263336" timestamp2="1263336">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1527" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263366" timestamp2="1263366">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1529" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263396" timestamp2="1263396">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1531" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263426" timestamp2="1263426">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1533" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263456" timestamp2="1263456">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1535" _type="InsertStringCommand" date="Tue May 03 18:03:45 EDT 2022" starttimestamp="1651614162506" timestamp="1263485" timestamp2="1263485">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1537" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263516" timestamp2="1263516">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1539" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263553" timestamp2="1263553">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1541" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263576" timestamp2="1263576">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1543" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263607" timestamp2="1263607">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1545" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263636" timestamp2="1263636">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1547" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263667" timestamp2="1263667">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1549" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263696" timestamp2="1263696">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1551" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263726" timestamp2="1263726">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1553" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263757" timestamp2="1263757">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1555" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263786" timestamp2="1263786">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1557" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263817" timestamp2="1263817">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1559" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263847" timestamp2="1263847">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1561" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263877" timestamp2="1263877">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1563" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263907" timestamp2="1263907">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1565" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263938" timestamp2="1263938">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1567" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263967" timestamp2="1263967">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1569" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1263996" timestamp2="1263996">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1571" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264027" timestamp2="1264027">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1573" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264057" timestamp2="1264057">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1575" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264087" timestamp2="1264087">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1577" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264117" timestamp2="1264117">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1579" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264146" timestamp2="1264146">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1581" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264177" timestamp2="1264177">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1583" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264208" timestamp2="1264208">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1585" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264238" timestamp2="1264238">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1587" _type="InsertStringCommand" date="Tue May 03 18:03:46 EDT 2022" starttimestamp="1651614162506" timestamp="1264267" timestamp2="1264267">
    <data><![CDATA[!]]></data>
  </Command>
  <Command __id="1589" _type="PauseCommand" date="Tue May 03 18:03:52 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1270131">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5864]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1588" _type="SelectTextCommand" caretOffset="4116" date="Tue May 03 18:03:52 EDT 2022" end="4203" start="4116" starttimestamp="1651614162506" timestamp="1270131" />
  <Command __id="1591" _type="PauseCommand" date="Tue May 03 18:03:57 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1275215">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5084]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1590" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:03:57 EDT 2022" starttimestamp="1651614162506" timestamp="1275215" />
  <Command __id="1592" _type="EclipseCommand" commandID="" date="Tue May 03 18:03:57 EDT 2022" starttimestamp="1651614162506" timestamp="1275307" />
  <Command __id="1593" _type="EclipseCommand" commandID="" date="Tue May 03 18:03:57 EDT 2022" starttimestamp="1651614162506" timestamp="1275331" />
  <Command __id="1594" _type="ShellCommand" date="Tue May 03 18:03:58 EDT 2022" starttimestamp="1651614162506" timestamp="1276075" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1596" _type="PauseCommand" date="Tue May 03 18:04:00 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1277661">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1586]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1595" _type="ShellCommand" date="Tue May 03 18:04:00 EDT 2022" starttimestamp="1651614162506" timestamp="1277661" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1597" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:04:00 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1277805" type="Run" />
  <Command __id="1598" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:04:00 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1277805" type="Run" />
  <Command __id="1600" _type="PauseCommand" date="Tue May 03 18:04:05 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1282500">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[4695]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1599" _type="MoveCaretCommand" caretOffset="3194" date="Tue May 03 18:04:05 EDT 2022" docOffset="3194" starttimestamp="1651614162506" timestamp="1282500" />
  <Command __id="1601" _type="SelectTextCommand" caretOffset="3202" date="Tue May 03 18:04:05 EDT 2022" end="3202" start="3186" starttimestamp="1651614162506" timestamp="1282635" />
  <Command __id="1616" _type="PauseCommand" date="Tue May 03 18:04:52 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1330290">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1032]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1615" _type="ShellCommand" date="Tue May 03 18:04:52 EDT 2022" starttimestamp="1651614162506" timestamp="1330290" type="ECLIPSE_MAXIMIZED" />
  <Command __id="1617" _type="ShellCommand" date="Tue May 03 18:04:52 EDT 2022" starttimestamp="1651614162506" timestamp="1330349" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1619" _type="PauseCommand" date="Tue May 03 18:04:54 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1332241">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1892]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1620" _type="MoveCaretCommand" caretOffset="3495" date="Tue May 03 18:04:54 EDT 2022" docOffset="3495" starttimestamp="1651614162506" timestamp="1332334" />
  <Command __id="1622" _type="PauseCommand" date="Tue May 03 18:04:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1333775">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1441]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1621" _type="MoveCaretCommand" caretOffset="4114" date="Tue May 03 18:04:56 EDT 2022" docOffset="4114" starttimestamp="1651614162506" timestamp="1333775" />
  <Command __id="1624" _type="InsertStringCommand" date="Tue May 03 18:04:57 EDT 2022" starttimestamp="1651614162506" timestamp="1334523" timestamp2="1334523">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1628" _type="PasteCommand" date="Tue May 03 18:04:57 EDT 2022" starttimestamp="1651614162506" timestamp="1334916" />
  <Command __id="1630" _type="InsertStringCommand" date="Tue May 03 18:04:57 EDT 2022" starttimestamp="1651614162506" timestamp="1335208" timestamp2="1335208">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1360" _type="Insert" date="Tue May 03 18:03:13 EDT 2022" docASTNodeCount="1621" docActiveCodeLength="12268" docExpressionCount="1093" docLength="12556" length="20" offset="4984" repeat="20" starttimestamp="1651614162506" timestamp="1230762" timestamp2="1234769">
    <text><![CDATA[ell this get printed]]></text>
  </DocumentChange>
  <DocumentChange __id="1407" _type="Delete" date="Tue May 03 18:03:21 EDT 2022" docASTNodeCount="1621" docActiveCodeLength="12264" docExpressionCount="1093" docLength="12530" endLine="127" length="26" offset="4603" startLine="126" starttimestamp="1651614162506" timestamp="1239410">
    <text><![CDATA[		//Get GIPC server here
]]></text>
  </DocumentChange>
  <DocumentChange __id="1412" _type="Delete" date="Tue May 03 18:03:23 EDT 2022" docASTNodeCount="1621" docActiveCodeLength="12260" docExpressionCount="1093" docLength="12506" endLine="123" length="24" offset="4389" startLine="122" starttimestamp="1651614162506" timestamp="1240764">
    <text><![CDATA[		//Locate GIPC Server
]]></text>
  </DocumentChange>
  <DocumentChange __id="1416" _type="Insert" date="Tue May 03 18:03:25 EDT 2022" docASTNodeCount="1621" docActiveCodeLength="12264" docExpressionCount="1093" docLength="12510" length="4" offset="4387" starttimestamp="1651614162506" timestamp="1243476">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1418" _type="Replace" date="Tue May 03 18:03:26 EDT 2022" docASTNodeCount="1628" docActiveCodeLength="12325" docExpressionCount="1099" docLength="12571" endLine="122" insertionLength="63" int_docASTNodeCount="1621" int_docActiveCodeLength="12262" int_docExpressionCount="1093" int_docLength="12508" length="2" offset="4389" startLine="122" starttimestamp="1651614162506" timestamp="1244465">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("this is stupid, dont want to do this");
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1422" _type="Replace" date="Tue May 03 18:03:31 EDT 2022" docASTNodeCount="1628" docActiveCodeLength="12290" docExpressionCount="1099" docLength="12536" endLine="122" insertionLength="1" int_docASTNodeCount="1628" int_docActiveCodeLength="12289" int_docExpressionCount="1099" int_docLength="12535" length="36" offset="4411" startLine="122" starttimestamp="1651614162506" timestamp="1249083">
    <deletedText><![CDATA[this is stupid, dont want to do this]]></deletedText>
    <insertedText><![CDATA[g]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1425" _type="Insert" date="Tue May 03 18:03:31 EDT 2022" docASTNodeCount="1628" docActiveCodeLength="12311" docExpressionCount="1099" docLength="12557" length="21" offset="4412" repeat="21" starttimestamp="1651614162506" timestamp="1249151" timestamp2="1253350">
    <text><![CDATA[et location and stuff]]></text>
  </DocumentChange>
  <DocumentChange __id="1471" _type="Replace" date="Tue May 03 18:03:40 EDT 2022" docASTNodeCount="1635" docActiveCodeLength="12372" docExpressionCount="1105" docLength="12618" endLine="129" insertionLength="63" int_docASTNodeCount="1628" int_docActiveCodeLength="12309" int_docExpressionCount="1099" int_docLength="12555" length="2" offset="4844" startLine="129" starttimestamp="1651614162506" timestamp="1258259">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("this is stupid, dont want to do this");
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1476" _type="Replace" date="Tue May 03 18:03:43 EDT 2022" docASTNodeCount="1635" docActiveCodeLength="12337" docExpressionCount="1105" docLength="12583" endLine="129" insertionLength="1" int_docASTNodeCount="1635" int_docActiveCodeLength="12336" int_docExpressionCount="1105" int_docLength="12582" length="36" offset="4866" startLine="129" starttimestamp="1651614162506" timestamp="1261003">
    <deletedText><![CDATA[this is stupid, dont want to do this]]></deletedText>
    <insertedText><![CDATA[w]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1478" _type="Insert" date="Tue May 03 18:03:43 EDT 2022" docASTNodeCount="1635" docActiveCodeLength="12392" docExpressionCount="1105" docLength="12638" length="55" offset="4867" repeat="55" starttimestamp="1651614162506" timestamp="1261214" timestamp2="1264264">
    <text><![CDATA[orked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!]]></text>
  </DocumentChange>
  <Command __id="1604" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:04:36 EDT 2022" docASTNodeCount="742" docActiveCodeLength="5319" docExpressionCount="522" docLength="5516" projectName="533Assignment5" starttimestamp="1651614162506" timestamp="1314120">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\RMIAndGIPCClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.client;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import comp533.server.GIPCServer;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;

@SuppressWarnings("serial")
@Tags({DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC})
public class RMIAndGIPCClient extends RMIClient implements GIPCClient{

	private static int number = 0;
    private GIPCRegistry registry;
    protected GIPCServer proxyServer;
    
    public static final String tryCommand = "move 1 -1";
    protected int commands = 500;
    
    private static ClientInterface thisClient = new RMIAndGIPCClient();
    
    @Override
    public void start(String[] arguments) {
        this.init(arguments);
        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
        SimulationParametersControllerFactory.getSingleton().processCommands();
    }

    public static void main(String[] arguments) {
        ClientInterface thisClient = new RMIAndGIPCClient();
        thisClient.start(arguments);
    }
    

    @Override
    public void setTracing() {
        super.setTracing();
        BeanTraceUtility.setTracing();
        GIPCRPCTraceUtility.setTracing();
    }

    public RMIAndGIPCClient() {
        number++;
    }
    public static ClientInterface getSingleton() {
        return thisClient;
    }
    @Override
    protected void init(final String[] arguments) {
        this.setTracing();
        super.init(arguments);
        
        String hostName = ClientArgsProcessor.getServerHost(arguments);
        final int port = ClientArgsProcessor.getGIPCPort(arguments);
        
        this.locateGIPCRegistry(port, hostName);
        this.lookupGIPCServerProxy();

		try {
			this.exportGIPCClientProxy();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        System.out.println("should be registered");
        System.out.println(this.proxyServer);
//        System.out.println(thisClient.getClass());
//        System.out.println(thisClient.getClass().getName());
        System.out.println(this);
        this.proxyServer.registerGIPCClients();
    }
    
    protected void exportGIPCClientProxy() throws RemoteException {
//    	UnicastRemoteObject.exportObject(this, 0);
        this.registry.rebind(RMIAndGIPCClient.class.getName(), this);
        GIPCObjectRegistered.newCase(this, RMIAndGIPCClient.class.getName(), this, this.registry);

    }


    @Override
    public void NotificationReceiver(final String newCommand, final Object newProposal) {
        this.receiveNotifications(CommunicationStateNames.COMMAND, newCommand);
    }

    @Override
    public void experimentInput() {
        long start = System.currentTimeMillis();
        PerformanceExperimentStarted.newCase(this, start, commands);
        boolean oldTrace = isTrace();
        this.trace(false);
        for (int i = 0; i < commands; i++) {
            this.simulationCommand(tryCommand);
        }
        this.trace(oldTrace);
        long end = System.currentTimeMillis();
        PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
        
        
        System.out.println("Printing out the time:");
        System.out.println(end - start);
    }


    protected void sendCommand(final String newCommand) {
        this.thisProcessor.setInputString(newCommand);
        RemoteProposeRequestSent.newCase(this, CommunicationStateNames.IPC_MECHANISM, -1, ipcMechanism);
        this.proxyServer.receiveCommandViaGIPC(newCommand, this);
    }

    @Override
    public void simulationCommand(final String newCommand) {
        if (this.ipcMechanism.equals(IPCMechanism.RMI)) {
            super.simulationCommand(newCommand);
        } else {
            this.sendCommand(newCommand);
        }
    }

    protected void locateGIPCRegistry(final int port, final String hostName) {
        this.registry = GIPCLocateRegistry.getRegistry(hostName, port, GIPCClient.CLIENT_NAME + number);
        GIPCRegistryLocated.newCase(this, hostName,port, GIPCClient.class.getName());
    }

    protected void lookupGIPCServerProxy() {
    	System.out.println("I am not here");
    	System.out.println(GIPCServer.class);
    	System.out.println(GIPCServer.class.getName());
    	
        this.proxyServer = (GIPCServer) registry.lookup(GIPCServer.class, GIPCServer.class.getName());
        System.out.println("I am here");
        GIPCObjectLookedUp.newCase(this, this.proxyServer, GIPCServer.class, GIPCServer.class.getName(), this.registry);
    }


    
}
]]></snapshot>
  </Command>
  <Command __id="1618" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:04:54 EDT 2022" docASTNodeCount="1635" docActiveCodeLength="12392" docExpressionCount="1105" docLength="12638" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1332241">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶"), Diff(DELETE,"import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶"), Diff(EQUAL,"import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶"), Diff(DELETE,"import readThread.ClientReadThread;¶"), Diff(EQUAL,"import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶"), Diff(DELETE,"import server.remote.ServerRemoteInterfaceRMI;¶"), Diff(EQUAL,"import server.remote.ServerRemoteObjectGIPC;¶"), Diff(DELETE,"import server.remote.ServerRemoteObjectRMI;¶"), Diff(EQUAL,"import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶"), Diff(DELETE,"import util.trace.Tracer;¶"), Diff(EQUAL,"import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶"), Diff(DELETE,"import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.PortTraceUtility;"), Diff(EQUAL,"¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	"), Diff(DELETE,"HalloweenCommandProcessor commandProcessor;¶	"), Diff(EQUAL,"protected int NUM_EXPERIMENT_COMMANDS = 500;¶	"), Diff(INSERT,"¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	"), Diff(EQUAL,"public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶"), Diff(DELETE,"	public static final String EXPERIMENT_COMMAND_2 = "undo";"), Diff(EQUAL,"¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	"), Diff(INSERT,"private static String SERVER_NAME;¶	private static String CLIENT_NAME;"), Diff(EQUAL,"¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶"), Diff(DELETE,"	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶	¶	//A5"), Diff(INSERT,"¶"), Diff(EQUAL,"¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation("), Diff(INSERT,"final "), Diff(EQUAL,"String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs("), Diff(INSERT,"final "), Diff(EQUAL,"String[] args) {¶	"), Diff(DELETE,"	System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));"), Diff(EQUAL,"¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		"), Diff(DELETE,"//A5"), Diff(EQUAL,"¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	public void atomicBroadcast("), Diff(DELETE,"boolean fake) {¶		return;¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);"), Diff(INSERT,"final boolean wellWhatShould) {¶		return;¶	}¶	"), Diff(EQUAL,"¶	"), Diff(DELETE,"}"), Diff(EQUAL,"¶¶	@Override¶	public void init("), Diff(INSERT,"final "), Diff(EQUAL,"String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		"), Diff(DELETE,"// Ideally the prefixes should be main args¶		"), Diff(EQUAL,"commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		"), Diff(DELETE,"//Locate GIPC Server"), Diff(INSERT,"System.out.println("get location and stuff");¶"), Diff(EQUAL,"¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		"), Diff(DELETE,"//Get GIPC server here¶		"), Diff(EQUAL,"serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		"), Diff(DELETE,"¶		//Register Client with GIPC Proxy"), Diff(INSERT,"System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶"), Diff(EQUAL,"¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			"), Diff(DELETE,"// TODO Auto-generated catch block"), Diff(INSERT,"System.out.println("well this get printed");"), Diff(EQUAL,"¶			e.printStackTrace();¶		}¶		¶"), Diff(DELETE,"		¶		// Locate RMI Server"), Diff(EQUAL,"¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶"), Diff(DELETE,"		// Get RMI server here"), Diff(EQUAL,"¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			"), Diff(DELETE,"// TODO Auto-generated catch block"), Diff(EQUAL,"¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶"), Diff(DELETE,"		// export client to create proxy"), Diff(EQUAL,"¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶"), Diff(DELETE,"		// have the server register the exported client"), Diff(EQUAL,"¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		"), Diff(DELETE,"//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener"), Diff(EQUAL,"¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler("), Diff(INSERT,"final "), Diff(EQUAL,"String aNewCommand,"), Diff(INSERT," final"), Diff(EQUAL," int proposalNumber) {¶		"), Diff(DELETE,"//final int aProposalNumber = proposalNumber;"), Diff(EQUAL,"¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	"), Diff(DELETE,"/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */"), Diff(EQUAL,"¶	public void simulationCommand1("), Diff(INSERT,"final "), Diff(EQUAL,"String aCommand) {¶		"), Diff(DELETE,"//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism");¶		System.out.println(mechanism);"), Diff(INSERT,"¶		final IPCMechanism mechanism = getIPCMechanism();¶"), Diff(EQUAL,"¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			"), Diff(DELETE,"System.out.println("using gipc proxy server");"), Diff(EQUAL,"¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			"), Diff(DELETE,"System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change"), Diff(INSERT,"¶		}¶		¶"), Diff(EQUAL,"¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			"), Diff(DELETE,"// TODO Auto-generated catch block"), Diff(EQUAL,"¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit("), Diff(INSERT,"final "), Diff(EQUAL,"int aCode) {¶		"), Diff(DELETE,"//commandProcessor.setInputString("quit");"), Diff(EQUAL,"¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly("), Diff(INSERT,"final "), Diff(EQUAL,"boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState("), Diff(INSERT,"final "), Diff(EQUAL,"boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism("), Diff(INSERT,"final "), Diff(EQUAL,"IPCMechanism mechanism, int a"), Diff(INSERT,"New"), Diff(EQUAL,"ProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, a"), Diff(INSERT,"New"), Diff(EQUAL,"ProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, a"), Diff(INSERT,"New"), Diff(EQUAL,"ProposalNumber, mechanism);¶		a"), Diff(INSERT,"New"), Diff(EQUAL,"ProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastI"), Diff(DELETE,"PC"), Diff(INSERT,"pc"), Diff(EQUAL,"Mechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit("), Diff(INSERT,"final "), Diff(EQUAL,"String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			"), Diff(INSERT,"final "), Diff(EQUAL,"InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		"), Diff(DELETE,"			//0, // do not allow any incoming messages"), Diff(EQUAL,"¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	"), Diff(DELETE,"	//Create new read thread Runnable¶		//reader = new ClientReadThread(this);¶						¶		//Create new readThread"), Diff(EQUAL,"¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		"), Diff(DELETE,"//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);"), Diff(INSERT,"¶		readThread.start();¶		¶		"), Diff(EQUAL,"¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶"), Diff(INSERT,"	¶¶"), Diff(EQUAL,"	@Override¶	public void "), Diff(DELETE,"connected(S"), Diff(INSERT,"s"), Diff(EQUAL,"ocketChannel"), Diff(DELETE," aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0,"), Diff(INSERT,"Read(final SocketChannel argumentone, final"), Diff(EQUAL," ByteBuffer a"), Diff(DELETE,"rg1"), Diff(INSERT,"Message"), Diff(EQUAL,", "), Diff(INSERT,"f"), Diff(EQUAL,"in"), Diff(DELETE,"t arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		"), Diff(INSERT,"al int argumenttwo) {¶		¶		final "), Diff(EQUAL,"ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		"), Diff(DELETE,"// TODO Auto-generated method stub"), Diff(EQUAL,"¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand("), Diff(INSERT,"final "), Diff(EQUAL,"String aCommand) {¶¶		"), Diff(INSERT,"final "), Diff(EQUAL,"IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		"), Diff(INSERT,"final "), Diff(EQUAL,"ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶"), Diff(INSERT,"	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulationCommand1(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="1623" _type="Insert" date="Tue May 03 18:04:57 EDT 2022" docASTNodeCount="1635" docActiveCodeLength="12395" docExpressionCount="1105" docLength="12641" length="3" offset="4114" starttimestamp="1651614162506" timestamp="1334519">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1625" _type="Replace" date="Tue May 03 18:04:57 EDT 2022" docASTNodeCount="1745" docActiveCodeLength="13223" docExpressionCount="1174" docLength="13617" endLine="108" insertionLength="977" int_docASTNodeCount="1635" int_docActiveCodeLength="12394" int_docExpressionCount="1105" int_docLength="12640" length="1" offset="4116" startLine="108" starttimestamp="1651614162506" timestamp="1334801">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public RMIAndGIPCClient() {
        number++;
    }
    public static ClientInterface getSingleton() {
        return thisClient;
    }
    @Override
    protected void init(final String[] arguments) {
        this.setTracing();
        super.init(arguments);
        
        String hostName = ClientArgsProcessor.getServerHost(arguments);
        final int port = ClientArgsProcessor.getGIPCPort(arguments);
        
        this.locateGIPCRegistry(port, hostName);
        this.lookupGIPCServerProxy();

		try {
			this.exportGIPCClientProxy();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        System.out.println("should be registered");
        System.out.println(this.proxyServer);
//        System.out.println(thisClient.getClass());
//        System.out.println(thisClient.getClass().getName());
        System.out.println(this);
        this.proxyServer.registerGIPCClients();
    }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1626" _type="Insert" date="Tue May 03 18:04:57 EDT 2022" docASTNodeCount="1751" docActiveCodeLength="13263" docExpressionCount="1179" docLength="13657" length="40" offset="655" repeat="2" starttimestamp="1651614162506" timestamp="1334886" timestamp2="1334888">
    <text><![CDATA[
import comp533.client.ClientInterface;]]></text>
  </DocumentChange>
  <DocumentChange __id="1629" _type="Insert" date="Tue May 03 18:04:57 EDT 2022" docASTNodeCount="1751" docActiveCodeLength="13269" docExpressionCount="1179" docLength="13663" length="6" offset="5133" starttimestamp="1651614162506" timestamp="1335198">
    <text><![CDATA[
    ]]></text>
  </DocumentChange>
  <DocumentChange __id="1633" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1749" docActiveCodeLength="13256" docExpressionCount="1177" docLength="13665" length="2" offset="4299" starttimestamp="1651614162506" timestamp="1339208">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1634" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1694" docActiveCodeLength="13205" docExpressionCount="1135" docLength="13667" length="2" offset="4316" starttimestamp="1651614162506" timestamp="1339241">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1635" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1694" docActiveCodeLength="13179" docExpressionCount="1135" docLength="13669" length="2" offset="4371" starttimestamp="1651614162506" timestamp="1339270">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1636" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1694" docActiveCodeLength="13149" docExpressionCount="1135" docLength="13671" length="2" offset="4401" starttimestamp="1651614162506" timestamp="1339296">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1637" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1694" docActiveCodeLength="13141" docExpressionCount="1135" docLength="13673" length="2" offset="4435" starttimestamp="1651614162506" timestamp="1339320">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1638" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1685" docActiveCodeLength="13070" docExpressionCount="1129" docLength="13675" length="2" offset="4447" starttimestamp="1651614162506" timestamp="1339327">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1639" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1676" docActiveCodeLength="13002" docExpressionCount="1124" docLength="13677" length="2" offset="4522" starttimestamp="1651614162506" timestamp="1339332">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1640" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1676" docActiveCodeLength="12994" docExpressionCount="1124" docLength="13679" length="2" offset="4594" starttimestamp="1651614162506" timestamp="1339337">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1632" _type="PauseCommand" date="Tue May 03 18:05:01 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1338606">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3398]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1631" _type="SelectTextCommand" caretOffset="4300" date="Tue May 03 18:05:01 EDT 2022" end="5133" start="4300" starttimestamp="1651614162506" timestamp="1338606" />
  <Command __id="1657" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:05:01 EDT 2022" starttimestamp="1651614162506" timestamp="1339460" />
  <Command __id="1659" _type="PauseCommand" date="Tue May 03 18:05:03 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1340910">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1449]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1658" _type="MoveCaretCommand" caretOffset="4240" date="Tue May 03 18:05:03 EDT 2022" docOffset="4240" starttimestamp="1651614162506" timestamp="1340909" />
  <Command __id="1660" _type="SelectTextCommand" caretOffset="4245" date="Tue May 03 18:05:03 EDT 2022" end="4245" start="4230" starttimestamp="1651614162506" timestamp="1341026" />
  <Command __id="1662" _type="PauseCommand" date="Tue May 03 18:05:05 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1342837">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1811]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1663" _type="InsertStringCommand" date="Tue May 03 18:05:05 EDT 2022" starttimestamp="1651614162506" timestamp="1342853" timestamp2="1342853">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1665" _type="InsertStringCommand" date="Tue May 03 18:05:05 EDT 2022" starttimestamp="1651614162506" timestamp="1343043" timestamp2="1343043">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1667" _type="InsertStringCommand" date="Tue May 03 18:05:05 EDT 2022" starttimestamp="1651614162506" timestamp="1343101" timestamp2="1343101">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1669" _type="InsertStringCommand" date="Tue May 03 18:05:05 EDT 2022" starttimestamp="1651614162506" timestamp="1343220" timestamp2="1343220">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1671" _type="PauseCommand" date="Tue May 03 18:05:07 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1345147">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1927]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1670" _type="SelectTextCommand" caretOffset="4279" date="Tue May 03 18:05:07 EDT 2022" end="4279" start="4261" starttimestamp="1651614162506" timestamp="1345147" />
  <Command __id="1673" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:05:08 EDT 2022" starttimestamp="1651614162506" timestamp="1345743" />
  <Command __id="1675" _type="PauseCommand" date="Tue May 03 18:05:11 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1349332">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3589]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1674" _type="SelectTextCommand" caretOffset="4203" date="Tue May 03 18:05:11 EDT 2022" end="4203" start="4194" starttimestamp="1651614162506" timestamp="1349332" />
  <Command __id="1677" _type="PauseCommand" date="Tue May 03 18:05:15 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1352747">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3415]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1678" _type="InsertStringCommand" date="Tue May 03 18:05:15 EDT 2022" starttimestamp="1651614162506" timestamp="1352752" timestamp2="1352752">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1680" _type="InsertStringCommand" date="Tue May 03 18:05:15 EDT 2022" starttimestamp="1651614162506" timestamp="1353170" timestamp2="1353170">
    <data><![CDATA[+]]></data>
  </Command>
  <Command __id="1682" _type="InsertStringCommand" date="Tue May 03 18:05:15 EDT 2022" starttimestamp="1651614162506" timestamp="1353269" timestamp2="1353269">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="1684" _type="InsertStringCommand" date="Tue May 03 18:05:16 EDT 2022" starttimestamp="1651614162506" timestamp="1354061" timestamp2="1354061">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1686" _type="PauseCommand" date="Tue May 03 18:05:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1356987">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2926]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1685" _type="ShellCommand" date="Tue May 03 18:05:19 EDT 2022" starttimestamp="1651614162506" timestamp="1356987" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1687" _type="ShellCommand" date="Tue May 03 18:05:19 EDT 2022" starttimestamp="1651614162506" timestamp="1357344" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1690" _type="MoveCaretCommand" caretOffset="4210" date="Tue May 03 18:05:20 EDT 2022" docOffset="4210" starttimestamp="1651614162506" timestamp="1357930" />
  <DocumentChange __id="1641" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1676" docActiveCodeLength="12946" docExpressionCount="1124" docLength="13681" length="2" offset="4606" starttimestamp="1651614162506" timestamp="1339342">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1642" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1676" docActiveCodeLength="12909" docExpressionCount="1124" docLength="13683" length="2" offset="4658" starttimestamp="1651614162506" timestamp="1339349">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1643" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1676" docActiveCodeLength="12909" docExpressionCount="1124" docLength="13685" length="2" offset="4699" starttimestamp="1651614162506" timestamp="1339355">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1644" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1670" docActiveCodeLength="12902" docExpressionCount="1121" docLength="13687" length="2" offset="4703" starttimestamp="1651614162506" timestamp="1339367">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1645" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1670" docActiveCodeLength="12870" docExpressionCount="1121" docLength="13689" length="2" offset="4714" starttimestamp="1651614162506" timestamp="1339381">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1646" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12839" docExpressionCount="1116" docLength="13691" length="2" offset="4750" starttimestamp="1651614162506" timestamp="1339393">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1647" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12836" docExpressionCount="1116" docLength="13693" length="2" offset="4785" starttimestamp="1651614162506" timestamp="1339404">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1648" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12813" docExpressionCount="1116" docLength="13695" length="2" offset="4826" starttimestamp="1651614162506" timestamp="1339416">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1649" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12810" docExpressionCount="1116" docLength="13697" length="2" offset="4853" starttimestamp="1651614162506" timestamp="1339420">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1650" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12759" docExpressionCount="1116" docLength="13699" length="2" offset="4860" starttimestamp="1651614162506" timestamp="1339423">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1651" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12714" docExpressionCount="1116" docLength="13701" length="2" offset="4915" starttimestamp="1651614162506" timestamp="1339427">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1652" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12714" docExpressionCount="1116" docLength="13703" length="2" offset="4964" starttimestamp="1651614162506" timestamp="1339430">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1653" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12714" docExpressionCount="1116" docLength="13705" length="2" offset="5020" starttimestamp="1651614162506" timestamp="1339434">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1654" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12681" docExpressionCount="1116" docLength="13707" length="2" offset="5086" starttimestamp="1651614162506" timestamp="1339439">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1655" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1659" docActiveCodeLength="12634" docExpressionCount="1116" docLength="13709" length="2" offset="5123" starttimestamp="1651614162506" timestamp="1339442">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1656" _type="Insert" date="Tue May 03 18:05:01 EDT 2022" docASTNodeCount="1657" docActiveCodeLength="12629" docExpressionCount="1116" docLength="13711" length="2" offset="5174" starttimestamp="1651614162506" timestamp="1339444">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1661" _type="Replace" date="Tue May 03 18:05:05 EDT 2022" docASTNodeCount="1657" docActiveCodeLength="12615" docExpressionCount="1116" docLength="13697" endLine="112" insertionLength="1" int_docASTNodeCount="1655" int_docActiveCodeLength="12614" int_docExpressionCount="1115" int_docLength="13696" length="15" offset="4230" startLine="112" starttimestamp="1651614162506" timestamp="1342837">
    <deletedText><![CDATA[ClientInterface]]></deletedText>
    <insertedText><![CDATA[v]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1664" _type="Insert" date="Tue May 03 18:05:05 EDT 2022" docASTNodeCount="1656" docActiveCodeLength="12618" docExpressionCount="1115" docLength="13700" length="3" offset="4231" repeat="3" starttimestamp="1651614162506" timestamp="1343039" timestamp2="1343215">
    <text><![CDATA[oid]]></text>
  </DocumentChange>
  <DocumentChange __id="1672" _type="Insert" date="Tue May 03 18:05:08 EDT 2022" docASTNodeCount="1654" docActiveCodeLength="12592" docExpressionCount="1114" docLength="13702" length="2" offset="4253" starttimestamp="1651614162506" timestamp="1345731">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1676" _type="Replace" date="Tue May 03 18:05:15 EDT 2022" docASTNodeCount="1655" docActiveCodeLength="12584" docExpressionCount="1115" docLength="13694" endLine="110" insertionLength="1" int_docASTNodeCount="1651" int_docActiveCodeLength="12583" int_docExpressionCount="1112" int_docLength="13693" length="9" offset="4194" startLine="110" starttimestamp="1651614162506" timestamp="1352747">
    <deletedText><![CDATA[number++;]]></deletedText>
    <insertedText><![CDATA[1]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1679" _type="Insert" date="Tue May 03 18:05:15 EDT 2022" docASTNodeCount="1655" docActiveCodeLength="12587" docExpressionCount="1115" docLength="13697" length="3" offset="4195" repeat="3" starttimestamp="1651614162506" timestamp="1353166" timestamp2="1354059">
    <text><![CDATA[+1;]]></text>
  </DocumentChange>
  <DocumentChange __id="1688" _type="Insert" date="Tue May 03 18:05:19 EDT 2022" docASTNodeCount="1656" docActiveCodeLength="12592" docExpressionCount="1115" docLength="13702" length="5" offset="4164" repeat="2" starttimestamp="1651614162506" timestamp="1357361" timestamp2="1357363">
    <text><![CDATA[void ]]></text>
  </DocumentChange>
  <DocumentChange __id="1693" _type="Insert" date="Tue May 03 18:05:22 EDT 2022" docASTNodeCount="1656" docActiveCodeLength="12593" docExpressionCount="1115" docLength="13703" length="1" offset="4199" starttimestamp="1651614162506" timestamp="1360224">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <DocumentChange __id="1695" _type="Delete" date="Tue May 03 18:05:23 EDT 2022" docASTNodeCount="1656" docActiveCodeLength="12592" docExpressionCount="1115" docLength="13702" endLine="110" length="1" offset="4199" startLine="110" starttimestamp="1651614162506" timestamp="1360714">
    <text><![CDATA[l]]></text>
  </DocumentChange>
  <Command __id="1692" _type="PauseCommand" date="Tue May 03 18:05:21 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1359263">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1333]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1691" _type="MoveCaretCommand" caretOffset="4199" date="Tue May 03 18:05:21 EDT 2022" docOffset="4199" starttimestamp="1651614162506" timestamp="1359263" />
  <Command __id="1694" _type="InsertStringCommand" date="Tue May 03 18:05:22 EDT 2022" starttimestamp="1651614162506" timestamp="1360228" timestamp2="1360228">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1696" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:05:23 EDT 2022" starttimestamp="1651614162506" timestamp="1360716" />
  <Command __id="1698" _type="InsertStringCommand" date="Tue May 03 18:05:23 EDT 2022" starttimestamp="1651614162506" timestamp="1361036" timestamp2="1361036">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1700" _type="InsertStringCommand" date="Tue May 03 18:05:23 EDT 2022" starttimestamp="1651614162506" timestamp="1361167" timestamp2="1361167">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1702" _type="InsertStringCommand" date="Tue May 03 18:05:23 EDT 2022" starttimestamp="1651614162506" timestamp="1361227" timestamp2="1361227">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1704" _type="InsertStringCommand" date="Tue May 03 18:05:23 EDT 2022" starttimestamp="1651614162506" timestamp="1361410" timestamp2="1361410">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1706" _type="InsertStringCommand" date="Tue May 03 18:05:24 EDT 2022" starttimestamp="1651614162506" timestamp="1361600" timestamp2="1361600">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1708" _type="InsertStringCommand" date="Tue May 03 18:05:24 EDT 2022" starttimestamp="1651614162506" timestamp="1361699" timestamp2="1361699">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1710" _type="InsertStringCommand" date="Tue May 03 18:05:24 EDT 2022" starttimestamp="1651614162506" timestamp="1361879" timestamp2="1361879">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1712" _type="InsertStringCommand" date="Tue May 03 18:05:24 EDT 2022" starttimestamp="1651614162506" timestamp="1362039" timestamp2="1362039">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1714" _type="InsertStringCommand" date="Tue May 03 18:05:25 EDT 2022" starttimestamp="1651614162506" timestamp="1362510" timestamp2="1362510">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1716" _type="InsertStringCommand" date="Tue May 03 18:05:25 EDT 2022" starttimestamp="1651614162506" timestamp="1362741" timestamp2="1362741">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1718" _type="InsertStringCommand" date="Tue May 03 18:05:25 EDT 2022" starttimestamp="1651614162506" timestamp="1363338" timestamp2="1363338">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1720" _type="InsertStringCommand" date="Tue May 03 18:05:25 EDT 2022" starttimestamp="1651614162506" timestamp="1363412" timestamp2="1363412">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1722" _type="PauseCommand" date="Tue May 03 18:05:28 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1366466">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3054]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1721" _type="SelectTextCommand" caretOffset="4156" date="Tue May 03 18:05:28 EDT 2022" end="4222" start="4156" starttimestamp="1651614162506" timestamp="1366466" />
  <Command __id="1726" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:05:29 EDT 2022" starttimestamp="1651614162506" timestamp="1367166" />
  <Command __id="1727" _type="MoveCaretCommand" caretOffset="4207" date="Tue May 03 18:05:30 EDT 2022" docOffset="4207" starttimestamp="1651614162506" timestamp="1368058" />
  <Command __id="1729" _type="PauseCommand" date="Tue May 03 18:05:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1369905">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1847]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1728" _type="SelectTextCommand" caretOffset="4156" date="Tue May 03 18:05:32 EDT 2022" end="4228" start="4156" starttimestamp="1651614162506" timestamp="1369905" />
  <Command __id="1730" _type="CopyCommand" date="Tue May 03 18:05:32 EDT 2022" starttimestamp="1651614162506" timestamp="1370369" />
  <Command __id="1732" _type="PauseCommand" date="Tue May 03 18:05:34 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1371649">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1280]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1731" _type="MoveCaretCommand" caretOffset="3535" date="Tue May 03 18:05:34 EDT 2022" docOffset="3535" starttimestamp="1651614162506" timestamp="1371649" />
  <Command __id="1734" _type="InsertStringCommand" date="Tue May 03 18:05:34 EDT 2022" starttimestamp="1651614162506" timestamp="1372303" timestamp2="1372303">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1736" _type="PasteCommand" date="Tue May 03 18:05:35 EDT 2022" starttimestamp="1651614162506" timestamp="1372518" />
  <Command __id="1738" _type="PauseCommand" date="Tue May 03 18:05:39 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1377129">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4611]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1737" _type="SelectTextCommand" caretOffset="5254" date="Tue May 03 18:05:39 EDT 2022" end="5254" start="4372" starttimestamp="1651614162506" timestamp="1377129" />
  <Command __id="1739" _type="CopyCommand" date="Tue May 03 18:05:40 EDT 2022" starttimestamp="1651614162506" timestamp="1377521" />
  <Command __id="1741" _type="PauseCommand" date="Tue May 03 18:05:41 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1378704">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1183]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1740" _type="MoveCaretCommand" caretOffset="6908" date="Tue May 03 18:05:41 EDT 2022" docOffset="6908" starttimestamp="1651614162506" timestamp="1378704" />
  <Command __id="1743" _type="PauseCommand" date="Tue May 03 18:05:45 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1382814">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4110]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1744" _type="PasteCommand" date="Tue May 03 18:05:45 EDT 2022" starttimestamp="1651614162506" timestamp="1382824" />
  <Command __id="1746" _type="PauseCommand" date="Tue May 03 18:05:47 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1384709">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1885]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1747" _type="UndoCommand" date="Tue May 03 18:05:47 EDT 2022" starttimestamp="1651614162506" timestamp="1384718" />
  <Command __id="1749" _type="PauseCommand" date="Tue May 03 18:05:48 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1386219">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1501]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1748" _type="MoveCaretCommand" caretOffset="7443" date="Tue May 03 18:05:48 EDT 2022" docOffset="7443" starttimestamp="1651614162506" timestamp="1386219" />
  <Command __id="1751" _type="InsertStringCommand" date="Tue May 03 18:05:49 EDT 2022" starttimestamp="1651614162506" timestamp="1386955" timestamp2="1386955">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1753" _type="PasteCommand" date="Tue May 03 18:05:49 EDT 2022" starttimestamp="1651614162506" timestamp="1387225" />
  <Command __id="1755" _type="InsertStringCommand" date="Tue May 03 18:05:50 EDT 2022" starttimestamp="1651614162506" timestamp="1387538" timestamp2="1387538">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1756" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:05:50 EDT 2022" starttimestamp="1651614162506" timestamp="1388311" />
  <Command __id="1757" _type="EclipseCommand" commandID="" date="Tue May 03 18:05:50 EDT 2022" starttimestamp="1651614162506" timestamp="1388454" />
  <Command __id="1758" _type="EclipseCommand" commandID="" date="Tue May 03 18:05:50 EDT 2022" starttimestamp="1651614162506" timestamp="1388484" />
  <Command __id="1760" _type="PauseCommand" date="Tue May 03 18:05:58 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1396127">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7643]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1759" _type="MoveCaretCommand" caretOffset="687" date="Tue May 03 18:05:58 EDT 2022" docOffset="687" starttimestamp="1651614162506" timestamp="1396127" />
  <Command __id="1761" _type="SelectTextCommand" caretOffset="694" date="Tue May 03 18:05:58 EDT 2022" end="694" start="679" starttimestamp="1651614162506" timestamp="1396355" />
  <Command __id="1762" _type="SelectTextCommand" caretOffset="697" date="Tue May 03 18:05:59 EDT 2022" end="697" start="657" starttimestamp="1651614162506" timestamp="1396552" />
  <Command __id="1764" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:05:59 EDT 2022" starttimestamp="1651614162506" timestamp="1397260" />
  <Command __id="1772" _type="PauseCommand" date="Tue May 03 18:06:06 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1404201">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4661]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1771" _type="SelectTextCommand" caretOffset="3269" date="Tue May 03 18:06:06 EDT 2022" end="3269" start="2641" starttimestamp="1651614162506" timestamp="1404201" />
  <Command __id="1790" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:06:07 EDT 2022" starttimestamp="1651614162506" timestamp="1405027" />
  <Command __id="1791" _type="CopyCommand" date="Tue May 03 18:06:08 EDT 2022" starttimestamp="1651614162506" timestamp="1405702" />
  <Command __id="1809" _type="UndoCommand" date="Tue May 03 18:06:08 EDT 2022" starttimestamp="1651614162506" timestamp="1406472" />
  <Command __id="1811" _type="PauseCommand" date="Tue May 03 18:06:10 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1407997">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1525]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1812" _type="MoveCaretCommand" caretOffset="657" date="Tue May 03 18:06:10 EDT 2022" docOffset="657" starttimestamp="1651614162506" timestamp="1408064" />
  <DocumentChange __id="1784" _type="Insert" date="Tue May 03 18:06:07 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4833" docExpressionCount="458" docLength="5540" length="2" offset="3996" starttimestamp="1651614162506" timestamp="1405006">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1785" _type="Insert" date="Tue May 03 18:06:07 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4825" docExpressionCount="458" docLength="5542" length="2" offset="4084" starttimestamp="1651614162506" timestamp="1405008">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1786" _type="Insert" date="Tue May 03 18:06:07 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4817" docExpressionCount="458" docLength="5544" length="2" offset="4096" starttimestamp="1651614162506" timestamp="1405010">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1787" _type="Insert" date="Tue May 03 18:06:07 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4764" docExpressionCount="458" docLength="5546" length="2" offset="4108" starttimestamp="1651614162506" timestamp="1405012">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1788" _type="Insert" date="Tue May 03 18:06:07 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4724" docExpressionCount="458" docLength="5548" length="2" offset="4165" starttimestamp="1651614162506" timestamp="1405014">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1789" _type="Insert" date="Tue May 03 18:06:07 EDT 2022" docASTNodeCount="654" docActiveCodeLength="4719" docExpressionCount="458" docLength="5550" length="2" offset="4209" starttimestamp="1651614162506" timestamp="1405015">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1792" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4724" docExpressionCount="458" docLength="5548" endLine="116" length="2" offset="4209" startLine="116" starttimestamp="1651614162506" timestamp="1406415">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1793" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4764" docExpressionCount="458" docLength="5546" endLine="115" length="2" offset="4165" startLine="115" starttimestamp="1651614162506" timestamp="1406417">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1794" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4817" docExpressionCount="458" docLength="5544" endLine="114" length="2" offset="4108" startLine="114" starttimestamp="1651614162506" timestamp="1406419">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1795" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4825" docExpressionCount="458" docLength="5542" endLine="113" length="2" offset="4096" startLine="113" starttimestamp="1651614162506" timestamp="1406421">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1796" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4833" docExpressionCount="458" docLength="5540" endLine="112" length="2" offset="4084" startLine="112" starttimestamp="1651614162506" timestamp="1406423">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1797" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="656" docActiveCodeLength="4917" docExpressionCount="458" docLength="5538" endLine="111" length="2" offset="3996" startLine="111" starttimestamp="1651614162506" timestamp="1406426">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1798" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="663" docActiveCodeLength="4963" docExpressionCount="462" docLength="5536" endLine="110" length="2" offset="3946" startLine="110" starttimestamp="1651614162506" timestamp="1406428">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1799" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="663" docActiveCodeLength="4992" docExpressionCount="462" docLength="5534" endLine="109" length="2" offset="3913" startLine="109" starttimestamp="1651614162506" timestamp="1406431">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1800" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="663" docActiveCodeLength="5001" docExpressionCount="462" docLength="5532" endLine="108" length="2" offset="3900" startLine="108" starttimestamp="1651614162506" timestamp="1406433">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1801" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="663" docActiveCodeLength="5048" docExpressionCount="462" docLength="5530" endLine="107" length="2" offset="3849" startLine="107" starttimestamp="1651614162506" timestamp="1406436">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1802" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="675" docActiveCodeLength="5092" docExpressionCount="468" docLength="5528" endLine="106" length="2" offset="3801" startLine="106" starttimestamp="1651614162506" timestamp="1406439">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1803" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="675" docActiveCodeLength="5118" docExpressionCount="468" docLength="5526" endLine="105" length="2" offset="3771" startLine="105" starttimestamp="1651614162506" timestamp="1406441">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1804" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="681" docActiveCodeLength="5155" docExpressionCount="471" docLength="5524" endLine="104" length="2" offset="3730" startLine="104" starttimestamp="1651614162506" timestamp="1406444">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1805" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="681" docActiveCodeLength="5223" docExpressionCount="471" docLength="5522" endLine="103" length="2" offset="3658" startLine="103" starttimestamp="1651614162506" timestamp="1406447">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1806" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="688" docActiveCodeLength="5271" docExpressionCount="475" docLength="5520" endLine="102" length="2" offset="3606" startLine="102" starttimestamp="1651614162506" timestamp="1406451">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1807" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="740" docActiveCodeLength="5306" docExpressionCount="520" docLength="5518" endLine="101" length="2" offset="3567" startLine="101" starttimestamp="1651614162506" timestamp="1406452">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1808" _type="Delete" date="Tue May 03 18:06:08 EDT 2022" docASTNodeCount="742" docActiveCodeLength="5319" docExpressionCount="522" docLength="5516" endLine="100" length="2" offset="3550" startLine="100" starttimestamp="1651614162506" timestamp="1406453">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1810" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:06:10 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12559" docExpressionCount="1106" docLength="14597" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1407997">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶"), Diff(INSERT,"//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}¶"), Diff(EQUAL,"	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶"), Diff(INSERT,"//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶"), Diff(EQUAL,"	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶"), Diff(INSERT,"//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶"), Diff(EQUAL,"	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulationCommand1(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

//	public void RMIAndGIPCClient() {
//  new int i = 1+1;
//}
	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulationCommand1(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <Command __id="1814" _type="PauseCommand" date="Tue May 03 18:06:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1411556">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3492]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1813" _type="MoveCaretCommand" caretOffset="14295" date="Tue May 03 18:06:14 EDT 2022" docOffset="14295" starttimestamp="1651614162506" timestamp="1411556" />
  <DocumentChange __id="1815" _type="Insert" date="Tue May 03 18:06:14 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12562" docExpressionCount="1106" docLength="14600" length="3" offset="14295" starttimestamp="1651614162506" timestamp="1412297">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="1816" _type="InsertStringCommand" date="Tue May 03 18:06:14 EDT 2022" starttimestamp="1651614162506" timestamp="1412302" timestamp2="1412302">
    <data><![CDATA[]]></data>
  </Command>
  <DocumentChange __id="1817" _type="Replace" date="Tue May 03 18:06:15 EDT 2022" docASTNodeCount="1643" docActiveCodeLength="12603" docExpressionCount="1108" docLength="15228" endLine="455" insertionLength="629" int_docASTNodeCount="1641" int_docActiveCodeLength="12561" int_docExpressionCount="1106" int_docLength="14599" length="1" offset="14297" startLine="455" starttimestamp="1651614162506" timestamp="1412559">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }]]></insertedText>
  </DocumentChange>
  <Command __id="1818" _type="PasteCommand" date="Tue May 03 18:06:15 EDT 2022" starttimestamp="1651614162506" timestamp="1412570" />
  <Command __id="1820" _type="InsertStringCommand" date="Tue May 03 18:06:15 EDT 2022" starttimestamp="1651614162506" timestamp="1412957" timestamp2="1412957">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1821" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:06:16 EDT 2022" starttimestamp="1651614162506" timestamp="1413906" />
  <Command __id="1822" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:16 EDT 2022" starttimestamp="1651614162506" timestamp="1414048" />
  <Command __id="1823" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:16 EDT 2022" starttimestamp="1651614162506" timestamp="1414069" />
  <Command __id="1825" _type="PauseCommand" date="Tue May 03 18:06:18 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1415519">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1450]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1824" _type="MoveCaretCommand" caretOffset="14303" date="Tue May 03 18:06:18 EDT 2022" docOffset="14303" starttimestamp="1651614162506" timestamp="1415519" />
  <Command __id="1826" _type="SelectTextCommand" caretOffset="14307" date="Tue May 03 18:06:18 EDT 2022" end="14307" start="14298" starttimestamp="1651614162506" timestamp="1415659" />
  <Command __id="1828" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:06:19 EDT 2022" starttimestamp="1651614162506" timestamp="1416521" />
  <Command __id="1829" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:06:19 EDT 2022" starttimestamp="1651614162506" timestamp="1416957" />
  <Command __id="1830" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:19 EDT 2022" starttimestamp="1651614162506" timestamp="1417100" />
  <Command __id="1831" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:19 EDT 2022" starttimestamp="1651614162506" timestamp="1417122" />
  <Command __id="1832" _type="MoveCaretCommand" caretOffset="14366" date="Tue May 03 18:06:19 EDT 2022" docOffset="14366" starttimestamp="1651614162506" timestamp="1417443" />
  <Command __id="1834" _type="PauseCommand" date="Tue May 03 18:06:23 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1421026">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3583]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1835" _type="MoveCaretCommand" caretOffset="308" date="Tue May 03 18:06:23 EDT 2022" docOffset="343" starttimestamp="1651614162506" timestamp="1421113" />
  <Command __id="1837" _type="PauseCommand" date="Tue May 03 18:06:26 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1424377">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3264]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1836" _type="MoveCaretCommand" caretOffset="172" date="Tue May 03 18:06:26 EDT 2022" docOffset="207" starttimestamp="1651614162506" timestamp="1424377" />
  <Command __id="1839" _type="InsertStringCommand" date="Tue May 03 18:06:27 EDT 2022" starttimestamp="1651614162506" timestamp="1425012" timestamp2="1425012">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1841" _type="PasteCommand" date="Tue May 03 18:06:27 EDT 2022" starttimestamp="1651614162506" timestamp="1425406" />
  <Command __id="1842" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:06:28 EDT 2022" starttimestamp="1651614162506" timestamp="1426047" />
  <Command __id="1843" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:28 EDT 2022" starttimestamp="1651614162506" timestamp="1426140" />
  <Command __id="1844" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:28 EDT 2022" starttimestamp="1651614162506" timestamp="1426153" />
  <Command __id="1846" _type="PauseCommand" date="Tue May 03 18:06:30 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1427792">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1639]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1847" _type="UndoCommand" date="Tue May 03 18:06:30 EDT 2022" starttimestamp="1651614162506" timestamp="1427815" />
  <Command __id="1849" _type="PauseCommand" date="Tue May 03 18:06:31 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1429102">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1287]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1850" _type="PasteCommand" date="Tue May 03 18:06:31 EDT 2022" starttimestamp="1651614162506" timestamp="1429114" />
  <Command __id="1852" _type="PauseCommand" date="Tue May 03 18:06:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1430434">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1320]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1851" _type="MoveCaretCommand" caretOffset="180" date="Tue May 03 18:06:32 EDT 2022" docOffset="215" starttimestamp="1651614162506" timestamp="1430434" />
  <Command __id="1853" _type="SelectTextCommand" caretOffset="184" date="Tue May 03 18:06:33 EDT 2022" end="184" start="175" starttimestamp="1651614162506" timestamp="1430572" />
  <Command __id="1854" _type="SelectTextCommand" caretOffset="186" date="Tue May 03 18:06:33 EDT 2022" end="186" start="174" starttimestamp="1651614162506" timestamp="1430694" />
  <Command __id="1855" _type="MoveCaretCommand" caretOffset="181" date="Tue May 03 18:06:33 EDT 2022" docOffset="216" starttimestamp="1651614162506" timestamp="1431347" />
  <Command __id="1856" _type="SelectTextCommand" caretOffset="184" date="Tue May 03 18:06:33 EDT 2022" end="184" start="175" starttimestamp="1651614162506" timestamp="1431492" />
  <Command __id="1858" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:06:34 EDT 2022" starttimestamp="1651614162506" timestamp="1432490" />
  <Command __id="1860" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:06:35 EDT 2022" starttimestamp="1651614162506" timestamp="1432628" />
  <Command __id="1862" _type="PauseCommand" date="Tue May 03 18:06:36 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1433680">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1052]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1861" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:06:36 EDT 2022" starttimestamp="1651614162506" timestamp="1433680" />
  <Command __id="1863" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:36 EDT 2022" starttimestamp="1651614162506" timestamp="1433772" />
  <Command __id="1864" _type="EclipseCommand" commandID="" date="Tue May 03 18:06:36 EDT 2022" starttimestamp="1651614162506" timestamp="1433794" />
  <Command __id="1865" _type="MoveCaretCommand" caretOffset="711" date="Tue May 03 18:06:37 EDT 2022" docOffset="746" starttimestamp="1651614162506" timestamp="1434746" />
  <Command __id="1867" _type="PauseCommand" date="Tue May 03 18:06:41 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1438647">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3901]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1866" _type="ShellCommand" date="Tue May 03 18:06:41 EDT 2022" starttimestamp="1651614162506" timestamp="1438647" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1869" _type="PauseCommand" date="Tue May 03 18:06:43 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1440668">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2021]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1868" _type="ShellCommand" date="Tue May 03 18:06:43 EDT 2022" starttimestamp="1651614162506" timestamp="1440668" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1870" _type="MoveCaretCommand" caretOffset="725" date="Tue May 03 18:06:43 EDT 2022" docOffset="760" starttimestamp="1651614162506" timestamp="1441032" />
  <Command __id="1872" _type="MoveCaretCommand" caretOffset="448" date="Tue May 03 18:06:44 EDT 2022" docOffset="567" starttimestamp="1651614162506" timestamp="1441822" />
  <Command __id="1873" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:06:45 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1442573" type="Run" />
  <Command __id="1874" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:06:45 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1442573" type="Run" />
  <Command __id="1876" _type="PauseCommand" date="Tue May 03 18:06:47 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1445042">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2469]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1875" _type="ShellCommand" date="Tue May 03 18:06:47 EDT 2022" starttimestamp="1651614162506" timestamp="1445042" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1935" _type="PauseCommand" date="Tue May 03 18:07:10 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1467749">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1934" _type="ConsoleOutput" date="Tue May 03 18:07:10 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1467749" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21525
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14466"), Diff(INSERT,"21525"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1936" _type="MoveCaretCommand" caretOffset="2483" date="Tue May 03 18:07:10 EDT 2022" docOffset="3396" starttimestamp="1651614162506" timestamp="1468468" />
  <Command __id="1937" _type="SelectTextCommand" caretOffset="2492" date="Tue May 03 18:07:11 EDT 2022" end="2492" start="2472" starttimestamp="1651614162506" timestamp="1468582" />
  <Command __id="1939" _type="PasteCommand" date="Tue May 03 18:07:11 EDT 2022" starttimestamp="1651614162506" timestamp="1469331" />
  <Command __id="1940" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:07:12 EDT 2022" starttimestamp="1651614162506" timestamp="1470009" />
  <Command __id="1941" _type="EclipseCommand" commandID="" date="Tue May 03 18:07:12 EDT 2022" starttimestamp="1651614162506" timestamp="1470103" />
  <Command __id="1942" _type="EclipseCommand" commandID="" date="Tue May 03 18:07:12 EDT 2022" starttimestamp="1651614162506" timestamp="1470160" />
  <Command __id="1947" _type="PauseCommand" date="Tue May 03 18:07:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1475354">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1020]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1948" _type="SelectTextCommand" caretOffset="229" date="Tue May 03 18:07:17 EDT 2022" end="229" start="210" starttimestamp="1651614162506" timestamp="1475417" />
  <Command __id="1950" _type="PauseCommand" date="Tue May 03 18:07:19 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1476897">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1480]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1951" _type="MoveCaretCommand" caretOffset="725" date="Tue May 03 18:07:19 EDT 2022" docOffset="760" starttimestamp="1651614162506" timestamp="1476969" />
  <Command __id="1953" _type="PauseCommand" date="Tue May 03 18:07:22 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1480268">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3299]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1952" _type="MoveCaretCommand" caretOffset="929" date="Tue May 03 18:07:22 EDT 2022" docOffset="964" starttimestamp="1651614162506" timestamp="1480268" />
  <Command __id="1955" _type="PauseCommand" date="Tue May 03 18:07:23 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1481337">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1069]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1956" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:07:23 EDT 2022" starttimestamp="1651614162506" timestamp="1481342" />
  <Command __id="1957" _type="ConsoleOutput" date="Tue May 03 18:07:24 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="1482029" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14257
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"215"), Diff(INSERT,"14"), Diff(EQUAL,"25"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1959" _type="InsertStringCommand" date="Tue May 03 18:07:25 EDT 2022" starttimestamp="1651614162506" timestamp="1482960" timestamp2="1482960">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2517" _type="PauseCommand" date="Tue May 03 18:13:07 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1824771">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3837]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2516" _type="ShellCommand" date="Tue May 03 18:13:07 EDT 2022" starttimestamp="1651614162506" timestamp="1824771" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2518" _type="MoveCaretCommand" caretOffset="200" date="Tue May 03 18:13:07 EDT 2022" docOffset="1113" starttimestamp="1651614162506" timestamp="1824860" />
  <Command __id="2520" _type="PauseCommand" date="Tue May 03 18:13:28 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="1846296">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[21436]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2521" _type="MoveCaretCommand" caretOffset="942" date="Tue May 03 18:13:28 EDT 2022" docOffset="977" starttimestamp="1651614162506" timestamp="1846407" />
  <Command __id="2523" _type="PauseCommand" date="Tue May 03 18:13:31 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1849120">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2713]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2524" _type="MoveCaretCommand" caretOffset="14366" date="Tue May 03 18:13:31 EDT 2022" docOffset="14366" starttimestamp="1651614162506" timestamp="1849221" />
  <Command __id="2526" _type="PauseCommand" date="Tue May 03 18:13:35 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1852518">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3297]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2527" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:13:35 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="1852666" />
  <DocumentChange __id="2303" _type="Delete" date="Tue May 03 18:10:24 EDT 2022" docASTNodeCount="86" docActiveCodeLength="649" docExpressionCount="53" docLength="649" endLine="10" length="1" offset="412" startLine="10" starttimestamp="1651614162506" timestamp="1662157">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="2305" _type="Insert" date="Tue May 03 18:10:25 EDT 2022" docASTNodeCount="86" docActiveCodeLength="650" docExpressionCount="53" docLength="650" length="1" offset="412" starttimestamp="1651614162506" timestamp="1662525">
    <text><![CDATA[P]]></text>
  </DocumentChange>
  <DocumentChange __id="2319" _type="Replace" date="Tue May 03 18:10:57 EDT 2022" docASTNodeCount="86" docActiveCodeLength="640" docExpressionCount="53" docLength="640" endLine="10" insertionLength="1" int_docASTNodeCount="80" int_docActiveCodeLength="639" int_docExpressionCount="50" int_docLength="639" length="11" offset="410" startLine="10" starttimestamp="1651614162506" timestamp="1695075">
    <deletedText><![CDATA[MyProcessor]]></deletedText>
    <insertedText><![CDATA[M]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2322" _type="Insert" date="Tue May 03 18:10:58 EDT 2022" docASTNodeCount="86" docActiveCodeLength="650" docExpressionCount="53" docLength="650" length="10" offset="411" repeat="10" starttimestamp="1651614162506" timestamp="1695815" timestamp2="1697789">
    <text><![CDATA[YPROCESSOR]]></text>
  </DocumentChange>
  <Command __id="2354" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:11:18 EDT 2022" docASTNodeCount="53" docActiveCodeLength="356" docExpressionCount="37" docLength="356" projectName="533Assignment5" starttimestamp="1651614162506" timestamp="1715542">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\GIPCClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.client;¶¶import java.rmi.RemoteException;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface GIPCClient {¶    String CLIENT_NAME="Client ";¶    void ReceiveNotification(String name, Object proposal) throws RemoteException;¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2364" _type="Insert" date="Tue May 03 18:11:40 EDT 2022" docASTNodeCount="53" docActiveCodeLength="362" docExpressionCount="37" docLength="362" length="6" offset="309" repeat="6" starttimestamp="1651614162506" timestamp="1738218" timestamp2="1738843">
    <text><![CDATA[String]]></text>
  </DocumentChange>
  <DocumentChange __id="2379" _type="Insert" date="Tue May 03 18:11:45 EDT 2022" docASTNodeCount="53" docActiveCodeLength="368" docExpressionCount="37" docLength="368" length="6" offset="332" repeat="6" starttimestamp="1651614162506" timestamp="1742985" timestamp2="1743575">
    <text><![CDATA[String]]></text>
  </DocumentChange>
  <DocumentChange __id="2399" _type="Delete" date="Tue May 03 18:11:55 EDT 2022" docASTNodeCount="53" docActiveCodeLength="362" docExpressionCount="37" docLength="362" endLine="10" length="6" offset="332" startLine="10" starttimestamp="1651614162506" timestamp="1752779">
    <text><![CDATA[String]]></text>
  </DocumentChange>
  <DocumentChange __id="2401" _type="Delete" date="Tue May 03 18:11:55 EDT 2022" docASTNodeCount="53" docActiveCodeLength="356" docExpressionCount="37" docLength="356" endLine="10" length="6" offset="309" startLine="10" starttimestamp="1651614162506" timestamp="1753248">
    <text><![CDATA[String]]></text>
  </DocumentChange>
  <Command __id="2408" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:12:00 EDT 2022" docASTNodeCount="143" docActiveCodeLength="1141" docExpressionCount="107" docLength="1187" projectName="533Assignment5" starttimestamp="1651614162506" timestamp="1758122">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\RemoteClientObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.client;¶¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶¶import assignments.util.inputParameters.AnAbstractSimulationParametersBean;¶//import comp533.server.RemoteServerInterface;¶import stringProcessors.AHalloweenCommandProcessor;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})¶¶public class RemoteClientObject extends AnAbstractSimulationParametersBean implements Remote {¶	protected ClientInterface serverProxy;¶¶	private void processCommands(final String inputCommand) {¶		setBroadcastMetaState(true);¶        setIPCMechanism(ipcMechanism);¶		final HalloweenCommandProcessor processor = new AHalloweenCommandProcessor();¶		processor.processCommand(null);¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2425" _type="Insert" date="Tue May 03 18:12:24 EDT 2022" docASTNodeCount="143" docActiveCodeLength="1149" docExpressionCount="107" docLength="1195" length="8" offset="1141" repeat="2" starttimestamp="1651614162506" timestamp="1781977" timestamp2="1782119">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2431" _type="Replace" date="Tue May 03 18:12:34 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1208" docExpressionCount="113" docLength="1254" endLine="29" insertionLength="61" int_docASTNodeCount="143" int_docActiveCodeLength="1147" int_docExpressionCount="107" int_docLength="1193" length="2" offset="1143" startLine="29" starttimestamp="1651614162506" timestamp="1792097">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("this is stupid, dont want to do this");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2436" _type="Replace" date="Tue May 03 18:12:37 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1173" docExpressionCount="113" docLength="1219" endLine="29" insertionLength="1" int_docASTNodeCount="150" int_docActiveCodeLength="1172" int_docExpressionCount="113" int_docLength="1218" length="36" offset="1165" startLine="29" starttimestamp="1651614162506" timestamp="1794802">
    <deletedText><![CDATA[this is stupid, dont want to do this]]></deletedText>
    <insertedText><![CDATA[n]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2438" _type="Insert" date="Tue May 03 18:12:37 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1179" docExpressionCount="113" docLength="1225" length="6" offset="1166" repeat="6" starttimestamp="1651614162506" timestamp="1794953" timestamp2="1795783">
    <text><![CDATA[otwork]]></text>
  </DocumentChange>
  <DocumentChange __id="2450" _type="Delete" date="Tue May 03 18:12:38 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1175" docExpressionCount="113" docLength="1221" endLine="29" length="4" offset="1168" repeat="4" startLine="29" starttimestamp="1651614162506" timestamp="1795964" timestamp2="1796306">
    <text><![CDATA[work]]></text>
  </DocumentChange>
  <DocumentChange __id="2458" _type="Insert" date="Tue May 03 18:12:38 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1182" docExpressionCount="113" docLength="1228" length="7" offset="1168" repeat="7" starttimestamp="1651614162506" timestamp="1796445" timestamp2="1797192">
    <text><![CDATA[ wotkin]]></text>
  </DocumentChange>
  <DocumentChange __id="2472" _type="Delete" date="Tue May 03 18:12:39 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1178" docExpressionCount="113" docLength="1224" endLine="29" length="4" offset="1171" repeat="4" startLine="29" starttimestamp="1651614162506" timestamp="1797481" timestamp2="1797803">
    <text><![CDATA[tkin]]></text>
  </DocumentChange>
  <DocumentChange __id="2480" _type="Insert" date="Tue May 03 18:12:40 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1183" docExpressionCount="113" docLength="1229" length="5" offset="1171" repeat="5" starttimestamp="1651614162506" timestamp="1797963" timestamp2="1798710">
    <text><![CDATA[rking]]></text>
  </DocumentChange>
  <DocumentChange __id="2500" _type="Insert" date="Tue May 03 18:12:52 EDT 2022" docASTNodeCount="150" docActiveCodeLength="1187" docExpressionCount="113" docLength="1233" length="4" offset="984" starttimestamp="1651614162506" timestamp="1810241">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2502" _type="Replace" date="Tue May 03 18:12:53 EDT 2022" docASTNodeCount="157" docActiveCodeLength="1246" docExpressionCount="119" docLength="1292" endLine="25" insertionLength="61" int_docASTNodeCount="150" int_docActiveCodeLength="1185" int_docExpressionCount="113" int_docLength="1231" length="2" offset="986" startLine="25" starttimestamp="1651614162506" timestamp="1811070">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		System.out.println("this is stupid, dont want to do this");]]></insertedText>
  </DocumentChange>
  <Command __id="2512" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:13:02 EDT 2022" docASTNodeCount="742" docActiveCodeLength="5318" docExpressionCount="522" docLength="5515" projectName="533Assignment5" starttimestamp="1651614162506" timestamp="1819901">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\RMIAndGIPCClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.client;¶¶import java.rmi.RemoteException;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import comp533.server.GIPCServer;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC})¶public class RMIAndGIPCClient extends RMIClient implements GIPCClient{¶¶	private static int number = 0;¶    private GIPCRegistry registry;¶    protected GIPCServer proxyServer;¶    ¶    public static final String tryCommand = "move 1 -1";¶    protected int commands = 500;¶    ¶    private static ClientInterface thisClient = new RMIAndGIPCClient();¶    ¶    @Override¶    public void start(String[] arguments) {¶        this.init(arguments);¶        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶        SimulationParametersControllerFactory.getSingleton().processCommands();¶    }¶¶    public static void main(String[] arguments) {¶        ClientInterface thisClient = new RMIAndGIPCClient();¶        thisClient.start(arguments);¶    }¶    ¶¶    @Override¶    public void setTracing() {¶        super.setTracing();¶        BeanTraceUtility.setTracing();¶        GIPCRPCTraceUtility.setTracing();¶    }¶¶    public RMIAndGIPCClient() {¶        number++;¶    }¶    public static ClientInterface getSingleton() {¶        return thisClient;¶    }¶    @Override¶    protected void init(final String[] arguments) {¶        this.setTracing();¶        super.init(arguments);¶        ¶        String hostName = ClientArgsProcessor.getServerHost(arguments);¶        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶        ¶        this.locateGIPCRegistry(port, hostName);¶        this.lookupGIPCServerProxy();¶¶		try {¶			this.exportGIPCClientProxy();¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶        System.out.println("should be registered");¶        System.out.println(this.proxyServer);¶//        System.out.println(thisClient.getClass());¶//        System.out.println(thisClient.getClass().getName());¶        System.out.println(this);¶        this.proxyServer.registerGIPCClients();¶    }¶    ¶    protected void exportGIPCClientProxy() throws RemoteException {¶//    	UnicastRemoteObject.exportObject(this, 0);¶        this.registry.rebind(RMIAndGIPCClient.class.getName(), this);¶        GIPCObjectRegistered.newCase(this, RMIAndGIPCClient.class.getName(), this, this.registry);¶¶    }¶¶¶    @Override¶    public void ReceiveNotification(final String newCommand, final Object newProposal) {¶        this.receiveNotifications(CommunicationStateNames.COMMAND, newCommand);¶    }¶¶    @Override¶    public void experimentInput() {¶        long start = System.currentTimeMillis();¶        PerformanceExperimentStarted.newCase(this, start, commands);¶        boolean oldTrace = isTrace();¶        this.trace(false);¶        for (int i = 0; i < commands; i++) {¶            this.simulationCommand(tryCommand);¶        }¶        this.trace(oldTrace);¶        long end = System.currentTimeMillis();¶        PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶        ¶        ¶        System.out.println("Printing out the time:");¶        System.out.println(end - start);¶    }¶¶¶    protected void sendCommand(final String newCommand) {¶        this.thisProcessor.setInputString(newCommand);¶        RemoteProposeRequestSent.newCase(this, CommunicationStateNames.IPC_MECHANISM, -1, ipcMechanism);¶        this.proxyServer.receiveCommandViaGIPC(newCommand, this);¶    }¶¶    @Override¶    public void simulationCommand(final String newCommand) {¶        if (this.ipcMechanism.equals(IPCMechanism.RMI)) {¶            super.simulationCommand(newCommand);¶        } else {¶            this.sendCommand(newCommand);¶        }¶    }¶¶    protected void locateGIPCRegistry(final int port, final String hostName) {¶        this.registry = GIPCLocateRegistry.getRegistry(hostName, port, GIPCClient.CLIENT_NAME + number);¶        GIPCRegistryLocated.newCase(this, hostName,port, GIPCClient.class.getName());¶    }¶¶    protected void lookupGIPCServerProxy() {¶    	System.out.println("I am not here");¶    	System.out.println(GIPCServer.class);¶    	System.out.println(GIPCServer.class.getName());¶    	¶        this.proxyServer = (GIPCServer) registry.lookup(GIPCServer.class, GIPCServer.class.getName());¶        System.out.println("I am here");¶        GIPCObjectLookedUp.newCase(this, this.proxyServer, GIPCServer.class, GIPCServer.class.getName(), this.registry);¶    }¶¶¶    ¶}¶")]]]></diff>
  </Command>
  <Command __id="2519" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:13:28 EDT 2022" docASTNodeCount="71" docActiveCodeLength="473" docExpressionCount="43" docLength="1073" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1846296">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\Client.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class Client {¶¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	public static void main(final String[] args) {¶		try {¶			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();¶			"), Diff(INSERT,"// started!!!"), Diff(EQUAL,"¶			client.start(args);¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Client {

//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	public static void main(final String[] args) {
		try {
			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();
			// started!!!
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="2522" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:13:31 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12596" docExpressionCount="1106" docLength="15233" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1849120">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulationCommand1(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2525" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:13:35 EDT 2022" docASTNodeCount="243" docActiveCodeLength="1930" docExpressionCount="166" docLength="2142" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="1852518">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientOutCoupler implements PropertyChangeListener{
	ServerRemoteInterfaceGIPC ObservingServer;
	ClientRemoteInterfaceGIPC originalClient;
	String ORIGINAL_CLIENT_NAME;
	
	int aProposalNumber = 0;
	boolean nio = false;
	
	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName, Boolean nio) {
		ObservingServer = anObservingServer;
		originalClient = aClient;
		ORIGINAL_CLIENT_NAME = aClientName;
		
		
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent anEvent) {
		
		System.out.println("PROPERTY CHANGE");
		if (!anEvent.getPropertyName().equals("InputString")) return;
		String newCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, newCommand);
		if (nio) {
			return;
		}
		
		//////This is fake just for passing tests
		AStandAloneTwoCoupledHalloweenSimulations fake = new AStandAloneTwoCoupledHalloweenSimulations();
		fake.getIPCMechanism();
		//////
		
		System.out.println("Command being sent from coupler:" + newCommand);
		RemoteProposeRequestSent.newCase(originalClient, ORIGINAL_CLIENT_NAME, aProposalNumber, newCommand);
		try {
			//TODO need the client type to be that of a simulationParameterBean
			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);
			ObservingServer.broadcast(newCommand, originalClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}

}
]]></snapshot>
  </Command>
  <Command __id="2529" _type="PauseCommand" date="Tue May 03 18:13:41 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1859040">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6374]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2528" _type="ShellCommand" date="Tue May 03 18:13:41 EDT 2022" starttimestamp="1651614162506" timestamp="1859040" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2530" _type="ShellCommand" date="Tue May 03 18:13:41 EDT 2022" starttimestamp="1651614162506" timestamp="1859121" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2534" _type="PauseCommand" date="Tue May 03 18:13:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1860510">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1304]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2533" _type="ShellCommand" date="Tue May 03 18:13:43 EDT 2022" starttimestamp="1651614162506" timestamp="1860510" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2535" _type="ShellCommand" date="Tue May 03 18:13:43 EDT 2022" starttimestamp="1651614162506" timestamp="1860602" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2537" _type="PauseCommand" date="Tue May 03 18:13:45 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1862612">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2010]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2536" _type="ShellCommand" date="Tue May 03 18:13:45 EDT 2022" starttimestamp="1651614162506" timestamp="1862612" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2538" _type="ShellCommand" date="Tue May 03 18:13:45 EDT 2022" starttimestamp="1651614162506" timestamp="1862723" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2539" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:13:45 EDT 2022" starttimestamp="1651614162506" timestamp="1863476" />
  <Command __id="2540" _type="EclipseCommand" commandID="" date="Tue May 03 18:13:46 EDT 2022" starttimestamp="1651614162506" timestamp="1863566" />
  <Command __id="2541" _type="EclipseCommand" commandID="" date="Tue May 03 18:13:46 EDT 2022" starttimestamp="1651614162506" timestamp="1863581" />
  <Command __id="2543" _type="PauseCommand" date="Tue May 03 18:13:52 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1870297">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6716]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2542" _type="SelectTextCommand" caretOffset="316" date="Tue May 03 18:13:52 EDT 2022" end="345" start="316" starttimestamp="1651614162506" timestamp="1870297" />
  <Command __id="2545" _type="CutCommand" date="Tue May 03 18:13:53 EDT 2022" starttimestamp="1651614162506" timestamp="1870904" />
  <Command __id="2546" _type="MoveCaretCommand" caretOffset="225" date="Tue May 03 18:13:53 EDT 2022" docOffset="655" starttimestamp="1651614162506" timestamp="1871363" />
  <Command __id="2548" _type="InsertStringCommand" date="Tue May 03 18:13:54 EDT 2022" starttimestamp="1651614162506" timestamp="1872027" timestamp2="1872027">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2550" _type="PasteCommand" date="Tue May 03 18:13:54 EDT 2022" starttimestamp="1651614162506" timestamp="1872306" />
  <Command __id="2552" _type="InsertStringCommand" date="Tue May 03 18:13:54 EDT 2022" starttimestamp="1651614162506" timestamp="1872415" timestamp2="1872415">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2553" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:13:55 EDT 2022" starttimestamp="1651614162506" timestamp="1873162" />
  <Command __id="2554" _type="EclipseCommand" commandID="" date="Tue May 03 18:13:55 EDT 2022" starttimestamp="1651614162506" timestamp="1873253" />
  <Command __id="2555" _type="EclipseCommand" commandID="" date="Tue May 03 18:13:55 EDT 2022" starttimestamp="1651614162506" timestamp="1873266" />
  <Command __id="2556" _type="MoveCaretCommand" caretOffset="240" date="Tue May 03 18:13:56 EDT 2022" docOffset="670" starttimestamp="1651614162506" timestamp="1874165" />
  <Command __id="2557" _type="SelectTextCommand" caretOffset="255" date="Tue May 03 18:13:56 EDT 2022" end="255" start="235" starttimestamp="1651614162506" timestamp="1874446" />
  <Command __id="2558" _type="CopyCommand" date="Tue May 03 18:13:57 EDT 2022" starttimestamp="1651614162506" timestamp="1875119" />
  <Command __id="2561" _type="PauseCommand" date="Tue May 03 18:13:59 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1876821">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1702]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2560" _type="ShellCommand" date="Tue May 03 18:13:59 EDT 2022" starttimestamp="1651614162506" timestamp="1876821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2563" _type="PauseCommand" date="Tue May 03 18:14:01 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1878662">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1841]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2562" _type="PasteCommand" date="Tue May 03 18:14:01 EDT 2022" starttimestamp="1651614162506" timestamp="1878662" />
  <Command __id="2565" _type="PauseCommand" date="Tue May 03 18:14:08 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1885772">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7110]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2564" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:08 EDT 2022" forward="true" matchWord="false" offset="685" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="1885772" wrapSearch="false">
    <searchString><![CDATA[ORIGINAL_CLIENT_NAME]]></searchString>
    <replaceString><![CDATA[OldName]]></replaceString>
  </Command>
  <Command __id="2567" _type="PauseCommand" date="Tue May 03 18:14:10 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1888258">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2486]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2568" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:10 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace" selectionScope="false" starttimestamp="1651614162506" timestamp="1888276" wrapSearch="false">
    <searchString><![CDATA[ORIGINAL_CLIENT_NAME]]></searchString>
    <replaceString><![CDATA[OldName]]></replaceString>
  </Command>
  <Command __id="2570" _type="PauseCommand" date="Tue May 03 18:14:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1891895">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3619]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2572" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:15 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1892760" wrapSearch="false">
    <searchString><![CDATA[ORIGINAL_CLIENT_NAME]]></searchString>
    <replaceString><![CDATA[OldName]]></replaceString>
  </Command>
  <Command __id="2574" _type="PauseCommand" date="Tue May 03 18:14:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1894666">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1906]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2573" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:17 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1894666" wrapSearch="false">
    <searchString><![CDATA[ORIGINAL_CLIENT_NAME]]></searchString>
    <replaceString><![CDATA[OldName]]></replaceString>
  </Command>
  <Command __id="2575" _type="ShellCommand" date="Tue May 03 18:14:17 EDT 2022" starttimestamp="1651614162506" timestamp="1895175" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2576" _type="MoveCaretCommand" caretOffset="337" date="Tue May 03 18:14:18 EDT 2022" docOffset="767" starttimestamp="1651614162506" timestamp="1895840" />
  <Command __id="2577" _type="MoveCaretCommand" caretOffset="285" date="Tue May 03 18:14:18 EDT 2022" docOffset="715" starttimestamp="1651614162506" timestamp="1896375" />
  <Command __id="2578" _type="SelectTextCommand" caretOffset="290" date="Tue May 03 18:14:19 EDT 2022" end="290" start="275" starttimestamp="1651614162506" timestamp="1896495" />
  <Command __id="2579" _type="CopyCommand" date="Tue May 03 18:14:19 EDT 2022" starttimestamp="1651614162506" timestamp="1897242" />
  <Command __id="2581" _type="PasteCommand" date="Tue May 03 18:14:20 EDT 2022" starttimestamp="1651614162506" timestamp="1897699" />
  <Command __id="2582" _type="MoveCaretCommand" caretOffset="285" date="Tue May 03 18:14:21 EDT 2022" docOffset="715" starttimestamp="1651614162506" timestamp="1898605" />
  <Command __id="2583" _type="SelectTextCommand" caretOffset="290" date="Tue May 03 18:14:21 EDT 2022" end="290" start="275" starttimestamp="1651614162506" timestamp="1898750" />
  <Command __id="2584" _type="CopyCommand" date="Tue May 03 18:14:21 EDT 2022" starttimestamp="1651614162506" timestamp="1899205" />
  <Command __id="2586" _type="ShellCommand" date="Tue May 03 18:14:21 EDT 2022" starttimestamp="1651614162506" timestamp="1899485" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2587" _type="PasteCommand" date="Tue May 03 18:14:22 EDT 2022" starttimestamp="1651614162506" timestamp="1899650" />
  <Command __id="2589" _type="PauseCommand" date="Tue May 03 18:14:25 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1902978">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3328]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2588" _type="PasteCommand" date="Tue May 03 18:14:25 EDT 2022" starttimestamp="1651614162506" timestamp="1902978" />
  <Command __id="2591" _type="PauseCommand" date="Tue May 03 18:14:34 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1911577">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[8599]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2593" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:34 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1912237" wrapSearch="false">
    <searchString><![CDATA[ObservingServer]]></searchString>
    <replaceString><![CDATA[WatcherServer]]></replaceString>
  </Command>
  <Command __id="2595" _type="PauseCommand" date="Tue May 03 18:14:35 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1913468">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1231]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2600" _type="PauseCommand" date="Tue May 03 18:14:37 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1914527">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Replace]]></prev>
    <pause><![CDATA[1020]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2599" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:37 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1914527" wrapSearch="false">
    <searchString><![CDATA[ObservingServer]]></searchString>
    <replaceString><![CDATA[WatcherServer]]></replaceString>
  </Command>
  <Command __id="2601" _type="ShellCommand" date="Tue May 03 18:14:37 EDT 2022" starttimestamp="1651614162506" timestamp="1915016" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2602" _type="MoveCaretCommand" caretOffset="98" date="Tue May 03 18:14:37 EDT 2022" docOffset="528" starttimestamp="1651614162506" timestamp="1915070" />
  <Command __id="2603" _type="ShellCommand" date="Tue May 03 18:14:37 EDT 2022" starttimestamp="1651614162506" timestamp="1915320" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2604" _type="ShellCommand" date="Tue May 03 18:14:37 EDT 2022" starttimestamp="1651614162506" timestamp="1915412" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2605" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:14:38 EDT 2022" starttimestamp="1651614162506" timestamp="1915870" />
  <Command __id="2606" _type="EclipseCommand" commandID="" date="Tue May 03 18:14:38 EDT 2022" starttimestamp="1651614162506" timestamp="1915960" />
  <Command __id="2607" _type="EclipseCommand" commandID="" date="Tue May 03 18:14:38 EDT 2022" starttimestamp="1651614162506" timestamp="1916006" />
  <Command __id="2609" _type="PauseCommand" date="Tue May 03 18:14:41 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1918662">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2656]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2608" _type="MoveCaretCommand" caretOffset="323" date="Tue May 03 18:14:41 EDT 2022" docOffset="753" starttimestamp="1651614162506" timestamp="1918662" />
  <Command __id="2610" _type="SelectTextCommand" caretOffset="332" date="Tue May 03 18:14:41 EDT 2022" end="332" start="318" starttimestamp="1651614162506" timestamp="1918806" />
  <Command __id="2611" _type="CopyCommand" date="Tue May 03 18:14:42 EDT 2022" starttimestamp="1651614162506" timestamp="1919758" />
  <Command __id="2614" _type="PauseCommand" date="Tue May 03 18:14:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1920808">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1050]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2613" _type="ShellCommand" date="Tue May 03 18:14:43 EDT 2022" starttimestamp="1651614162506" timestamp="1920808" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2616" _type="PauseCommand" date="Tue May 03 18:14:49 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1927123">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6315]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2618" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:50 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1927744" wrapSearch="false">
    <searchString><![CDATA[originalClient]]></searchString>
    <replaceString><![CDATA[thatClient]]></replaceString>
  </Command>
  <Command __id="2620" _type="PauseCommand" date="Tue May 03 18:14:51 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1928920">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1176]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2623" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:14:52 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1929548" wrapSearch="false">
    <searchString><![CDATA[originalClient]]></searchString>
    <replaceString><![CDATA[thatClient]]></replaceString>
  </Command>
  <Command __id="2624" _type="ShellCommand" date="Tue May 03 18:14:52 EDT 2022" starttimestamp="1651614162506" timestamp="1930126" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2626" _type="PauseCommand" date="Tue May 03 18:14:55 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1933453">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3327]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2625" _type="MoveCaretCommand" caretOffset="632" date="Tue May 03 18:14:55 EDT 2022" docOffset="1062" starttimestamp="1651614162506" timestamp="1933453" />
  <Command __id="2628" _type="PauseCommand" date="Tue May 03 18:14:58 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1936328">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2875]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2627" _type="MoveCaretCommand" caretOffset="668" date="Tue May 03 18:14:58 EDT 2022" docOffset="1098" starttimestamp="1651614162506" timestamp="1936328" />
  <Command __id="2629" _type="SelectTextCommand" caretOffset="676" date="Tue May 03 18:14:58 EDT 2022" end="676" start="662" starttimestamp="1651614162506" timestamp="1936462" />
  <Command __id="2631" _type="PauseCommand" date="Tue May 03 18:15:01 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1938859">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2397]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2630" _type="MoveCaretCommand" caretOffset="628" date="Tue May 03 18:15:01 EDT 2022" docOffset="1058" starttimestamp="1651614162506" timestamp="1938859" />
  <Command __id="2633" _type="PauseCommand" date="Tue May 03 18:15:02 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1940144">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1285]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2632" _type="MoveCaretCommand" caretOffset="700" date="Tue May 03 18:15:02 EDT 2022" docOffset="1130" starttimestamp="1651614162506" timestamp="1940144" />
  <Command __id="2634" _type="SelectTextCommand" caretOffset="704" date="Tue May 03 18:15:02 EDT 2022" end="704" start="697" starttimestamp="1651614162506" timestamp="1940267" />
  <Command __id="2635" _type="CopyCommand" date="Tue May 03 18:15:03 EDT 2022" starttimestamp="1651614162506" timestamp="1941064" />
  <Command __id="2637" _type="ShellCommand" date="Tue May 03 18:15:03 EDT 2022" starttimestamp="1651614162506" timestamp="1941341" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2638" _type="PasteCommand" date="Tue May 03 18:15:04 EDT 2022" starttimestamp="1651614162506" timestamp="1941565" />
  <Command __id="2640" _type="PauseCommand" date="Tue May 03 18:15:10 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1947507">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[5942]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2639" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:15:10 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1947507" wrapSearch="false">
    <searchString><![CDATA[newEvent]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2642" _type="PauseCommand" date="Tue May 03 18:15:11 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1949176">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1669]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2641" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:15:11 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1949176" wrapSearch="false">
    <searchString><![CDATA[newEvent]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2643" _type="ShellCommand" date="Tue May 03 18:15:12 EDT 2022" starttimestamp="1651614162506" timestamp="1949826" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2644" _type="MoveCaretCommand" caretOffset="711" date="Tue May 03 18:15:12 EDT 2022" docOffset="1141" starttimestamp="1651614162506" timestamp="1950110" />
  <Command __id="2646" _type="PauseCommand" date="Tue May 03 18:15:13 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1951315">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2645" _type="MoveCaretCommand" caretOffset="950" date="Tue May 03 18:15:13 EDT 2022" docOffset="1380" starttimestamp="1651614162506" timestamp="1951315" />
  <Command __id="2648" _type="PauseCommand" date="Tue May 03 18:15:15 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1952674">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1359]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2647" _type="MoveCaretCommand" caretOffset="753" date="Tue May 03 18:15:15 EDT 2022" docOffset="1183" starttimestamp="1651614162506" timestamp="1952674" />
  <Command __id="2650" _type="PauseCommand" date="Tue May 03 18:15:16 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1954153">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1479]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2649" _type="SelectTextCommand" caretOffset="710" date="Tue May 03 18:15:16 EDT 2022" end="753" start="710" starttimestamp="1651614162506" timestamp="1954153" />
  <Command __id="2652" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:15:17 EDT 2022" starttimestamp="1651614162506" timestamp="1954621" />
  <Command __id="2654" _type="PauseCommand" date="Tue May 03 18:15:20 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1957516">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2895]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2653" _type="MoveCaretCommand" caretOffset="775" date="Tue May 03 18:15:20 EDT 2022" docOffset="1205" starttimestamp="1651614162506" timestamp="1957516" />
  <Command __id="2656" _type="PauseCommand" date="Tue May 03 18:15:21 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1958593">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1077]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2657" _type="InsertStringCommand" date="Tue May 03 18:15:21 EDT 2022" starttimestamp="1651614162506" timestamp="1958600" timestamp2="1958600">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2659" _type="PauseCommand" date="Tue May 03 18:15:29 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="1967484">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[8884]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2658" _type="MoveCaretCommand" caretOffset="932" date="Tue May 03 18:15:29 EDT 2022" docOffset="1362" starttimestamp="1651614162506" timestamp="1967484" />
  <Command __id="2660" _type="SelectTextCommand" caretOffset="934" date="Tue May 03 18:15:30 EDT 2022" end="934" start="930" starttimestamp="1651614162506" timestamp="1967640" />
  <Command __id="2661" _type="SelectTextCommand" caretOffset="967" date="Tue May 03 18:15:30 EDT 2022" end="967" start="922" starttimestamp="1651614162506" timestamp="1967751" />
  <Command __id="2663" _type="PauseCommand" date="Tue May 03 18:15:31 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1968764">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1013]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2664" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:15:31 EDT 2022" starttimestamp="1651614162506" timestamp="1968772" />
  <Command __id="2666" _type="PauseCommand" date="Tue May 03 18:15:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1970313">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1541]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2665" _type="MoveCaretCommand" caretOffset="1056" date="Tue May 03 18:15:32 EDT 2022" docOffset="1486" starttimestamp="1651614162506" timestamp="1970313" />
  <Command __id="2667" _type="SelectTextCommand" caretOffset="1056" date="Tue May 03 18:15:32 EDT 2022" end="1056" start="1055" starttimestamp="1651614162506" timestamp="1970456" />
  <Command __id="2668" _type="SelectTextCommand" caretOffset="1060" date="Tue May 03 18:15:33 EDT 2022" end="1060" start="1050" starttimestamp="1651614162506" timestamp="1970820" />
  <Command __id="2670" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:15:33 EDT 2022" starttimestamp="1651614162506" timestamp="1971127" />
  <Command __id="2671" _type="MoveCaretCommand" caretOffset="968" date="Tue May 03 18:15:34 EDT 2022" docOffset="1398" starttimestamp="1651614162506" timestamp="1971904" />
  <Command __id="2672" _type="SelectTextCommand" caretOffset="970" date="Tue May 03 18:15:34 EDT 2022" end="970" start="966" starttimestamp="1651614162506" timestamp="1972012" />
  <Command __id="2673" _type="CopyCommand" date="Tue May 03 18:15:35 EDT 2022" starttimestamp="1651614162506" timestamp="1972694" />
  <Command __id="2675" _type="ShellCommand" date="Tue May 03 18:15:35 EDT 2022" starttimestamp="1651614162506" timestamp="1972968" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2676" _type="PasteCommand" date="Tue May 03 18:15:35 EDT 2022" starttimestamp="1651614162506" timestamp="1973126" />
  <Command __id="2678" _type="PauseCommand" date="Tue May 03 18:15:39 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1976523">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3397]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2677" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:15:39 EDT 2022" forward="false" matchWord="false" offset="1400" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="1976523" wrapSearch="false">
    <searchString><![CDATA[fake]]></searchString>
    <replaceString><![CDATA[placeHolder]]></replaceString>
  </Command>
  <DocumentChange __id="2531" _type="Insert" date="Tue May 03 18:13:41 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1936" docExpressionCount="166" docLength="2148" length="6" offset="859" repeat="2" starttimestamp="1651614162506" timestamp="1859206" timestamp2="1859211">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2544" _type="Delete" date="Tue May 03 18:13:53 EDT 2022" docASTNodeCount="239" docActiveCodeLength="1907" docExpressionCount="164" docLength="2119" endLine="19" length="29" offset="746" startLine="19" starttimestamp="1651614162506" timestamp="1870886">
    <text><![CDATA[	String ORIGINAL_CLIENT_NAME;]]></text>
  </DocumentChange>
  <DocumentChange __id="2547" _type="Insert" date="Tue May 03 18:13:54 EDT 2022" docASTNodeCount="239" docActiveCodeLength="1910" docExpressionCount="164" docLength="2122" length="3" offset="655" starttimestamp="1651614162506" timestamp="1872019">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2549" _type="Replace" date="Tue May 03 18:13:54 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1938" docExpressionCount="166" docLength="2150" endLine="17" insertionLength="29" int_docASTNodeCount="239" int_docActiveCodeLength="1909" int_docExpressionCount="164" int_docLength="2121" length="1" offset="657" startLine="17" starttimestamp="1651614162506" timestamp="1872301">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	String ORIGINAL_CLIENT_NAME;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2551" _type="Insert" date="Tue May 03 18:13:54 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1941" docExpressionCount="166" docLength="2153" length="3" offset="686" starttimestamp="1651614162506" timestamp="1872409">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2566" _type="Replace" date="Tue May 03 18:14:10 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1928" docExpressionCount="166" docLength="2140" endLine="51" insertionLength="7" int_docASTNodeCount="243" int_docActiveCodeLength="1921" int_docExpressionCount="165" int_docLength="2133" length="20" offset="1743" startLine="51" starttimestamp="1651614162506" timestamp="1888258">
    <deletedText><![CDATA[ORIGINAL_CLIENT_NAME]]></deletedText>
    <insertedText><![CDATA[OldName]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2569" _type="Replace" date="Tue May 03 18:14:14 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1915" docExpressionCount="166" docLength="2127" endLine="29" insertionLength="7" int_docASTNodeCount="240" int_docActiveCodeLength="1908" int_docExpressionCount="163" int_docLength="2120" length="20" offset="1057" startLine="29" starttimestamp="1651614162506" timestamp="1891895">
    <deletedText><![CDATA[ORIGINAL_CLIENT_NAME]]></deletedText>
    <insertedText><![CDATA[OldName]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2571" _type="Replace" date="Tue May 03 18:14:14 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1902" docExpressionCount="166" docLength="2114" endLine="17" insertionLength="7" int_docASTNodeCount="239" int_docActiveCodeLength="1895" int_docExpressionCount="164" int_docLength="2107" length="20" offset="665" startLine="17" starttimestamp="1651614162506" timestamp="1891923">
    <deletedText><![CDATA[ORIGINAL_CLIENT_NAME]]></deletedText>
    <insertedText><![CDATA[OldName]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2580" _type="Replace" date="Tue May 03 18:14:20 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1902" docExpressionCount="166" docLength="2114" endLine="19" insertionLength="15" int_docASTNodeCount="239" int_docActiveCodeLength="1887" int_docExpressionCount="164" int_docLength="2099" length="15" offset="705" startLine="19" starttimestamp="1651614162506" timestamp="1897693">
    <deletedText><![CDATA[ObservingServer]]></deletedText>
    <insertedText><![CDATA[ObservingServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2590" _type="Replace" date="Tue May 03 18:14:34 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1902" docExpressionCount="166" docLength="2112" endLine="54" insertionLength="13" int_docASTNodeCount="244" int_docActiveCodeLength="1902" int_docExpressionCount="166" int_docLength="2099" length="15" offset="1843" startLine="54" starttimestamp="1651614162506" timestamp="1911577">
    <deletedText><![CDATA[ObservingServer]]></deletedText>
    <insertedText><![CDATA[WatcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2592" _type="Replace" date="Tue May 03 18:14:34 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1900" docExpressionCount="166" docLength="2110" endLine="55" insertionLength="13" int_docASTNodeCount="243" int_docActiveCodeLength="1887" int_docExpressionCount="165" int_docLength="2097" length="15" offset="1942" startLine="55" starttimestamp="1651614162506" timestamp="1911589">
    <deletedText><![CDATA[ObservingServer]]></deletedText>
    <insertedText><![CDATA[WatcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2594" _type="Replace" date="Tue May 03 18:14:35 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1898" docExpressionCount="166" docLength="2108" endLine="27" insertionLength="13" int_docASTNodeCount="244" int_docActiveCodeLength="1885" int_docExpressionCount="166" int_docLength="2095" length="15" offset="995" startLine="27" starttimestamp="1651614162506" timestamp="1913468">
    <deletedText><![CDATA[ObservingServer]]></deletedText>
    <insertedText><![CDATA[WatcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2596" _type="Replace" date="Tue May 03 18:14:35 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1896" docExpressionCount="166" docLength="2106" endLine="27" insertionLength="13" int_docASTNodeCount="232" int_docActiveCodeLength="1883" int_docExpressionCount="157" int_docLength="2093" length="15" offset="975" startLine="27" starttimestamp="1651614162506" timestamp="1913478">
    <deletedText><![CDATA[ObservingServer]]></deletedText>
    <insertedText><![CDATA[WatcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2597" _type="Replace" date="Tue May 03 18:14:35 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1894" docExpressionCount="166" docLength="2104" endLine="26" insertionLength="13" int_docASTNodeCount="244" int_docActiveCodeLength="1881" int_docExpressionCount="166" int_docLength="2091" length="15" offset="885" startLine="26" starttimestamp="1651614162506" timestamp="1913492">
    <deletedText><![CDATA[ObservingServer]]></deletedText>
    <insertedText><![CDATA[WatcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2598" _type="Replace" date="Tue May 03 18:14:36 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1892" docExpressionCount="166" docLength="2102" endLine="19" insertionLength="13" int_docASTNodeCount="239" int_docActiveCodeLength="1879" int_docExpressionCount="164" int_docLength="2089" length="15" offset="705" startLine="19" starttimestamp="1651614162506" timestamp="1913507">
    <deletedText><![CDATA[ObservingServer]]></deletedText>
    <insertedText><![CDATA[WatcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2615" _type="Replace" date="Tue May 03 18:14:49 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1888" docExpressionCount="166" docLength="2098" endLine="28" insertionLength="10" int_docASTNodeCount="236" int_docActiveCodeLength="1878" int_docExpressionCount="160" int_docLength="2088" length="14" offset="1007" startLine="28" starttimestamp="1651614162506" timestamp="1927123">
    <deletedText><![CDATA[originalClient]]></deletedText>
    <insertedText><![CDATA[thatClient]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2617" _type="Replace" date="Tue May 03 18:14:49 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1884" docExpressionCount="166" docLength="2094" endLine="20" insertionLength="10" int_docASTNodeCount="239" int_docActiveCodeLength="1874" int_docExpressionCount="164" int_docLength="2084" length="14" offset="748" startLine="20" starttimestamp="1651614162506" timestamp="1927137">
    <deletedText><![CDATA[originalClient]]></deletedText>
    <insertedText><![CDATA[thatClient]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2619" _type="Replace" date="Tue May 03 18:14:51 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1880" docExpressionCount="166" docLength="2090" endLine="51" insertionLength="10" int_docASTNodeCount="243" int_docActiveCodeLength="1870" int_docExpressionCount="165" int_docLength="2080" length="14" offset="1685" startLine="51" starttimestamp="1651614162506" timestamp="1928920">
    <deletedText><![CDATA[originalClient]]></deletedText>
    <insertedText><![CDATA[thatClient]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2621" _type="Replace" date="Tue May 03 18:14:51 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1880" docExpressionCount="166" docLength="2086" endLine="54" insertionLength="10" int_docASTNodeCount="244" int_docActiveCodeLength="1880" int_docExpressionCount="166" int_docLength="2076" length="14" offset="1873" startLine="54" starttimestamp="1651614162506" timestamp="1928940">
    <deletedText><![CDATA[originalClient]]></deletedText>
    <insertedText><![CDATA[thatClient]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2622" _type="Replace" date="Tue May 03 18:14:51 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1876" docExpressionCount="166" docLength="2082" endLine="55" insertionLength="10" int_docASTNodeCount="243" int_docActiveCodeLength="1866" int_docExpressionCount="165" int_docLength="2072" length="14" offset="1954" startLine="55" starttimestamp="1651614162506" timestamp="1928952">
    <deletedText><![CDATA[originalClient]]></deletedText>
    <insertedText><![CDATA[thatClient]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2651" _type="Delete" date="Tue May 03 18:15:17 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1833" docExpressionCount="160" docLength="2039" endLine="37" length="43" offset="1140" startLine="36" starttimestamp="1651614162506" timestamp="1954614">
    <text><![CDATA[	
		System.out.println("PROPERTY CHANGE");]]></text>
  </DocumentChange>
  <DocumentChange __id="2655" _type="Insert" date="Tue May 03 18:15:21 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1837" docExpressionCount="160" docLength="2043" length="4" offset="1205" starttimestamp="1651614162506" timestamp="1958593">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2662" _type="Delete" date="Tue May 03 18:15:31 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1833" docExpressionCount="160" docLength="1998" endLine="46" length="45" offset="1352" startLine="45" starttimestamp="1651614162506" timestamp="1968764">
    <text><![CDATA[		//////This is fake just for passing tests
]]></text>
  </DocumentChange>
  <DocumentChange __id="2669" _type="Delete" date="Tue May 03 18:15:33 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1829" docExpressionCount="160" docLength="1988" endLine="48" length="10" offset="1480" startLine="47" starttimestamp="1651614162506" timestamp="1971121">
    <text><![CDATA[		//////
]]></text>
  </DocumentChange>
  <Command __id="2680" _type="PauseCommand" date="Tue May 03 18:15:41 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="1978682">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2159]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2682" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:15:42 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1979497" wrapSearch="false">
    <searchString><![CDATA[fake]]></searchString>
    <replaceString><![CDATA[placeHolder]]></replaceString>
  </Command>
  <Command __id="2684" _type="PauseCommand" date="Tue May 03 18:15:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1981335">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1838]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2683" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:15:43 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="1981335" wrapSearch="false">
    <searchString><![CDATA[fake]]></searchString>
    <replaceString><![CDATA[placeHolder]]></replaceString>
  </Command>
  <Command __id="2685" _type="ShellCommand" date="Tue May 03 18:15:44 EDT 2022" starttimestamp="1651614162506" timestamp="1981870" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2686" _type="MoveCaretCommand" caretOffset="1186" date="Tue May 03 18:15:45 EDT 2022" docOffset="1616" starttimestamp="1651614162506" timestamp="1982531" />
  <Command __id="2688" _type="PauseCommand" date="Tue May 03 18:15:46 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1984398">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1867]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2687" _type="ShellCommand" date="Tue May 03 18:15:46 EDT 2022" starttimestamp="1651614162506" timestamp="1984398" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2690" _type="PauseCommand" date="Tue May 03 18:15:57 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="1995482">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11084]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2689" _type="ShellCommand" date="Tue May 03 18:15:57 EDT 2022" starttimestamp="1651614162506" timestamp="1995482" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2691" _type="MoveCaretCommand" caretOffset="916" date="Tue May 03 18:15:58 EDT 2022" docOffset="1346" starttimestamp="1651614162506" timestamp="1995533" />
  <Command __id="2693" _type="PauseCommand" date="Tue May 03 18:15:59 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1997469">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1936]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2692" _type="SelectTextCommand" caretOffset="1403" date="Tue May 03 18:15:59 EDT 2022" end="1403" start="1239" starttimestamp="1651614162506" timestamp="1997469" />
  <Command __id="2695" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:16:00 EDT 2022" starttimestamp="1651614162506" timestamp="1997973" />
  <Command __id="2697" _type="PauseCommand" date="Tue May 03 18:16:01 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="1999463">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1490]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2696" _type="MoveCaretCommand" caretOffset="1130" date="Tue May 03 18:16:01 EDT 2022" docOffset="1560" starttimestamp="1651614162506" timestamp="1999463" />
  <Command __id="2698" _type="SelectTextCommand" caretOffset="1136" date="Tue May 03 18:16:02 EDT 2022" end="1136" start="1126" starttimestamp="1651614162506" timestamp="1999617" />
  <Command __id="2699" _type="CopyCommand" date="Tue May 03 18:16:02 EDT 2022" starttimestamp="1651614162506" timestamp="2000403" />
  <Command __id="2701" _type="ShellCommand" date="Tue May 03 18:16:03 EDT 2022" starttimestamp="1651614162506" timestamp="2000642" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2702" _type="PasteCommand" date="Tue May 03 18:16:03 EDT 2022" starttimestamp="1651614162506" timestamp="2000771" />
  <Command __id="2704" _type="PauseCommand" date="Tue May 03 18:16:17 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="2015404">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[14632]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2709" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:16:18 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="2016040" wrapSearch="false">
    <searchString><![CDATA[newCommand]]></searchString>
    <replaceString><![CDATA[thisCommand]]></replaceString>
  </Command>
  <Command __id="2711" _type="PauseCommand" date="Tue May 03 18:16:21 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2018927">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2887]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="2710" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:16:21 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="2018927" wrapSearch="false">
    <searchString><![CDATA[newCommand]]></searchString>
    <replaceString><![CDATA[thisCommand]]></replaceString>
  </Command>
  <Command __id="2712" _type="ShellCommand" date="Tue May 03 18:16:22 EDT 2022" starttimestamp="1651614162506" timestamp="2019722" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2713" _type="MoveCaretCommand" caretOffset="1090" date="Tue May 03 18:16:23 EDT 2022" docOffset="1520" starttimestamp="1651614162506" timestamp="2020706" />
  <Command __id="2714" _type="SelectTextCommand" caretOffset="1139" date="Tue May 03 18:16:23 EDT 2022" end="1139" start="1091" starttimestamp="1651614162506" timestamp="2020846" />
  <Command __id="2715" _type="SelectTextCommand" caretOffset="1143" date="Tue May 03 18:16:23 EDT 2022" end="1143" start="1070" starttimestamp="1651614162506" timestamp="2020962" />
  <Command __id="2717" _type="PauseCommand" date="Tue May 03 18:16:24 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2021991">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1029]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2718" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:16:24 EDT 2022" starttimestamp="1651614162506" timestamp="2021999" />
  <Command __id="2720" _type="PauseCommand" date="Tue May 03 18:16:26 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2024007">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2008]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2719" _type="MoveCaretCommand" caretOffset="1217" date="Tue May 03 18:16:26 EDT 2022" docOffset="1647" starttimestamp="1651614162506" timestamp="2024007" />
  <Command __id="2721" _type="SelectTextCommand" caretOffset="1222" date="Tue May 03 18:16:26 EDT 2022" end="1222" start="1212" starttimestamp="1651614162506" timestamp="2024156" />
  <Command __id="2723" _type="PauseCommand" date="Tue May 03 18:16:29 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2027142">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2986]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2722" _type="MoveCaretCommand" caretOffset="1156" date="Tue May 03 18:16:29 EDT 2022" docOffset="1586" starttimestamp="1651614162506" timestamp="2027142" />
  <Command __id="2725" _type="PauseCommand" date="Tue May 03 18:16:30 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2028360">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1218]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2724" _type="ShellCommand" date="Tue May 03 18:16:30 EDT 2022" starttimestamp="1651614162506" timestamp="2028360" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2726" _type="ShellCommand" date="Tue May 03 18:16:30 EDT 2022" starttimestamp="1651614162506" timestamp="2028434" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2730" _type="PauseCommand" date="Tue May 03 18:16:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2030034">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1585]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2729" _type="ShellCommand" date="Tue May 03 18:16:32 EDT 2022" starttimestamp="1651614162506" timestamp="2030034" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2731" _type="ShellCommand" date="Tue May 03 18:16:32 EDT 2022" starttimestamp="1651614162506" timestamp="2030126" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2735" _type="PauseCommand" date="Tue May 03 18:16:33 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2031306">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1167]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2734" _type="ShellCommand" date="Tue May 03 18:16:33 EDT 2022" starttimestamp="1651614162506" timestamp="2031306" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2736" _type="ShellCommand" date="Tue May 03 18:16:33 EDT 2022" starttimestamp="1651614162506" timestamp="2031406" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2743" _type="PauseCommand" date="Tue May 03 18:16:35 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2032781">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1339]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2742" _type="ShellCommand" date="Tue May 03 18:16:35 EDT 2022" starttimestamp="1651614162506" timestamp="2032781" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2744" _type="ShellCommand" date="Tue May 03 18:16:35 EDT 2022" starttimestamp="1651614162506" timestamp="2032835" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2747" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:16:36 EDT 2022" starttimestamp="1651614162506" timestamp="2033569" />
  <Command __id="2748" _type="EclipseCommand" commandID="" date="Tue May 03 18:16:36 EDT 2022" starttimestamp="1651614162506" timestamp="2033709" />
  <Command __id="2749" _type="EclipseCommand" commandID="" date="Tue May 03 18:16:36 EDT 2022" starttimestamp="1651614162506" timestamp="2033753" />
  <Command __id="2751" _type="PauseCommand" date="Tue May 03 18:16:41 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2038862">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5109]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2750" _type="SelectTextCommand" caretOffset="1362" date="Tue May 03 18:16:41 EDT 2022" end="1362" start="638" starttimestamp="1651614162506" timestamp="2038862" />
  <Command __id="2753" _type="PauseCommand" date="Tue May 03 18:16:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2040724">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1862]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2754" _type="CutCommand" date="Tue May 03 18:16:43 EDT 2022" starttimestamp="1651614162506" timestamp="2040743" />
  <Command __id="2756" _type="PauseCommand" date="Tue May 03 18:16:46 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2043900">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[3156]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2755" _type="MoveCaretCommand" caretOffset="387" date="Tue May 03 18:16:46 EDT 2022" docOffset="817" starttimestamp="1651614162506" timestamp="2043899" />
  <Command __id="2758" _type="PauseCommand" date="Tue May 03 18:16:47 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2045091">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1192]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2759" _type="PasteCommand" date="Tue May 03 18:16:47 EDT 2022" starttimestamp="1651614162506" timestamp="2045104" />
  <Command __id="2760" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:16:48 EDT 2022" starttimestamp="1651614162506" timestamp="2046084" />
  <Command __id="2761" _type="EclipseCommand" commandID="" date="Tue May 03 18:16:48 EDT 2022" starttimestamp="1651614162506" timestamp="2046174" />
  <Command __id="2762" _type="EclipseCommand" commandID="" date="Tue May 03 18:16:48 EDT 2022" starttimestamp="1651614162506" timestamp="2046188" />
  <Command __id="2764" _type="PauseCommand" date="Tue May 03 18:16:59 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="2056851">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10663]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2763" _type="MoveCaretCommand" caretOffset="238" date="Tue May 03 18:16:59 EDT 2022" docOffset="668" starttimestamp="1651614162506" timestamp="2056851" />
  <Command __id="2765" _type="SelectTextCommand" caretOffset="242" date="Tue May 03 18:16:59 EDT 2022" end="242" start="235" starttimestamp="1651614162506" timestamp="2056997" />
  <Command __id="2767" _type="InsertStringCommand" date="Tue May 03 18:17:00 EDT 2022" starttimestamp="1651614162506" timestamp="2057861" timestamp2="2057861">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2769" _type="UndoCommand" date="Tue May 03 18:17:01 EDT 2022" starttimestamp="1651614162506" timestamp="2058676" />
  <Command __id="2770" _type="CopyCommand" date="Tue May 03 18:17:02 EDT 2022" starttimestamp="1651614162506" timestamp="2059608" />
  <Command __id="2772" _type="ShellCommand" date="Tue May 03 18:17:02 EDT 2022" starttimestamp="1651614162506" timestamp="2059882" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2774" _type="PauseCommand" date="Tue May 03 18:17:03 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2061400">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1518]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2773" _type="PasteCommand" date="Tue May 03 18:17:03 EDT 2022" starttimestamp="1651614162506" timestamp="2061400" />
  <Command __id="2776" _type="PauseCommand" date="Tue May 03 18:17:06 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2064270">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2870]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2777" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:17:07 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="2064885" wrapSearch="false">
    <searchString><![CDATA[OldName]]></searchString>
    <replaceString><![CDATA[oldName]]></replaceString>
  </Command>
  <Command __id="2779" _type="PauseCommand" date="Tue May 03 18:17:09 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2067084">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2199]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2781" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:17:10 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="2067634" wrapSearch="false">
    <searchString><![CDATA[OldName]]></searchString>
    <replaceString><![CDATA[oldName]]></replaceString>
  </Command>
  <Command __id="2782" _type="ShellCommand" date="Tue May 03 18:17:10 EDT 2022" starttimestamp="1651614162506" timestamp="2068205" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2784" _type="PauseCommand" date="Tue May 03 18:17:12 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2069741">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1536]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2783" _type="MoveCaretCommand" caretOffset="277" date="Tue May 03 18:17:12 EDT 2022" docOffset="707" starttimestamp="1651614162506" timestamp="2069741" />
  <Command __id="2785" _type="SelectTextCommand" caretOffset="288" date="Tue May 03 18:17:12 EDT 2022" end="288" start="275" starttimestamp="1651614162506" timestamp="2069873" />
  <Command __id="2786" _type="CopyCommand" date="Tue May 03 18:17:13 EDT 2022" starttimestamp="1651614162506" timestamp="2070511" />
  <Command __id="2788" _type="ShellCommand" date="Tue May 03 18:17:13 EDT 2022" starttimestamp="1651614162506" timestamp="2070757" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2789" _type="PasteCommand" date="Tue May 03 18:17:13 EDT 2022" starttimestamp="1651614162506" timestamp="2070858" />
  <Command __id="2791" _type="PauseCommand" date="Tue May 03 18:17:14 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2072313">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1455]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2790" _type="PasteCommand" date="Tue May 03 18:17:14 EDT 2022" starttimestamp="1651614162506" timestamp="2072313" />
  <DocumentChange __id="2679" _type="Replace" date="Tue May 03 18:15:41 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1836" docExpressionCount="160" docLength="1995" endLine="46" insertionLength="11" int_docASTNodeCount="236" int_docActiveCodeLength="1825" int_docExpressionCount="159" int_docLength="1984" length="4" offset="1455" startLine="46" starttimestamp="1651614162506" timestamp="1978682">
    <deletedText><![CDATA[fake]]></deletedText>
    <insertedText><![CDATA[placeHolder]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2681" _type="Replace" date="Tue May 03 18:15:41 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1843" docExpressionCount="160" docLength="2002" endLine="45" insertionLength="11" int_docASTNodeCount="235" int_docActiveCodeLength="1832" int_docExpressionCount="160" int_docLength="1991" length="4" offset="1396" startLine="45" starttimestamp="1651614162506" timestamp="1978695">
    <deletedText><![CDATA[fake]]></deletedText>
    <insertedText><![CDATA[placeHolder]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2694" _type="Delete" date="Tue May 03 18:16:00 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1838" docExpressionCount="160" docLength="1838" endLine="52" length="164" offset="1669" startLine="51" starttimestamp="1651614162506" timestamp="1997965">
    <text><![CDATA[//TODO need the client type to be that of a simulationParameterBean
			//WatcherServer.broadcastIPCMechanism(IPCMechanism, thatClient, aProposalNumber, broadcast);]]></text>
  </DocumentChange>
  <DocumentChange __id="2703" _type="Replace" date="Tue May 03 18:16:17 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1839" docExpressionCount="160" docLength="1839" endLine="39" insertionLength="11" int_docASTNodeCount="235" int_docActiveCodeLength="1828" int_docExpressionCount="160" int_docLength="1828" length="10" offset="1220" startLine="39" starttimestamp="1651614162506" timestamp="2015403">
    <deletedText><![CDATA[newCommand]]></deletedText>
    <insertedText><![CDATA[thisCommand]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2705" _type="Replace" date="Tue May 03 18:16:17 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1840" docExpressionCount="160" docLength="1840" endLine="40" insertionLength="11" int_docASTNodeCount="237" int_docActiveCodeLength="1829" int_docExpressionCount="160" int_docLength="1829" length="10" offset="1304" startLine="40" starttimestamp="1651614162506" timestamp="2015417">
    <deletedText><![CDATA[newCommand]]></deletedText>
    <insertedText><![CDATA[thisCommand]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2706" _type="Replace" date="Tue May 03 18:16:17 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1841" docExpressionCount="160" docLength="1841" endLine="48" insertionLength="11" int_docASTNodeCount="235" int_docActiveCodeLength="1830" int_docExpressionCount="158" int_docLength="1830" length="10" offset="1558" startLine="48" starttimestamp="1651614162506" timestamp="2015432">
    <deletedText><![CDATA[newCommand]]></deletedText>
    <insertedText><![CDATA[thisCommand]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2707" _type="Replace" date="Tue May 03 18:16:17 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1842" docExpressionCount="160" docLength="1842" endLine="49" insertionLength="11" int_docASTNodeCount="237" int_docActiveCodeLength="1831" int_docExpressionCount="160" int_docLength="1831" length="10" offset="1646" startLine="49" starttimestamp="1651614162506" timestamp="2015447">
    <deletedText><![CDATA[newCommand]]></deletedText>
    <insertedText><![CDATA[thisCommand]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2708" _type="Replace" date="Tue May 03 18:16:17 EDT 2022" docASTNodeCount="237" docActiveCodeLength="1843" docExpressionCount="160" docLength="1843" endLine="52" insertionLength="11" int_docASTNodeCount="236" int_docActiveCodeLength="1832" int_docExpressionCount="159" int_docLength="1832" length="10" offset="1702" startLine="52" starttimestamp="1651614162506" timestamp="2015460">
    <deletedText><![CDATA[newCommand]]></deletedText>
    <insertedText><![CDATA[thisCommand]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2716" _type="Delete" date="Tue May 03 18:16:24 EDT 2022" docASTNodeCount="228" docActiveCodeLength="1770" docExpressionCount="152" docLength="1770" endLine="49" length="73" offset="1500" startLine="48" starttimestamp="1651614162506" timestamp="2021991">
    <text><![CDATA[		System.out.println("Command being sent from coupler:" + thisCommand);
]]></text>
  </DocumentChange>
  <DocumentChange __id="2727" _type="Insert" date="Tue May 03 18:16:30 EDT 2022" docASTNodeCount="229" docActiveCodeLength="1776" docExpressionCount="152" docLength="1776" length="6" offset="1356" repeat="2" starttimestamp="1651614162506" timestamp="2028449" timestamp2="2028452">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2732" _type="Insert" date="Tue May 03 18:16:32 EDT 2022" docASTNodeCount="230" docActiveCodeLength="1782" docExpressionCount="152" docLength="1782" length="6" offset="1213" repeat="2" starttimestamp="1651614162506" timestamp="2030139" timestamp2="2030142">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2737" _type="Delete" date="Tue May 03 18:16:33 EDT 2022" docASTNodeCount="230" docActiveCodeLength="1774" docExpressionCount="152" docLength="1774" endLine="37" length="8" offset="1197" startLine="37" starttimestamp="1651614162506" timestamp="2031430">
    <text><![CDATA[ return;]]></text>
  </DocumentChange>
  <DocumentChange __id="2738" _type="Insert" date="Tue May 03 18:16:33 EDT 2022" docASTNodeCount="231" docActiveCodeLength="1793" docExpressionCount="152" docLength="1793" length="19" offset="1197" repeat="4" starttimestamp="1651614162506" timestamp="2031442" timestamp2="2031457">
    <text><![CDATA[ {
			return;
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="2745" _type="Insert" date="Tue May 03 18:16:35 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" length="6" offset="1107" repeat="2" starttimestamp="1651614162506" timestamp="2032853" timestamp2="2032857">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2752" _type="Delete" date="Tue May 03 18:16:43 EDT 2022" docASTNodeCount="145" docActiveCodeLength="1075" docExpressionCount="100" docLength="1075" endLine="59" length="724" offset="1068" startLine="34" starttimestamp="1651614162506" timestamp="2040724">
    <text><![CDATA[@Override
	public void propertyChange(final PropertyChangeEvent anEvent) {
	
		if (!anEvent.getPropertyName().equals("InputString")) {
			return;
		}
		
		final String thisCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, thisCommand);
		if (nio) {
			return;
		}
		
		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();
		placeHolder.getIPCMechanism();
		
		RemoteProposeRequestSent.newCase(thatClient, OldName, aProposalNumber, thisCommand);
		try {
			
			WatcherServer.broadcast(thisCommand, thatClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="2757" _type="Replace" date="Tue May 03 18:16:47 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="25" insertionLength="725" int_docASTNodeCount="145" int_docActiveCodeLength="1074" int_docExpressionCount="100" int_docLength="1074" length="1" offset="816" startLine="25" starttimestamp="1651614162506" timestamp="2045091">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public void propertyChange(final PropertyChangeEvent anEvent) {
	
		if (!anEvent.getPropertyName().equals("InputString")) {
			return;
		}
		
		final String thisCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, thisCommand);
		if (nio) {
			return;
		}
		
		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();
		placeHolder.getIPCMechanism();
		
		RemoteProposeRequestSent.newCase(thatClient, OldName, aProposalNumber, thisCommand);
		try {
			
			WatcherServer.broadcast(thisCommand, thatClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2766" _type="Replace" date="Tue May 03 18:17:00 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1793" docExpressionCount="152" docLength="1793" endLine="17" insertionLength="1" int_docASTNodeCount="227" int_docActiveCodeLength="1792" int_docExpressionCount="150" int_docLength="1792" length="7" offset="665" startLine="17" starttimestamp="1651614162506" timestamp="2057850">
    <deletedText><![CDATA[OldName]]></deletedText>
    <insertedText><![CDATA[o]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2768" _type="Replace" date="Tue May 03 18:17:01 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="17" insertionLength="7" int_docASTNodeCount="227" int_docActiveCodeLength="1792" int_docExpressionCount="150" int_docLength="1792" length="1" offset="665" startLine="17" starttimestamp="1651614162506" timestamp="2058667">
    <deletedText><![CDATA[o]]></deletedText>
    <insertedText><![CDATA[OldName]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2775" _type="Replace" date="Tue May 03 18:17:06 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="17" insertionLength="7" int_docASTNodeCount="227" int_docActiveCodeLength="1792" int_docExpressionCount="150" int_docLength="1792" length="7" offset="665" startLine="17" starttimestamp="1651614162506" timestamp="2064270">
    <deletedText><![CDATA[OldName]]></deletedText>
    <insertedText><![CDATA[oldName]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2778" _type="Replace" date="Tue May 03 18:17:09 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="41" insertionLength="7" int_docASTNodeCount="231" int_docActiveCodeLength="1792" int_docExpressionCount="151" int_docLength="1792" length="7" offset="1325" startLine="41" starttimestamp="1651614162506" timestamp="2067084">
    <deletedText><![CDATA[OldName]]></deletedText>
    <insertedText><![CDATA[oldName]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2780" _type="Replace" date="Tue May 03 18:17:09 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="54" insertionLength="7" int_docASTNodeCount="228" int_docActiveCodeLength="1792" int_docExpressionCount="149" int_docLength="1792" length="7" offset="1752" startLine="54" starttimestamp="1651614162506" timestamp="2067099">
    <deletedText><![CDATA[OldName]]></deletedText>
    <insertedText><![CDATA[oldName]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2792" _type="Replace" date="Tue May 03 18:17:18 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="44" insertionLength="13" int_docASTNodeCount="231" int_docActiveCodeLength="1786" int_docExpressionCount="151" int_docLength="1786" length="13" offset="1383" startLine="44" starttimestamp="1651614162506" timestamp="2076073">
    <deletedText><![CDATA[WatcherServer]]></deletedText>
    <insertedText><![CDATA[watcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2794" _type="Replace" date="Tue May 03 18:17:18 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="51" insertionLength="13" int_docASTNodeCount="232" int_docActiveCodeLength="1786" int_docExpressionCount="152" int_docLength="1786" length="13" offset="1603" startLine="51" starttimestamp="1651614162506" timestamp="2076085">
    <deletedText><![CDATA[WatcherServer]]></deletedText>
    <insertedText><![CDATA[watcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2795" _type="Replace" date="Tue May 03 18:17:18 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="52" insertionLength="13" int_docASTNodeCount="220" int_docActiveCodeLength="1786" int_docExpressionCount="143" int_docLength="1786" length="13" offset="1691" startLine="52" starttimestamp="1651614162506" timestamp="2076098">
    <deletedText><![CDATA[WatcherServer]]></deletedText>
    <insertedText><![CDATA[watcherServer]]></insertedText>
  </DocumentChange>
  <Command __id="2793" _type="PauseCommand" date="Tue May 03 18:17:18 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2076074">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3760]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2797" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:17:19 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="2076843" wrapSearch="false">
    <searchString><![CDATA[WatcherServer]]></searchString>
    <replaceString><![CDATA[watcherServer]]></replaceString>
  </Command>
  <Command __id="2799" _type="PauseCommand" date="Tue May 03 18:17:20 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2078189">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1346]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2800" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:17:21 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651614162506" timestamp="2078783" wrapSearch="false">
    <searchString><![CDATA[WatcherServer]]></searchString>
    <replaceString><![CDATA[watcherServer]]></replaceString>
  </Command>
  <Command __id="2801" _type="ShellCommand" date="Tue May 03 18:17:22 EDT 2022" starttimestamp="1651614162506" timestamp="2079610" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2802" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:17:22 EDT 2022" starttimestamp="1651614162506" timestamp="2080267" />
  <Command __id="2803" _type="EclipseCommand" commandID="" date="Tue May 03 18:17:22 EDT 2022" starttimestamp="1651614162506" timestamp="2080355" />
  <Command __id="2804" _type="EclipseCommand" commandID="" date="Tue May 03 18:17:22 EDT 2022" starttimestamp="1651614162506" timestamp="2080413" />
  <Command __id="2806" _type="PauseCommand" date="Tue May 03 18:17:26 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2084438">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4025]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2805" _type="MoveCaretCommand" caretOffset="396" date="Tue May 03 18:17:26 EDT 2022" docOffset="826" starttimestamp="1651614162506" timestamp="2084438" />
  <Command __id="2808" _type="PauseCommand" date="Tue May 03 18:17:29 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2087127">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2688]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2807" _type="ShellCommand" date="Tue May 03 18:17:29 EDT 2022" starttimestamp="1651614162506" timestamp="2087126" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2809" _type="ShellCommand" date="Tue May 03 18:17:29 EDT 2022" starttimestamp="1651614162506" timestamp="2087222" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2813" _type="PauseCommand" date="Tue May 03 18:17:31 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2088684">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1432]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2812" _type="ShellCommand" date="Tue May 03 18:17:31 EDT 2022" starttimestamp="1651614162506" timestamp="2088684" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2814" _type="ShellCommand" date="Tue May 03 18:17:31 EDT 2022" starttimestamp="1651614162506" timestamp="2088805" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2817" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:17:32 EDT 2022" starttimestamp="1651614162506" timestamp="2089583" />
  <Command __id="2818" _type="EclipseCommand" commandID="" date="Tue May 03 18:17:32 EDT 2022" starttimestamp="1651614162506" timestamp="2089673" />
  <Command __id="2819" _type="EclipseCommand" commandID="" date="Tue May 03 18:17:32 EDT 2022" starttimestamp="1651614162506" timestamp="2089688" />
  <Command __id="2821" _type="PauseCommand" date="Tue May 03 18:17:35 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2093041">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3353]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2820" _type="MoveCaretCommand" caretOffset="1376" date="Tue May 03 18:17:35 EDT 2022" docOffset="1806" starttimestamp="1651614162506" timestamp="2093041" />
  <Command __id="2826" _type="PauseCommand" date="Tue May 03 18:17:40 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2098368">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1761]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="2825" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:17:40 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2098368" type="Run" />
  <Command __id="2827" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:17:40 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2098368" type="Run" />
  <Command __id="2829" _type="PauseCommand" date="Tue May 03 18:17:45 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2103363">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[4995]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2828" _type="MoveCaretCommand" caretOffset="437" date="Tue May 03 18:17:45 EDT 2022" docOffset="556" starttimestamp="1651614162506" timestamp="2103363" />
  <Command __id="2830" _type="ShellCommand" date="Tue May 03 18:17:46 EDT 2022" starttimestamp="1651614162506" timestamp="2104211" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2831" _type="ShellCommand" date="Tue May 03 18:17:47 EDT 2022" starttimestamp="1651614162506" timestamp="2104847" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2833" _type="PauseCommand" date="Tue May 03 18:17:48 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2105923">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1076]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2834" _type="MoveCaretCommand" caretOffset="1376" date="Tue May 03 18:17:48 EDT 2022" docOffset="1806" starttimestamp="1651614162506" timestamp="2106031" />
  <Command __id="2836" _type="PauseCommand" date="Tue May 03 18:17:57 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2115114">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9083]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2837" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:17:57 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2115259" />
  <Command __id="2839" _type="PauseCommand" date="Tue May 03 18:18:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2117878">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2618]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2838" _type="SelectTextCommand" caretOffset="355" date="Tue May 03 18:18:00 EDT 2022" end="355" start="222" starttimestamp="1651614162506" timestamp="2117877" />
  <Command __id="2841" _type="CutCommand" date="Tue May 03 18:18:01 EDT 2022" starttimestamp="1651614162506" timestamp="2118502" />
  <Command __id="2842" _type="MoveCaretCommand" caretOffset="583" date="Tue May 03 18:18:01 EDT 2022" docOffset="932" starttimestamp="1651614162506" timestamp="2119066" />
  <Command __id="2844" _type="InsertStringCommand" date="Tue May 03 18:18:02 EDT 2022" starttimestamp="1651614162506" timestamp="2119926" timestamp2="2119926">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2846" _type="PasteCommand" date="Tue May 03 18:18:02 EDT 2022" starttimestamp="1651614162506" timestamp="2120382" />
  <Command __id="2847" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:18:03 EDT 2022" starttimestamp="1651614162506" timestamp="2121101" />
  <Command __id="2848" _type="EclipseCommand" commandID="" date="Tue May 03 18:18:03 EDT 2022" starttimestamp="1651614162506" timestamp="2121190" />
  <Command __id="2849" _type="EclipseCommand" commandID="" date="Tue May 03 18:18:03 EDT 2022" starttimestamp="1651614162506" timestamp="2121201" />
  <Command __id="2851" _type="PauseCommand" date="Tue May 03 18:18:04 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2122489">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1288]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2850" _type="MoveCaretCommand" caretOffset="236" date="Tue May 03 18:18:04 EDT 2022" docOffset="585" starttimestamp="1651614162506" timestamp="2122489" />
  <Command __id="2852" _type="SelectTextCommand" caretOffset="243" date="Tue May 03 18:18:05 EDT 2022" end="243" start="232" starttimestamp="1651614162506" timestamp="2122622" />
  <Command __id="2854" _type="PauseCommand" date="Tue May 03 18:18:07 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2125372">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2750]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2853" _type="MoveCaretCommand" caretOffset="320" date="Tue May 03 18:18:07 EDT 2022" docOffset="669" starttimestamp="1651614162506" timestamp="2125372" />
  <Command __id="2855" _type="SelectTextCommand" caretOffset="329" date="Tue May 03 18:18:08 EDT 2022" end="329" start="313" starttimestamp="1651614162506" timestamp="2125506" />
  <Command __id="2856" _type="ConsoleOutput" date="Tue May 03 18:18:08 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2126039" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21504
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14240"), Diff(INSERT,"21504"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2858" _type="PauseCommand" date="Tue May 03 18:18:11 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2129090">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3051]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2859" _type="InsertStringCommand" date="Tue May 03 18:18:11 EDT 2022" starttimestamp="1651614162506" timestamp="2129102" timestamp2="2129102">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2861" _type="InsertStringCommand" date="Tue May 03 18:18:11 EDT 2022" starttimestamp="1651614162506" timestamp="2129188" timestamp2="2129188">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2863" _type="InsertStringCommand" date="Tue May 03 18:18:11 EDT 2022" starttimestamp="1651614162506" timestamp="2129345" timestamp2="2129345">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="2865" _type="InsertStringCommand" date="Tue May 03 18:18:12 EDT 2022" starttimestamp="1651614162506" timestamp="2129527" timestamp2="2129527">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2867" _type="InsertStringCommand" date="Tue May 03 18:18:12 EDT 2022" starttimestamp="1651614162506" timestamp="2129665" timestamp2="2129665">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:18:12 EDT 2022" starttimestamp="1651614162506" timestamp="2130014" />
  <Command __id="2871" _type="InsertStringCommand" date="Tue May 03 18:18:12 EDT 2022" starttimestamp="1651614162506" timestamp="2130247" timestamp2="2130247">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2873" _type="InsertStringCommand" date="Tue May 03 18:18:12 EDT 2022" starttimestamp="1651614162506" timestamp="2130307" timestamp2="2130307">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2875" _type="InsertStringCommand" date="Tue May 03 18:18:13 EDT 2022" starttimestamp="1651614162506" timestamp="2130506" timestamp2="2130506">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2877" _type="InsertStringCommand" date="Tue May 03 18:18:13 EDT 2022" starttimestamp="1651614162506" timestamp="2130610" timestamp2="2130610">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2878" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:18:13 EDT 2022" starttimestamp="1651614162506" timestamp="2131272" />
  <Command __id="2879" _type="EclipseCommand" commandID="" date="Tue May 03 18:18:13 EDT 2022" starttimestamp="1651614162506" timestamp="2131360" />
  <Command __id="2880" _type="EclipseCommand" commandID="" date="Tue May 03 18:18:13 EDT 2022" starttimestamp="1651614162506" timestamp="2131421" />
  <Command __id="2882" _type="PauseCommand" date="Tue May 03 18:18:20 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2137697">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6276]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2881" _type="MoveCaretCommand" caretOffset="573" date="Tue May 03 18:18:20 EDT 2022" docOffset="922" starttimestamp="1651614162506" timestamp="2137697" />
  <Command __id="2883" _type="ShellCommand" date="Tue May 03 18:18:20 EDT 2022" starttimestamp="1651614162506" timestamp="2138439" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2885" _type="PauseCommand" date="Tue May 03 18:18:22 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2140125">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1686]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2884" _type="ConsoleOutput" date="Tue May 03 18:18:22 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2140125" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14077
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"21504"), Diff(INSERT,"14077"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2887" _type="PauseCommand" date="Tue May 03 18:18:36 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="2154348">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14223]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2886" _type="ConsoleOutput" date="Tue May 03 18:18:36 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2154348" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14270
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):14"), Diff(DELETE,"077"), Diff(INSERT,"270"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2889" _type="PauseCommand" date="Tue May 03 18:19:48 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="2226211">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[71863]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2888" _type="ConsoleOutput" date="Tue May 03 18:19:48 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2226211" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67571
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14270"), Diff(INSERT,"67571"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2891" _type="PauseCommand" date="Tue May 03 18:19:58 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2236125">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9914]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2890" _type="ConsoleOutput" date="Tue May 03 18:19:58 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2236125" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67571"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2893" _type="PauseCommand" date="Tue May 03 18:20:59 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="2296583">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[60458]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2892" _type="ShellCommand" date="Tue May 03 18:20:59 EDT 2022" starttimestamp="1651614162506" timestamp="2296583" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2895" _type="PauseCommand" date="Tue May 03 18:21:01 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2298556">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1973]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2894" _type="ShellCommand" date="Tue May 03 18:21:01 EDT 2022" starttimestamp="1651614162506" timestamp="2298556" type="ECLIPSE_MINIMIZED" />
  <Command __id="2896" _type="ShellCommand" date="Tue May 03 18:21:01 EDT 2022" starttimestamp="1651614162506" timestamp="2298571" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2898" _type="PauseCommand" date="Tue May 03 18:21:41 EDT 2022" range="30s-1m" starttimestamp="1651614162506" timestamp="2338745">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[40174]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2897" _type="ConsoleOutput" date="Tue May 03 18:21:41 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2338745" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112580
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112580¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="2900" _type="PauseCommand" date="Tue May 03 18:22:03 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="2361365">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22620]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2899" _type="ConsoleOutput" date="Tue May 03 18:22:03 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2361365" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22566
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"112580¶Number of traces > 800  turning tracing off"), Diff(INSERT,"22566"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2902" _type="PauseCommand" date="Tue May 03 18:22:05 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2362581">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1216]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2901" _type="ShellCommand" date="Tue May 03 18:22:05 EDT 2022" starttimestamp="1651614162506" timestamp="2362581" type="ECLIPSE_MAXIMIZED" />
  <Command __id="2903" _type="ShellCommand" date="Tue May 03 18:22:05 EDT 2022" starttimestamp="1651614162506" timestamp="2362619" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2905" _type="PauseCommand" date="Tue May 03 18:22:08 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2365659">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3040]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2904" _type="ShellCommand" date="Tue May 03 18:22:08 EDT 2022" starttimestamp="1651614162506" timestamp="2365659" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2906" _type="ShellCommand" date="Tue May 03 18:22:08 EDT 2022" starttimestamp="1651614162506" timestamp="2366464" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2907" _type="ShellCommand" date="Tue May 03 18:22:09 EDT 2022" starttimestamp="1651614162506" timestamp="2367161" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2909" _type="PauseCommand" date="Tue May 03 18:22:26 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="2383893">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[16732]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2908" _type="ConsoleOutput" date="Tue May 03 18:22:26 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2383893" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22572
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"66"), Diff(INSERT,"72"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2911" _type="PauseCommand" date="Tue May 03 18:22:49 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="2406524">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22631]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2910" _type="ConsoleOutput" date="Tue May 03 18:22:49 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2406524" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22579
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2257"), Diff(DELETE,"2"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2913" _type="PauseCommand" date="Tue May 03 18:23:11 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="2429090">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22566]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2912" _type="ConsoleOutput" date="Tue May 03 18:23:11 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2429090" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22563
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"79"), Diff(INSERT,"63"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2917" _type="PauseCommand" date="Tue May 03 18:26:01 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2599124">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8849]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="2916" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:26:01 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2599124" type="Run" />
  <Command __id="2918" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:26:01 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2599124" type="Run" />
  <Command __id="2920" _type="PauseCommand" date="Tue May 03 18:26:03 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2600747">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1623]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2919" _type="ShellCommand" date="Tue May 03 18:26:03 EDT 2022" starttimestamp="1651614162506" timestamp="2600747" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2922" _type="PauseCommand" date="Tue May 03 18:26:04 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2602192">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1445]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2921" _type="ShellCommand" date="Tue May 03 18:26:04 EDT 2022" starttimestamp="1651614162506" timestamp="2602192" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2923" _type="MoveCaretCommand" caretOffset="323" date="Tue May 03 18:26:04 EDT 2022" docOffset="672" starttimestamp="1651614162506" timestamp="2602468" />
  <Command __id="2925" _type="PauseCommand" date="Tue May 03 18:26:06 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2603702">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1234]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2924" _type="ShellCommand" date="Tue May 03 18:26:06 EDT 2022" starttimestamp="1651614162506" timestamp="2603702" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2927" _type="PauseCommand" date="Tue May 03 18:26:07 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2604921">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1219]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2926" _type="ShellCommand" date="Tue May 03 18:26:07 EDT 2022" starttimestamp="1651614162506" timestamp="2604921" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2929" _type="PauseCommand" date="Tue May 03 18:26:08 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2606079">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1158]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2930" _type="MoveCaretCommand" caretOffset="437" date="Tue May 03 18:26:08 EDT 2022" docOffset="556" starttimestamp="1651614162506" timestamp="2606210" />
  <Command __id="2932" _type="PauseCommand" date="Tue May 03 18:26:09 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2607213">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1003]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2931" _type="ShellCommand" date="Tue May 03 18:26:09 EDT 2022" starttimestamp="1651614162506" timestamp="2607213" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2934" _type="PauseCommand" date="Tue May 03 18:26:11 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2609404">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2191]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2933" _type="ShellCommand" date="Tue May 03 18:26:11 EDT 2022" starttimestamp="1651614162506" timestamp="2609404" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2936" _type="PauseCommand" date="Tue May 03 18:26:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2612376">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2972]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2935" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue May 03 18:26:14 EDT 2022" starttimestamp="1651614162506" timestamp="2612376" />
  <Command __id="2937" _type="ShellCommand" date="Tue May 03 18:26:14 EDT 2022" starttimestamp="1651614162506" timestamp="2612418" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2939" _type="PauseCommand" date="Tue May 03 18:26:16 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2614047">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1629]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2938" _type="ShellCommand" date="Tue May 03 18:26:16 EDT 2022" starttimestamp="1651614162506" timestamp="2614047" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2941" _type="PauseCommand" date="Tue May 03 18:26:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2616795">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2748]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2942" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:26:19 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2616969" />
  <Command __id="2944" _type="MoveCaretCommand" caretOffset="323" date="Tue May 03 18:26:20 EDT 2022" docOffset="672" starttimestamp="1651614162506" timestamp="2617845" />
  <Command __id="2945" _type="MoveCaretCommand" caretOffset="575" date="Tue May 03 18:26:21 EDT 2022" docOffset="924" starttimestamp="1651614162506" timestamp="2618673" />
  <Command __id="2947" _type="PauseCommand" date="Tue May 03 18:26:22 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2620071">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1398]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2948" _type="UndoCommand" date="Tue May 03 18:26:22 EDT 2022" starttimestamp="1651614162506" timestamp="2620081" />
  <Command __id="2950" _type="UndoCommand" date="Tue May 03 18:26:23 EDT 2022" starttimestamp="1651614162506" timestamp="2620696" />
  <Command __id="2952" _type="UndoCommand" date="Tue May 03 18:26:23 EDT 2022" starttimestamp="1651614162506" timestamp="2621016" />
  <Command __id="2954" _type="UndoCommand" date="Tue May 03 18:26:23 EDT 2022" starttimestamp="1651614162506" timestamp="2621374" />
  <Command __id="2955" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:26:24 EDT 2022" starttimestamp="1651614162506" timestamp="2622263" />
  <Command __id="2956" _type="EclipseCommand" commandID="" date="Tue May 03 18:26:24 EDT 2022" starttimestamp="1651614162506" timestamp="2622354" />
  <Command __id="2957" _type="EclipseCommand" commandID="" date="Tue May 03 18:26:24 EDT 2022" starttimestamp="1651614162506" timestamp="2622407" />
  <Command __id="2959" _type="PauseCommand" date="Tue May 03 18:26:26 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2623507">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1100]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2958" _type="MoveCaretCommand" caretOffset="538" date="Tue May 03 18:26:26 EDT 2022" docOffset="887" starttimestamp="1651614162506" timestamp="2623507" />
  <Command __id="2961" _type="PauseCommand" date="Tue May 03 18:26:29 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2627098">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3591]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2960" _type="MoveCaretCommand" caretOffset="459" date="Tue May 03 18:26:29 EDT 2022" docOffset="808" starttimestamp="1651614162506" timestamp="2627098" />
  <Command __id="2963" _type="PauseCommand" date="Tue May 03 18:26:30 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2628443">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1345]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2964" _type="MoveCaretCommand" caretOffset="437" date="Tue May 03 18:26:31 EDT 2022" docOffset="556" starttimestamp="1651614162506" timestamp="2628546" />
  <Command __id="2966" _type="PauseCommand" date="Tue May 03 18:26:33 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2630618">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2072]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2965" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue May 03 18:26:33 EDT 2022" starttimestamp="1651614162506" timestamp="2630618" />
  <Command __id="2967" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:26:33 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2630710" type="Run" />
  <Command __id="2968" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:26:33 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2630710" type="Run" />
  <Command __id="2970" _type="PauseCommand" date="Tue May 03 18:26:35 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2633114">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2404]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2969" _type="ShellCommand" date="Tue May 03 18:26:35 EDT 2022" starttimestamp="1651614162506" timestamp="2633114" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2972" _type="PauseCommand" date="Tue May 03 18:26:36 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2634345">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1231]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2971" _type="ShellCommand" date="Tue May 03 18:26:36 EDT 2022" starttimestamp="1651614162506" timestamp="2634345" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2973" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:26:36 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2634487" type="Run" />
  <Command __id="2974" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:26:36 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2634487" type="Run" />
  <Command __id="2976" _type="PauseCommand" date="Tue May 03 18:26:38 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2635582">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1095]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2977" _type="MoveCaretCommand" caretOffset="459" date="Tue May 03 18:26:38 EDT 2022" docOffset="808" starttimestamp="1651614162506" timestamp="2635692" />
  <Command __id="2979" _type="PauseCommand" date="Tue May 03 18:26:44 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2641591">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5899]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2980" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:26:44 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2641711" />
  <Command __id="2981" _type="MoveCaretCommand" caretOffset="349" date="Tue May 03 18:26:45 EDT 2022" docOffset="726" starttimestamp="1651614162506" timestamp="2642497" />
  <Command __id="2983" _type="PauseCommand" date="Tue May 03 18:26:54 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2652184">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9687]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2982" _type="MoveCaretCommand" caretOffset="229" date="Tue May 03 18:26:54 EDT 2022" docOffset="606" starttimestamp="1651614162506" timestamp="2652184" />
  <Command __id="2984" _type="SelectTextCommand" caretOffset="237" date="Tue May 03 18:26:54 EDT 2022" end="237" start="219" starttimestamp="1651614162506" timestamp="2652308" />
  <Command __id="2985" _type="MoveCaretCommand" caretOffset="239" date="Tue May 03 18:26:55 EDT 2022" docOffset="616" starttimestamp="1651614162506" timestamp="2653163" />
  <Command __id="2986" _type="SelectTextCommand" caretOffset="248" date="Tue May 03 18:26:55 EDT 2022" end="248" start="238" starttimestamp="1651614162506" timestamp="2653297" />
  <Command __id="2987" _type="SelectTextCommand" caretOffset="271" date="Tue May 03 18:26:55 EDT 2022" end="271" start="218" starttimestamp="1651614162506" timestamp="2653440" />
  <DocumentChange __id="2796" _type="Replace" date="Tue May 03 18:17:18 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="52" insertionLength="13" int_docASTNodeCount="232" int_docActiveCodeLength="1786" int_docExpressionCount="152" int_docLength="1786" length="13" offset="1709" startLine="52" starttimestamp="1651614162506" timestamp="2076106">
    <deletedText><![CDATA[WatcherServer]]></deletedText>
    <insertedText><![CDATA[watcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2798" _type="Replace" date="Tue May 03 18:17:20 EDT 2022" docASTNodeCount="232" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" endLine="19" insertionLength="13" int_docASTNodeCount="227" int_docActiveCodeLength="1786" int_docExpressionCount="150" int_docLength="1786" length="13" offset="705" startLine="19" starttimestamp="1651614162506" timestamp="2078189">
    <deletedText><![CDATA[WatcherServer]]></deletedText>
    <insertedText><![CDATA[watcherServer]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2810" _type="Insert" date="Tue May 03 18:17:29 EDT 2022" docASTNodeCount="233" docActiveCodeLength="1805" docExpressionCount="152" docLength="1805" length="6" offset="1618" repeat="2" starttimestamp="1651614162506" timestamp="2087252" timestamp2="2087255">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2815" _type="Insert" date="Tue May 03 18:17:31 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1811" docExpressionCount="152" docLength="1811" length="6" offset="1659" repeat="2" starttimestamp="1651614162506" timestamp="2088821" timestamp2="2088824">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="2822" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:17:38 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2096444">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="2832" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:17:48 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1811" docExpressionCount="152" docLength="1811" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2105923">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	"), Diff(INSERT,"String oldName;¶	¶	"), Diff(EQUAL,"ServerRemoteInterfaceGIPC "), Diff(DELETE,"Observing"), Diff(INSERT,"watcher"), Diff(EQUAL,"Server;¶	ClientRemoteInterfaceGIPC "), Diff(DELETE,"original"), Diff(INSERT,"that"), Diff(EQUAL,"Client;¶"), Diff(DELETE,"	String ORIGINAL_CLIENT_NAME;"), Diff(EQUAL,"¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	"), Diff(DELETE,"¶	public ClientOutCoupler (ServerRemoteInterfaceGIPC anObservingServer, ClientRemoteInterfaceGIPC aClient, String aClientName, Boolean nio) {¶		ObservingServer = anObservingServer;¶		originalClient = aClient;¶		ORIGINAL_CLIENT_NAME = aClientName;¶		¶		¶	}¶	¶	"), Diff(EQUAL,"@Override¶	public void propertyChange("), Diff(INSERT,"final "), Diff(EQUAL,"PropertyChangeEvent anEvent) {¶	"), Diff(DELETE,"	¶		System.out.println("PROPERTY CHANGE");"), Diff(EQUAL,"¶		if (!anEvent.getPropertyName().equals("InputString")) "), Diff(INSERT,"{¶			"), Diff(EQUAL,"return;¶		"), Diff(INSERT,"}¶		¶		final "), Diff(EQUAL,"String "), Diff(DELETE,"new"), Diff(INSERT,"this"), Diff(EQUAL,"Command = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, "), Diff(DELETE,"new"), Diff(INSERT,"this"), Diff(EQUAL,"Command);¶		if (nio) {¶			return;¶		}¶		¶		"), Diff(DELETE,"//////This is fake just for passing tests¶		"), Diff(INSERT,"final "), Diff(EQUAL,"AStandAloneTwoCoupledHalloweenSimulations "), Diff(DELETE,"fake"), Diff(INSERT,"placeHolder"), Diff(EQUAL," = new AStandAloneTwoCoupledHalloweenSimulations();¶		"), Diff(DELETE,"fake"), Diff(INSERT,"placeHolder"), Diff(EQUAL,".getIPCMechanism();¶		"), Diff(DELETE,"//////¶		¶		System.out.println("Command being sent from coupler:" + newCommand);"), Diff(EQUAL,"¶		RemoteProposeRequestSent.newCase("), Diff(DELETE,"originalClient, ORIGINAL_CLIENT_NAME"), Diff(INSERT,"thatClient, oldName"), Diff(EQUAL,", aProposalNumber, "), Diff(DELETE,"new"), Diff(INSERT,"this"), Diff(EQUAL,"Command);¶		try {¶			"), Diff(DELETE,"//TODO need the client type to be that of a simulationParameterBean¶			//ObservingServer.broadcastIPCMechanism(IPCMechanism, originalClient, aProposalNumber, broadcast);¶			Observing"), Diff(INSERT,"¶			watcher"), Diff(EQUAL,"Server.broadcast("), Diff(DELETE,"new"), Diff(INSERT,"this"), Diff(EQUAL,"Command, "), Diff(DELETE,"original"), Diff(INSERT,"that"), Diff(EQUAL,"Client, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}"), Diff(INSERT,"¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientRemoteInterfaceGIPC aClient, final String aClientName, Boolean nio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶		¶	}¶	¶	"), Diff(EQUAL,"¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientOutCoupler implements PropertyChangeListener{
	String oldName;
	
	ServerRemoteInterfaceGIPC watcherServer;
	ClientRemoteInterfaceGIPC thatClient;

	
	int aProposalNumber = 0;
	boolean nio = false;
	@Override
	public void propertyChange(final PropertyChangeEvent anEvent) {
	
		if (!anEvent.getPropertyName().equals("InputString")) {
			return;
		}
		
		final String thisCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, thisCommand);
		if (nio) {
			return;
		}
		
		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();
		placeHolder.getIPCMechanism();
		
		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);
		try {
			
			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}
	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientRemoteInterfaceGIPC aClient, final String aClientName, Boolean nio) {
		watcherServer = anwatcherServer;
		thatClient = aClient;
		oldName = aClientName;
		
		
	}
	
	

}
]]></snapshot>
  </Command>
  <Command __id="2835" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:17:57 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1036" docExpressionCount="87" docLength="1070" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2115114">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2840" _type="Delete" date="Tue May 03 18:18:00 EDT 2022" docASTNodeCount="114" docActiveCodeLength="903" docExpressionCount="78" docLength="937" endLine="20" length="133" offset="571" startLine="18" starttimestamp="1651614162506" timestamp="2118487">
    <text><![CDATA[void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;]]></text>
  </DocumentChange>
  <DocumentChange __id="2843" _type="Insert" date="Tue May 03 18:18:02 EDT 2022" docASTNodeCount="114" docActiveCodeLength="906" docExpressionCount="78" docLength="940" length="3" offset="932" starttimestamp="1651614162506" timestamp="2119923">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2845" _type="Replace" date="Tue May 03 18:18:02 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1039" docExpressionCount="87" docLength="1073" endLine="30" insertionLength="134" int_docASTNodeCount="114" int_docActiveCodeLength="905" int_docExpressionCount="78" int_docLength="939" length="1" offset="934" startLine="30" starttimestamp="1651614162506" timestamp="2120376">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2857" _type="Replace" date="Tue May 03 18:18:11 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1024" docExpressionCount="87" docLength="1058" endLine="22" insertionLength="1" int_docASTNodeCount="132" int_docActiveCodeLength="1023" int_docExpressionCount="86" int_docLength="1057" length="16" offset="662" startLine="22" starttimestamp="1651614162506" timestamp="2129090">
    <deletedText><![CDATA[createSimulation]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2860" _type="Insert" date="Tue May 03 18:18:11 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1028" docExpressionCount="87" docLength="1062" length="4" offset="663" repeat="4" starttimestamp="1651614162506" timestamp="2129181" timestamp2="2129661">
    <text><![CDATA[imua]]></text>
  </DocumentChange>
  <DocumentChange __id="2868" _type="Delete" date="Tue May 03 18:18:12 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1027" docExpressionCount="87" docLength="1061" endLine="22" length="1" offset="666" startLine="22" starttimestamp="1651614162506" timestamp="2130012">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="2870" _type="Insert" date="Tue May 03 18:18:12 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1031" docExpressionCount="87" docLength="1065" length="4" offset="666" repeat="4" starttimestamp="1651614162506" timestamp="2130243" timestamp2="2130604">
    <text><![CDATA[late]]></text>
  </DocumentChange>
  <Command __id="2928" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:26:08 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2606079">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="2940" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:26:19 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="826" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2616795">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	HalloweenCommandProcessor getCommandProcessor();¶¶	void setFactories();¶¶	//For A6 checks¶	void simulationCommand1(String aCommand);¶	void nioInit(String[] args);¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2943" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:26:20 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1031" docExpressionCount="87" docLength="1065" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2617739">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	"), Diff(DELETE,"void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;"), Diff(EQUAL,"¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor "), Diff(DELETE,"createS"), Diff(INSERT,"s"), Diff(EQUAL,"imulat"), Diff(DELETE,"ion"), Diff(INSERT,"e"), Diff(EQUAL,"(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶"), Diff(INSERT,"	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor simulate(String aPrefix) throws RemoteException;

	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;

	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;
}
]]></snapshot>
  </Command>
  <DocumentChange __id="2946" _type="Delete" date="Tue May 03 18:26:22 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1027" docExpressionCount="87" docLength="1061" endLine="22" length="4" offset="666" startLine="22" starttimestamp="1651614162506" timestamp="2620071">
    <text><![CDATA[late]]></text>
  </DocumentChange>
  <DocumentChange __id="2949" _type="Insert" date="Tue May 03 18:26:23 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1028" docExpressionCount="87" docLength="1062" length="1" offset="666" starttimestamp="1651614162506" timestamp="2620692">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="2951" _type="Delete" date="Tue May 03 18:26:23 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1024" docExpressionCount="87" docLength="1058" endLine="22" length="4" offset="663" startLine="22" starttimestamp="1651614162506" timestamp="2621008">
    <text><![CDATA[imua]]></text>
  </DocumentChange>
  <DocumentChange __id="2953" _type="Replace" date="Tue May 03 18:26:23 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1039" docExpressionCount="87" docLength="1073" endLine="22" insertionLength="16" int_docASTNodeCount="132" int_docActiveCodeLength="1023" int_docExpressionCount="86" int_docLength="1057" length="1" offset="662" startLine="22" starttimestamp="1651614162506" timestamp="2621368">
    <deletedText><![CDATA[s]]></deletedText>
    <insertedText><![CDATA[createSimulation]]></insertedText>
  </DocumentChange>
  <Command __id="2962" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:26:30 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2628443">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="2975" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:26:38 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1039" docExpressionCount="87" docLength="1073" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2635582">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor "), Diff(DELETE,"s"), Diff(INSERT,"createS"), Diff(EQUAL,"imulat"), Diff(DELETE,"e"), Diff(INSERT,"ion"), Diff(EQUAL,"(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;

	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;
}
]]></snapshot>
  </Command>
  <Command __id="2978" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:26:44 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="826" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2641591">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	HalloweenCommandProcessor getCommandProcessor();¶¶	void setFactories();¶¶	//For A6 checks¶	void simulationCommand1(String aCommand);¶	void nioInit(String[] args);¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2989" _type="PauseCommand" date="Tue May 03 18:26:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2654445">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1005]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2990" _type="CutCommand" date="Tue May 03 18:26:56 EDT 2022" starttimestamp="1651614162506" timestamp="2654487" />
  <Command __id="2991" _type="MoveCaretCommand" caretOffset="296" date="Tue May 03 18:26:57 EDT 2022" docOffset="673" starttimestamp="1651614162506" timestamp="2655061" />
  <Command __id="2993" _type="PauseCommand" date="Tue May 03 18:26:58 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2656275">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1214]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2994" _type="PasteCommand" date="Tue May 03 18:26:58 EDT 2022" starttimestamp="1651614162506" timestamp="2656278" />
  <Command __id="2996" _type="PauseCommand" date="Tue May 03 18:27:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2658354">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2076]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2995" _type="SelectTextCommand" caretOffset="367" date="Tue May 03 18:27:00 EDT 2022" end="367" start="352" starttimestamp="1651614162506" timestamp="2658354" />
  <Command __id="2998" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:01 EDT 2022" starttimestamp="1651614162506" timestamp="2658936" />
  <Command __id="3000" _type="PauseCommand" date="Tue May 03 18:27:03 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2661170">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2234]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2999" _type="SelectTextCommand" caretOffset="355" date="Tue May 03 18:27:03 EDT 2022" end="429" start="355" starttimestamp="1651614162506" timestamp="2661170" />
  <Command __id="3002" _type="CutCommand" date="Tue May 03 18:27:04 EDT 2022" starttimestamp="1651614162506" timestamp="2661602" />
  <Command __id="3003" _type="MoveCaretCommand" caretOffset="271" date="Tue May 03 18:27:04 EDT 2022" docOffset="648" starttimestamp="1651614162506" timestamp="2662104" />
  <Command __id="3005" _type="PasteCommand" date="Tue May 03 18:27:05 EDT 2022" starttimestamp="1651614162506" timestamp="2662759" />
  <Command __id="3007" _type="PauseCommand" date="Tue May 03 18:27:06 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2663898">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1139]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3006" _type="MoveCaretCommand" caretOffset="295" date="Tue May 03 18:27:06 EDT 2022" docOffset="672" starttimestamp="1651614162506" timestamp="2663898" />
  <Command __id="3009" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:07 EDT 2022" starttimestamp="1651614162506" timestamp="2664746" />
  <Command __id="3011" _type="PauseCommand" date="Tue May 03 18:27:09 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2666850">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2104]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3012" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:09 EDT 2022" starttimestamp="1651614162506" timestamp="2666852" />
  <Command __id="3014" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:09 EDT 2022" starttimestamp="1651614162506" timestamp="2667002" />
  <Command __id="3016" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:09 EDT 2022" starttimestamp="1651614162506" timestamp="2667142" />
  <Command __id="3018" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:09 EDT 2022" starttimestamp="1651614162506" timestamp="2667283" />
  <Command __id="3020" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:09 EDT 2022" starttimestamp="1651614162506" timestamp="2667424" />
  <Command __id="3022" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:10 EDT 2022" starttimestamp="1651614162506" timestamp="2667542" />
  <Command __id="3024" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:10 EDT 2022" starttimestamp="1651614162506" timestamp="2667673" />
  <Command __id="3026" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:10 EDT 2022" starttimestamp="1651614162506" timestamp="2667793" />
  <Command __id="3028" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:10 EDT 2022" starttimestamp="1651614162506" timestamp="2667920" />
  <Command __id="3030" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:10 EDT 2022" starttimestamp="1651614162506" timestamp="2668049" />
  <Command __id="3032" _type="InsertStringCommand" date="Tue May 03 18:27:10 EDT 2022" starttimestamp="1651614162506" timestamp="2668266" timestamp2="2668266">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3034" _type="InsertStringCommand" date="Tue May 03 18:27:11 EDT 2022" starttimestamp="1651614162506" timestamp="2668783" timestamp2="2668783">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3036" _type="InsertStringCommand" date="Tue May 03 18:27:11 EDT 2022" starttimestamp="1651614162506" timestamp="2669033" timestamp2="2669033">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3038" _type="InsertStringCommand" date="Tue May 03 18:27:11 EDT 2022" starttimestamp="1651614162506" timestamp="2669222" timestamp2="2669222">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3040" _type="InsertStringCommand" date="Tue May 03 18:27:11 EDT 2022" starttimestamp="1651614162506" timestamp="2669333" timestamp2="2669333">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3042" _type="InsertStringCommand" date="Tue May 03 18:27:11 EDT 2022" starttimestamp="1651614162506" timestamp="2669450" timestamp2="2669450">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3044" _type="InsertStringCommand" date="Tue May 03 18:27:12 EDT 2022" starttimestamp="1651614162506" timestamp="2669613" timestamp2="2669613">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3046" _type="InsertStringCommand" date="Tue May 03 18:27:12 EDT 2022" starttimestamp="1651614162506" timestamp="2669684" timestamp2="2669684">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="3047" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:27:12 EDT 2022" starttimestamp="1651614162506" timestamp="2670401" />
  <Command __id="3048" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:12 EDT 2022" starttimestamp="1651614162506" timestamp="2670489" />
  <Command __id="3049" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:13 EDT 2022" starttimestamp="1651614162506" timestamp="2670530" />
  <Command __id="3051" _type="PauseCommand" date="Tue May 03 18:27:14 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2672020">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1490]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3050" _type="MoveCaretCommand" caretOffset="285" date="Tue May 03 18:27:14 EDT 2022" docOffset="662" starttimestamp="1651614162506" timestamp="2672020" />
  <Command __id="3052" _type="SelectTextCommand" caretOffset="292" date="Tue May 03 18:27:14 EDT 2022" end="292" start="277" starttimestamp="1651614162506" timestamp="2672182" />
  <Command __id="3053" _type="CopyCommand" date="Tue May 03 18:27:15 EDT 2022" starttimestamp="1651614162506" timestamp="2673005" />
  <Command __id="3055" _type="MoveCaretCommand" caretOffset="14366" date="Tue May 03 18:27:16 EDT 2022" docOffset="14366" starttimestamp="1651614162506" timestamp="2673805" />
  <Command __id="3057" _type="PauseCommand" date="Tue May 03 18:27:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2677428">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3623]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3056" _type="SelectTextCommand" caretOffset="8733" date="Tue May 03 18:27:19 EDT 2022" end="8733" start="8732" starttimestamp="1651614162506" timestamp="2677428" />
  <Command __id="3058" _type="MoveCaretCommand" caretOffset="8733" date="Tue May 03 18:27:20 EDT 2022" docOffset="8733" starttimestamp="1651614162506" timestamp="2677553" />
  <Command __id="3059" _type="MoveCaretCommand" caretOffset="8733" date="Tue May 03 18:27:20 EDT 2022" docOffset="8733" starttimestamp="1651614162506" timestamp="2678396" />
  <Command __id="3060" _type="SelectTextCommand" caretOffset="8743" date="Tue May 03 18:27:21 EDT 2022" end="8743" start="8725" starttimestamp="1651614162506" timestamp="2678532" />
  <Command __id="3062" _type="PasteCommand" date="Tue May 03 18:27:21 EDT 2022" starttimestamp="1651614162506" timestamp="2679248" />
  <Command __id="3063" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:27:22 EDT 2022" starttimestamp="1651614162506" timestamp="2679931" />
  <Command __id="3064" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:22 EDT 2022" starttimestamp="1651614162506" timestamp="2680018" />
  <Command __id="3065" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:22 EDT 2022" starttimestamp="1651614162506" timestamp="2680043" />
  <Command __id="3067" _type="PauseCommand" date="Tue May 03 18:27:28 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2685720">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5677]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3068" _type="SelectTextCommand" caretOffset="292" date="Tue May 03 18:27:28 EDT 2022" end="292" start="277" starttimestamp="1651614162506" timestamp="2685845" />
  <Command __id="3070" _type="PauseCommand" date="Tue May 03 18:27:29 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2687064">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1219]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3069" _type="MoveCaretCommand" caretOffset="322" date="Tue May 03 18:27:29 EDT 2022" docOffset="699" starttimestamp="1651614162506" timestamp="2687064" />
  <Command __id="3071" _type="SelectTextCommand" caretOffset="325" date="Tue May 03 18:27:29 EDT 2022" end="325" start="318" starttimestamp="1651614162506" timestamp="2687195" />
  <Command __id="3073" _type="PauseCommand" date="Tue May 03 18:27:34 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2692311">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5116]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3074" _type="InsertStringCommand" date="Tue May 03 18:27:34 EDT 2022" starttimestamp="1651614162506" timestamp="2692319" timestamp2="2692319">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3076" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:35 EDT 2022" starttimestamp="1651614162506" timestamp="2692753" />
  <DocumentChange __id="2988" _type="Delete" date="Tue May 03 18:26:56 EDT 2022" docASTNodeCount="94" docActiveCodeLength="758" docExpressionCount="66" docLength="773" endLine="15" length="53" offset="595" startLine="14" starttimestamp="1651614162506" timestamp="2654445">
    <text><![CDATA[	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();
]]></text>
  </DocumentChange>
  <DocumentChange __id="2992" _type="Insert" date="Tue May 03 18:26:58 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="826" length="53" offset="673" starttimestamp="1651614162506" timestamp="2656275">
    <text><![CDATA[	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();
]]></text>
  </DocumentChange>
  <DocumentChange __id="2997" _type="Delete" date="Tue May 03 18:27:01 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="811" endLine="20" length="15" offset="729" startLine="20" starttimestamp="1651614162506" timestamp="2658934">
    <text><![CDATA[//For A6 checks]]></text>
  </DocumentChange>
  <DocumentChange __id="3001" _type="Delete" date="Tue May 03 18:27:04 EDT 2022" docASTNodeCount="86" docActiveCodeLength="737" docExpressionCount="63" docLength="737" endLine="23" length="74" offset="732" startLine="21" starttimestamp="1651614162506" timestamp="2661592">
    <text><![CDATA[void simulationCommand1(String aCommand);
	void nioInit(String[] args);
]]></text>
  </DocumentChange>
  <DocumentChange __id="3004" _type="Insert" date="Tue May 03 18:27:05 EDT 2022" docASTNodeCount="101" docActiveCodeLength="812" docExpressionCount="69" docLength="812" length="75" offset="648" starttimestamp="1651614162506" timestamp="2662745">
    <text><![CDATA[	void simulationCommand1(String aCommand);
	void nioInit(String[] args);
]]></text>
  </DocumentChange>
  <DocumentChange __id="3008" _type="Delete" date="Tue May 03 18:27:07 EDT 2022" docASTNodeCount="101" docActiveCodeLength="811" docExpressionCount="69" docLength="811" endLine="16" length="1" offset="671" startLine="16" starttimestamp="1651614162506" timestamp="2664745">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="3010" _type="Delete" date="Tue May 03 18:27:09 EDT 2022" docASTNodeCount="101" docActiveCodeLength="801" docExpressionCount="69" docLength="801" endLine="16" length="10" offset="661" repeat="10" startLine="16" starttimestamp="1651614162506" timestamp="2666850" timestamp2="2668048">
    <text><![CDATA[ionCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="3031" _type="Insert" date="Tue May 03 18:27:10 EDT 2022" docASTNodeCount="101" docActiveCodeLength="809" docExpressionCount="69" docLength="809" length="8" offset="661" repeat="8" starttimestamp="1651614162506" timestamp="2668263" timestamp2="2669681">
    <text><![CDATA[eCommand]]></text>
  </DocumentChange>
  <Command __id="3054" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:27:16 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12596" docExpressionCount="1106" docLength="15233" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2673722">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulationCommand1(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3061" _type="Replace" date="Tue May 03 18:27:21 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12593" docExpressionCount="1106" docLength="15230" endLine="256" insertionLength="15" int_docASTNodeCount="1640" int_docActiveCodeLength="12578" int_docExpressionCount="1105" int_docLength="15215" length="18" offset="8725" startLine="256" starttimestamp="1651614162506" timestamp="2679238">
    <deletedText><![CDATA[simulationCommand1]]></deletedText>
    <insertedText><![CDATA[simulateCommand]]></insertedText>
  </DocumentChange>
  <Command __id="3066" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:27:28 EDT 2022" docASTNodeCount="101" docActiveCodeLength="809" docExpressionCount="69" docLength="809" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2685720">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶"), Diff(DELETE,"	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶"), Diff(EQUAL,"¶	HalloweenCommandProcessor getCommandProcessor();"), Diff(DELETE,"¶¶	void setFactories();¶¶	//For A6 checks"), Diff(EQUAL,"¶	void simulat"), Diff(DELETE,"ion"), Diff(INSERT,"e"), Diff(EQUAL,"Command"), Diff(DELETE,"1"), Diff(EQUAL,"(String aCommand);¶	void nioInit(String[] args);¶¶"), Diff(INSERT,"	void setFactories();¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	¶	¶"), Diff(EQUAL,"}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{


	HalloweenCommandProcessor getCommandProcessor();
	void simulateCommand(String aCommand);
	void nioInit(String[] args);

	void setFactories();
	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	
	
}
]]></snapshot>
  </Command>
  <DocumentChange __id="3072" _type="Replace" date="Tue May 03 18:27:34 EDT 2022" docASTNodeCount="101" docActiveCodeLength="803" docExpressionCount="69" docLength="803" endLine="17" insertionLength="1" int_docASTNodeCount="99" int_docActiveCodeLength="802" int_docExpressionCount="68" int_docLength="802" length="7" offset="695" startLine="17" starttimestamp="1651614162506" timestamp="2692311">
    <deletedText><![CDATA[nioInit]]></deletedText>
    <insertedText><![CDATA[I]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3075" _type="Delete" date="Tue May 03 18:27:35 EDT 2022" docASTNodeCount="99" docActiveCodeLength="802" docExpressionCount="68" docLength="802" endLine="17" length="1" offset="695" startLine="17" starttimestamp="1651614162506" timestamp="2692752">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <Command __id="3078" _type="PauseCommand" date="Tue May 03 18:27:36 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2693760">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1007]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3079" _type="InsertStringCommand" date="Tue May 03 18:27:36 EDT 2022" starttimestamp="1651614162506" timestamp="2693762" timestamp2="2693762">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3081" _type="InsertStringCommand" date="Tue May 03 18:27:36 EDT 2022" starttimestamp="1651614162506" timestamp="2693930" timestamp2="2693930">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3083" _type="InsertStringCommand" date="Tue May 03 18:27:36 EDT 2022" starttimestamp="1651614162506" timestamp="2693997" timestamp2="2693997">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3085" _type="InsertStringCommand" date="Tue May 03 18:27:36 EDT 2022" starttimestamp="1651614162506" timestamp="2694248" timestamp2="2694248">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3087" _type="InsertStringCommand" date="Tue May 03 18:27:36 EDT 2022" starttimestamp="1651614162506" timestamp="2694349" timestamp2="2694349">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3089" _type="InsertStringCommand" date="Tue May 03 18:27:36 EDT 2022" starttimestamp="1651614162506" timestamp="2694488" timestamp2="2694488">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3092" _type="PauseCommand" date="Tue May 03 18:27:38 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2695680">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1192]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3091" _type="InsertStringCommand" date="Tue May 03 18:27:38 EDT 2022" starttimestamp="1651614162506" timestamp="2695680" timestamp2="2695680">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3094" _type="InsertStringCommand" date="Tue May 03 18:27:38 EDT 2022" starttimestamp="1651614162506" timestamp="2695740" timestamp2="2695740">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3096" _type="InsertStringCommand" date="Tue May 03 18:27:38 EDT 2022" starttimestamp="1651614162506" timestamp="2696401" timestamp2="2696401">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="3098" _type="InsertStringCommand" date="Tue May 03 18:27:39 EDT 2022" starttimestamp="1651614162506" timestamp="2696993" timestamp2="2696993">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3100" _type="InsertStringCommand" date="Tue May 03 18:27:40 EDT 2022" starttimestamp="1651614162506" timestamp="2697733" timestamp2="2697733">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3101" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:27:40 EDT 2022" starttimestamp="1651614162506" timestamp="2698193" />
  <Command __id="3102" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:40 EDT 2022" starttimestamp="1651614162506" timestamp="2698330" />
  <Command __id="3103" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:40 EDT 2022" starttimestamp="1651614162506" timestamp="2698381" />
  <Command __id="3105" _type="PauseCommand" date="Tue May 03 18:27:42 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2700206">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1825]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3104" _type="MoveCaretCommand" caretOffset="323" date="Tue May 03 18:27:42 EDT 2022" docOffset="700" starttimestamp="1651614162506" timestamp="2700206" />
  <Command __id="3106" _type="SelectTextCommand" caretOffset="329" date="Tue May 03 18:27:42 EDT 2022" end="329" start="318" starttimestamp="1651614162506" timestamp="2700322" />
  <Command __id="3107" _type="CopyCommand" date="Tue May 03 18:27:43 EDT 2022" starttimestamp="1651614162506" timestamp="2700864" />
  <Command __id="3109" _type="MoveCaretCommand" caretOffset="8740" date="Tue May 03 18:27:43 EDT 2022" docOffset="8740" starttimestamp="1651614162506" timestamp="2701478" />
  <Command __id="3111" _type="PauseCommand" date="Tue May 03 18:27:47 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2705063">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3585]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3110" _type="MoveCaretCommand" caretOffset="11092" date="Tue May 03 18:27:47 EDT 2022" docOffset="11092" starttimestamp="1651614162506" timestamp="2705063" />
  <Command __id="3112" _type="SelectTextCommand" caretOffset="11095" date="Tue May 03 18:27:47 EDT 2022" end="11095" start="11088" starttimestamp="1651614162506" timestamp="2705187" />
  <Command __id="3114" _type="PasteCommand" date="Tue May 03 18:27:48 EDT 2022" starttimestamp="1651614162506" timestamp="2705823" />
  <Command __id="3116" _type="PauseCommand" date="Tue May 03 18:27:50 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2708403">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2580]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3115" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:27:50 EDT 2022" starttimestamp="1651614162506" timestamp="2708403" />
  <Command __id="3117" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:51 EDT 2022" starttimestamp="1651614162506" timestamp="2708541" />
  <Command __id="3118" _type="EclipseCommand" commandID="" date="Tue May 03 18:27:51 EDT 2022" starttimestamp="1651614162506" timestamp="2708563" />
  <Command __id="3119" _type="MoveCaretCommand" caretOffset="11061" date="Tue May 03 18:27:51 EDT 2022" docOffset="11061" starttimestamp="1651614162506" timestamp="2708773" />
  <Command __id="3121" _type="PauseCommand" date="Tue May 03 18:27:53 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2711059">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2286]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3122" _type="MoveCaretCommand" caretOffset="459" date="Tue May 03 18:27:53 EDT 2022" docOffset="808" starttimestamp="1651614162506" timestamp="2711189" />
  <Command __id="3124" _type="PauseCommand" date="Tue May 03 18:27:54 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2712389">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1200]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3123" _type="MoveCaretCommand" caretOffset="237" date="Tue May 03 18:27:54 EDT 2022" docOffset="586" starttimestamp="1651614162506" timestamp="2712389" />
  <Command __id="3125" _type="SelectTextCommand" caretOffset="243" date="Tue May 03 18:27:55 EDT 2022" end="243" start="232" starttimestamp="1651614162506" timestamp="2712511" />
  <Command __id="3127" _type="PauseCommand" date="Tue May 03 18:27:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2714003">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1492]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3128" _type="InsertStringCommand" date="Tue May 03 18:27:56 EDT 2022" starttimestamp="1651614162506" timestamp="2714012" timestamp2="2714012">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3130" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:57 EDT 2022" starttimestamp="1651614162506" timestamp="2714856" />
  <Command __id="3132" _type="InsertStringCommand" date="Tue May 03 18:27:57 EDT 2022" starttimestamp="1651614162506" timestamp="2715159" timestamp2="2715159">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3134" _type="InsertStringCommand" date="Tue May 03 18:27:57 EDT 2022" starttimestamp="1651614162506" timestamp="2715408" timestamp2="2715408">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3136" _type="InsertStringCommand" date="Tue May 03 18:27:58 EDT 2022" starttimestamp="1651614162506" timestamp="2715729" timestamp2="2715729">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3138" _type="PauseCommand" date="Tue May 03 18:27:59 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2717119">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1390]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3139" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:27:59 EDT 2022" starttimestamp="1651614162506" timestamp="2717121" />
  <Command __id="3141" _type="InsertStringCommand" date="Tue May 03 18:27:59 EDT 2022" starttimestamp="1651614162506" timestamp="2717434" timestamp2="2717434">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3143" _type="InsertStringCommand" date="Tue May 03 18:28:00 EDT 2022" starttimestamp="1651614162506" timestamp="2717534" timestamp2="2717534">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3145" _type="InsertStringCommand" date="Tue May 03 18:28:00 EDT 2022" starttimestamp="1651614162506" timestamp="2717734" timestamp2="2717734">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3147" _type="InsertStringCommand" date="Tue May 03 18:28:00 EDT 2022" starttimestamp="1651614162506" timestamp="2717835" timestamp2="2717835">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3149" _type="InsertStringCommand" date="Tue May 03 18:28:00 EDT 2022" starttimestamp="1651614162506" timestamp="2717946" timestamp2="2717946">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3151" _type="InsertStringCommand" date="Tue May 03 18:28:00 EDT 2022" starttimestamp="1651614162506" timestamp="2718054" timestamp2="2718054">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3153" _type="InsertStringCommand" date="Tue May 03 18:28:01 EDT 2022" starttimestamp="1651614162506" timestamp="2718796" timestamp2="2718796">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3155" _type="InsertStringCommand" date="Tue May 03 18:28:01 EDT 2022" starttimestamp="1651614162506" timestamp="2718967" timestamp2="2718967">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3157" _type="InsertStringCommand" date="Tue May 03 18:28:01 EDT 2022" starttimestamp="1651614162506" timestamp="2719087" timestamp2="2719087">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3159" _type="InsertStringCommand" date="Tue May 03 18:28:01 EDT 2022" starttimestamp="1651614162506" timestamp="2719248" timestamp2="2719248">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3161" _type="InsertStringCommand" date="Tue May 03 18:28:01 EDT 2022" starttimestamp="1651614162506" timestamp="2719329" timestamp2="2719329">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3163" _type="InsertStringCommand" date="Tue May 03 18:28:02 EDT 2022" starttimestamp="1651614162506" timestamp="2719597" timestamp2="2719597">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3165" _type="InsertStringCommand" date="Tue May 03 18:28:02 EDT 2022" starttimestamp="1651614162506" timestamp="2719729" timestamp2="2719729">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3167" _type="InsertStringCommand" date="Tue May 03 18:28:02 EDT 2022" starttimestamp="1651614162506" timestamp="2719799" timestamp2="2719799">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3169" _type="InsertStringCommand" date="Tue May 03 18:28:02 EDT 2022" starttimestamp="1651614162506" timestamp="2719960" timestamp2="2719960">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3170" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:28:03 EDT 2022" starttimestamp="1651614162506" timestamp="2720882" />
  <Command __id="3171" _type="EclipseCommand" commandID="" date="Tue May 03 18:28:03 EDT 2022" starttimestamp="1651614162506" timestamp="2721022" />
  <Command __id="3172" _type="EclipseCommand" commandID="" date="Tue May 03 18:28:03 EDT 2022" starttimestamp="1651614162506" timestamp="2721073" />
  <Command __id="3174" _type="PauseCommand" date="Tue May 03 18:28:06 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2723526">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2453]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3173" _type="ShellCommand" date="Tue May 03 18:28:06 EDT 2022" starttimestamp="1651614162506" timestamp="2723526" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3176" _type="PauseCommand" date="Tue May 03 18:28:08 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2726308">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2782]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3175" _type="ShellCommand" date="Tue May 03 18:28:08 EDT 2022" starttimestamp="1651614162506" timestamp="2726308" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3178" _type="SelectTextCommand" caretOffset="329" date="Tue May 03 18:28:09 EDT 2022" end="329" start="318" starttimestamp="1651614162506" timestamp="2726588" />
  <Command __id="3180" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:28:09 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2727294" />
  <Command __id="3182" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:28:10 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2728019" />
  <Command __id="3184" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:28:11 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2728594" />
  <Command __id="3186" _type="MoveCaretCommand" caretOffset="1376" date="Tue May 03 18:28:11 EDT 2022" docOffset="1806" starttimestamp="1651614162506" timestamp="2729264" />
  <Command __id="3188" _type="MoveCaretCommand" caretOffset="249" date="Tue May 03 18:28:12 EDT 2022" docOffset="598" starttimestamp="1651614162506" timestamp="2730086" />
  <Command __id="3190" _type="PauseCommand" date="Tue May 03 18:28:15 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2732959">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2873]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3189" _type="MoveCaretCommand" caretOffset="236" date="Tue May 03 18:28:15 EDT 2022" docOffset="585" starttimestamp="1651614162506" timestamp="2732959" />
  <Command __id="3191" _type="SelectTextCommand" caretOffset="249" date="Tue May 03 18:28:15 EDT 2022" end="249" start="232" starttimestamp="1651614162506" timestamp="2733078" />
  <Command __id="3192" _type="CopyCommand" date="Tue May 03 18:28:16 EDT 2022" starttimestamp="1651614162506" timestamp="2733722" />
  <Command __id="3194" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:28:16 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2734357" />
  <Command __id="3196" _type="PauseCommand" date="Tue May 03 18:28:34 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="2751967">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[17610]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3195" _type="MoveCaretCommand" caretOffset="5775" date="Tue May 03 18:28:34 EDT 2022" docOffset="7450" starttimestamp="1651614162506" timestamp="2751967" />
  <Command __id="3197" _type="SelectTextCommand" caretOffset="5784" date="Tue May 03 18:28:34 EDT 2022" end="5784" start="5769" starttimestamp="1651614162506" timestamp="2752111" />
  <Command __id="3198" _type="SelectTextCommand" caretOffset="5804" date="Tue May 03 18:28:34 EDT 2022" end="5804" start="5755" starttimestamp="1651614162506" timestamp="2752396" />
  <Command __id="3200" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:28:35 EDT 2022" starttimestamp="1651614162506" timestamp="2753053" />
  <Command __id="3202" _type="PauseCommand" date="Tue May 03 18:28:43 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2760558">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7505]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3201" _type="MoveCaretCommand" caretOffset="1492" date="Tue May 03 18:28:43 EDT 2022" docOffset="3167" starttimestamp="1651614162506" timestamp="2760558" />
  <Command __id="3203" _type="SelectTextCommand" caretOffset="1498" date="Tue May 03 18:28:43 EDT 2022" end="1498" start="1487" starttimestamp="1651614162506" timestamp="2760689" />
  <Command __id="3205" _type="PasteCommand" date="Tue May 03 18:28:43 EDT 2022" starttimestamp="1651614162506" timestamp="2761388" />
  <Command __id="3206" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:28:44 EDT 2022" starttimestamp="1651614162506" timestamp="2762058" />
  <Command __id="3207" _type="EclipseCommand" commandID="" date="Tue May 03 18:28:44 EDT 2022" starttimestamp="1651614162506" timestamp="2762145" />
  <Command __id="3208" _type="EclipseCommand" commandID="" date="Tue May 03 18:28:44 EDT 2022" starttimestamp="1651614162506" timestamp="2762197" />
  <Command __id="3210" _type="PauseCommand" date="Tue May 03 18:28:49 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2766912">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4714]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3209" _type="MoveCaretCommand" caretOffset="3349" date="Tue May 03 18:28:49 EDT 2022" docOffset="5024" starttimestamp="1651614162506" timestamp="2766911" />
  <Command __id="3211" _type="SelectTextCommand" caretOffset="3358" date="Tue May 03 18:28:49 EDT 2022" end="3358" start="3347" starttimestamp="1651614162506" timestamp="2767058" />
  <Command __id="3213" _type="PasteCommand" date="Tue May 03 18:28:50 EDT 2022" starttimestamp="1651614162506" timestamp="2767845" />
  <Command __id="3214" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:28:50 EDT 2022" starttimestamp="1651614162506" timestamp="2768402" />
  <Command __id="3215" _type="EclipseCommand" commandID="" date="Tue May 03 18:28:50 EDT 2022" starttimestamp="1651614162506" timestamp="2768490" />
  <Command __id="3216" _type="EclipseCommand" commandID="" date="Tue May 03 18:28:51 EDT 2022" starttimestamp="1651614162506" timestamp="2768508" />
  <Command __id="3218" _type="PauseCommand" date="Tue May 03 18:28:57 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2774526">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6018]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3217" _type="ShellCommand" date="Tue May 03 18:28:57 EDT 2022" starttimestamp="1651614162506" timestamp="2774526" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3219" _type="ShellCommand" date="Tue May 03 18:28:57 EDT 2022" starttimestamp="1651614162506" timestamp="2774626" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3225" _type="PauseCommand" date="Tue May 03 18:29:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2777664">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2936]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3224" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:29:00 EDT 2022" starttimestamp="1651614162506" timestamp="2777664" />
  <Command __id="3226" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:00 EDT 2022" starttimestamp="1651614162506" timestamp="2777751" />
  <Command __id="3227" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:00 EDT 2022" starttimestamp="1651614162506" timestamp="2777813" />
  <Command __id="3228" _type="SelectTextCommand" caretOffset="8962" date="Tue May 03 18:29:01 EDT 2022" end="9084" start="8962" starttimestamp="1651614162506" timestamp="2778730" />
  <Command __id="3230" _type="PauseCommand" date="Tue May 03 18:29:02 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2780131">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1401]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3231" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:29:02 EDT 2022" starttimestamp="1651614162506" timestamp="2780150" />
  <Command __id="3233" _type="PauseCommand" date="Tue May 03 18:29:03 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2781343">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1193]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3232" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:29:03 EDT 2022" starttimestamp="1651614162506" timestamp="2781343" />
  <Command __id="3234" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:03 EDT 2022" starttimestamp="1651614162506" timestamp="2781483" />
  <Command __id="3235" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:04 EDT 2022" starttimestamp="1651614162506" timestamp="2781531" />
  <Command __id="3237" _type="PauseCommand" date="Tue May 03 18:29:11 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2788726">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7195]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3236" _type="ShellCommand" date="Tue May 03 18:29:11 EDT 2022" starttimestamp="1651614162506" timestamp="2788726" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3238" _type="ShellCommand" date="Tue May 03 18:29:11 EDT 2022" starttimestamp="1651614162506" timestamp="2788813" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3243" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:29:11 EDT 2022" starttimestamp="1651614162506" timestamp="2789400" />
  <Command __id="3244" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:11 EDT 2022" starttimestamp="1651614162506" timestamp="2789487" />
  <Command __id="3245" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:12 EDT 2022" starttimestamp="1651614162506" timestamp="2789539" />
  <Command __id="3247" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:29:12 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="2790225" />
  <Command __id="3249" _type="PauseCommand" date="Tue May 03 18:29:16 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2794303">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4078]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3248" _type="MoveCaretCommand" caretOffset="5092" date="Tue May 03 18:29:16 EDT 2022" docOffset="6578" starttimestamp="1651614162506" timestamp="2794303" />
  <Command __id="3250" _type="SelectTextCommand" caretOffset="5101" date="Tue May 03 18:29:16 EDT 2022" end="5101" start="5083" starttimestamp="1651614162506" timestamp="2794457" />
  <Command __id="3252" _type="PauseCommand" date="Tue May 03 18:29:18 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2795742">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1285]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3253" _type="PasteCommand" date="Tue May 03 18:29:18 EDT 2022" starttimestamp="1651614162506" timestamp="2795754" />
  <Command __id="3255" _type="PauseCommand" date="Tue May 03 18:29:21 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2798509">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2755]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3254" _type="SelectTextCommand" caretOffset="5198" date="Tue May 03 18:29:21 EDT 2022" end="5198" start="5197" starttimestamp="1651614162506" timestamp="2798509" />
  <Command __id="3256" _type="MoveCaretCommand" caretOffset="5198" date="Tue May 03 18:29:21 EDT 2022" docOffset="6684" starttimestamp="1651614162506" timestamp="2798671" />
  <Command __id="3257" _type="SelectTextCommand" caretOffset="5201" date="Tue May 03 18:29:21 EDT 2022" end="5201" start="5194" starttimestamp="1651614162506" timestamp="2799158" />
  <Command __id="3258" _type="SelectTextCommand" caretOffset="5220" date="Tue May 03 18:29:21 EDT 2022" end="5220" start="5181" starttimestamp="1651614162506" timestamp="2799283" />
  <Command __id="3259" _type="MoveCaretCommand" caretOffset="5198" date="Tue May 03 18:29:22 EDT 2022" docOffset="6684" starttimestamp="1651614162506" timestamp="2799771" />
  <Command __id="3260" _type="SelectTextCommand" caretOffset="5201" date="Tue May 03 18:29:22 EDT 2022" end="5201" start="5194" starttimestamp="1651614162506" timestamp="2799895" />
  <DocumentChange __id="3077" _type="Insert" date="Tue May 03 18:27:36 EDT 2022" docASTNodeCount="101" docActiveCodeLength="813" docExpressionCount="69" docLength="813" length="11" offset="695" repeat="11" starttimestamp="1651614162506" timestamp="2693760" timestamp2="2697729">
    <text><![CDATA[initiateNio]]></text>
  </DocumentChange>
  <Command __id="3108" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:27:43 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12593" docExpressionCount="1106" docLength="15230" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2701385">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulat"), Diff(DELETE,"ion"), Diff(INSERT,"e"), Diff(EQUAL,"Command"), Diff(DELETE,"1"), Diff(EQUAL,"(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

//	public void RMIAndGIPCClient() {
//  new int i = 1+1;
//}
	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="3113" _type="Replace" date="Tue May 03 18:27:48 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12597" docExpressionCount="1106" docLength="15234" endLine="331" insertionLength="11" int_docASTNodeCount="1640" int_docActiveCodeLength="12586" int_docExpressionCount="1105" int_docLength="15223" length="7" offset="11088" startLine="331" starttimestamp="1651614162506" timestamp="2705814">
    <deletedText><![CDATA[nioInit]]></deletedText>
    <insertedText><![CDATA[initiateNio]]></insertedText>
  </DocumentChange>
  <Command __id="3120" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:27:53 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1039" docExpressionCount="87" docLength="1073" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2711059">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3126" _type="Replace" date="Tue May 03 18:27:56 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1029" docExpressionCount="87" docLength="1063" endLine="20" insertionLength="1" int_docASTNodeCount="131" int_docActiveCodeLength="1028" int_docExpressionCount="85" int_docLength="1062" length="11" offset="581" startLine="20" starttimestamp="1651614162506" timestamp="2714003">
    <deletedText><![CDATA[processArgs]]></deletedText>
    <insertedText><![CDATA[p]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3129" _type="Delete" date="Tue May 03 18:27:57 EDT 2022" docASTNodeCount="131" docActiveCodeLength="1028" docExpressionCount="85" docLength="1062" endLine="20" length="1" offset="581" startLine="20" starttimestamp="1651614162506" timestamp="2714854">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="3131" _type="Insert" date="Tue May 03 18:27:57 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1031" docExpressionCount="87" docLength="1065" length="3" offset="581" repeat="3" starttimestamp="1651614162506" timestamp="2715155" timestamp2="2715726">
    <text><![CDATA[aru]]></text>
  </DocumentChange>
  <DocumentChange __id="3137" _type="Delete" date="Tue May 03 18:27:59 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1030" docExpressionCount="87" docLength="1064" endLine="20" length="1" offset="583" startLine="20" starttimestamp="1651614162506" timestamp="2717119">
    <text><![CDATA[u]]></text>
  </DocumentChange>
  <DocumentChange __id="3140" _type="Insert" date="Tue May 03 18:27:59 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1079" length="15" offset="583" repeat="15" starttimestamp="1651614162506" timestamp="2717430" timestamp2="2719955">
    <text><![CDATA[gumentProcessor]]></text>
  </DocumentChange>
  <Command __id="3177" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:28:08 EDT 2022" docASTNodeCount="101" docActiveCodeLength="813" docExpressionCount="69" docLength="813" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2726478">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶¶	HalloweenCommandProcessor getCommandProcessor();¶	void simulateCommand(String aCommand);¶	void "), Diff(DELETE,"nioInit"), Diff(INSERT,"initiateNio"), Diff(EQUAL,"(String[] args);¶¶	void setFactories();¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	¶	¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{


	HalloweenCommandProcessor getCommandProcessor();
	void simulateCommand(String aCommand);
	void initiateNio(String[] args);

	void setFactories();
	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	
	
}
]]></snapshot>
  </Command>
  <Command __id="3179" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:28:09 EDT 2022" docASTNodeCount="120" docActiveCodeLength="918" docExpressionCount="81" docLength="952" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2727157">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="3181" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:28:10 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9747" docExpressionCount="896" docLength="10689" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2727887">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.processArgs(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		//final int aProposalNumber = proposalNumber;
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}







}
]]></snapshot>
  </Command>
  <Command __id="3183" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:28:10 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5584" docExpressionCount="567" docLength="6764" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2728437">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	@Override
	public void simulationCommand1(String aCommand) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void nioInit(String[] args) {
		// TODO Auto-generated method stub
		
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="3185" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:28:11 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1811" docExpressionCount="152" docLength="1811" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2729147">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientRemoteInterfaceGIPC thatClient;¶¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientRemoteInterfaceGIPC aClient, final String aClientName, Boolean nio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶		¶	}¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3187" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:28:12 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1079" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2729979">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	¶¶	void "), Diff(DELETE,"p"), Diff(INSERT,"argumentP"), Diff(EQUAL,"rocess"), Diff(DELETE,"Args"), Diff(INSERT,"or"), Diff(EQUAL,"(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{

	//void processArgs(String[] args);
	
	

	void argumentProcessor(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;

	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;
}
]]></snapshot>
  </Command>
  <Command __id="3193" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:28:16 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9747" docExpressionCount="896" docLength="10689" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2734269">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		//final int aProposalNumber = proposalNumber;¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3199" _type="Delete" date="Tue May 03 18:28:35 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9743" docExpressionCount="896" docLength="10640" endLine="209" length="49" offset="7430" startLine="208" starttimestamp="1651614162506" timestamp="2753042">
    <text><![CDATA[		//final int aProposalNumber = proposalNumber;
]]></text>
  </DocumentChange>
  <DocumentChange __id="3204" _type="Replace" date="Tue May 03 18:28:43 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9749" docExpressionCount="896" docLength="10646" endLine="78" insertionLength="17" int_docASTNodeCount="1249" int_docActiveCodeLength="9732" int_docExpressionCount="895" int_docLength="10629" length="11" offset="3162" startLine="78" starttimestamp="1651614162506" timestamp="2761380">
    <deletedText><![CDATA[processArgs]]></deletedText>
    <insertedText><![CDATA[argumentProcessor]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3212" _type="Replace" date="Tue May 03 18:28:50 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9755" docExpressionCount="896" docLength="10652" endLine="137" insertionLength="17" int_docASTNodeCount="1248" int_docActiveCodeLength="9738" int_docExpressionCount="894" int_docLength="10635" length="11" offset="5022" startLine="137" starttimestamp="1651614162506" timestamp="2767832">
    <deletedText><![CDATA[processArgs]]></deletedText>
    <insertedText><![CDATA[argumentProcessor]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3220" _type="Insert" date="Tue May 03 18:28:57 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9847" docExpressionCount="902" docLength="10778" length="126" offset="10633" repeat="4" starttimestamp="1651614162506" timestamp="2774728" timestamp2="2774734">
    <text><![CDATA[

	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="3229" _type="Delete" date="Tue May 03 18:29:02 EDT 2022" docASTNodeCount="1250" docActiveCodeLength="9759" docExpressionCount="896" docLength="10656" endLine="310" length="122" offset="10637" startLine="306" starttimestamp="1651614162506" timestamp="2780131">
    <text><![CDATA[	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="3239" _type="Insert" date="Tue May 03 18:29:11 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9851" docExpressionCount="902" docLength="10782" length="126" offset="10633" repeat="4" starttimestamp="1651614162506" timestamp="2788831" timestamp2="2788836">
    <text><![CDATA[

	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <Command __id="3246" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:29:12 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5584" docExpressionCount="567" docLength="6764" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2790133">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	@Override¶	public void simulationCommand1(String aCommand) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void nioInit(String[] args) {¶		// TODO Auto-generated method stub¶		¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3251" _type="Replace" date="Tue May 03 18:29:18 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5583" docExpressionCount="567" docLength="6763" endLine="185" insertionLength="17" int_docASTNodeCount="783" int_docActiveCodeLength="5566" int_docExpressionCount="566" int_docLength="6746" length="18" offset="6569" startLine="185" starttimestamp="1651614162506" timestamp="2795742">
    <deletedText><![CDATA[simulationCommand1]]></deletedText>
    <insertedText><![CDATA[argumentProcessor]]></insertedText>
  </DocumentChange>
  <Command __id="3262" _type="PauseCommand" date="Tue May 03 18:29:26 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2804244">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4349]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3263" _type="PasteCommand" date="Tue May 03 18:29:26 EDT 2022" starttimestamp="1651614162506" timestamp="2804252" />
  <Command __id="3264" _type="MoveCaretCommand" caretOffset="5260" date="Tue May 03 18:29:27 EDT 2022" docOffset="6746" starttimestamp="1651614162506" timestamp="2804789" />
  <Command __id="3265" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:29:27 EDT 2022" starttimestamp="1651614162506" timestamp="2805190" />
  <Command __id="3266" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:27 EDT 2022" starttimestamp="1651614162506" timestamp="2805279" />
  <Command __id="3267" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:27 EDT 2022" starttimestamp="1651614162506" timestamp="2805314" />
  <Command __id="3269" _type="PauseCommand" date="Tue May 03 18:29:32 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2809892">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4578]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3268" _type="MoveCaretCommand" caretOffset="5092" date="Tue May 03 18:29:32 EDT 2022" docOffset="6578" starttimestamp="1651614162506" timestamp="2809892" />
  <Command __id="3270" _type="MoveCaretCommand" caretOffset="5094" date="Tue May 03 18:29:33 EDT 2022" docOffset="6580" starttimestamp="1651614162506" timestamp="2810835" />
  <Command __id="3271" _type="SelectTextCommand" caretOffset="5100" date="Tue May 03 18:29:33 EDT 2022" end="5100" start="5083" starttimestamp="1651614162506" timestamp="2810965" />
  <Command __id="3273" _type="PauseCommand" date="Tue May 03 18:29:37 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2814542">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3577]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3272" _type="ShellCommand" date="Tue May 03 18:29:37 EDT 2022" starttimestamp="1651614162506" timestamp="2814542" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3274" _type="ShellCommand" date="Tue May 03 18:29:37 EDT 2022" starttimestamp="1651614162506" timestamp="2814656" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3280" _type="PauseCommand" date="Tue May 03 18:29:38 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2815970">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1271]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3279" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:29:38 EDT 2022" starttimestamp="1651614162506" timestamp="2815970" />
  <Command __id="3281" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:38 EDT 2022" starttimestamp="1651614162506" timestamp="2816108" />
  <Command __id="3282" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:38 EDT 2022" starttimestamp="1651614162506" timestamp="2816140" />
  <Command __id="3284" _type="PauseCommand" date="Tue May 03 18:29:49 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="2827337">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11197]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3283" _type="SelectTextCommand" caretOffset="5058" date="Tue May 03 18:29:49 EDT 2022" end="5165" start="5058" starttimestamp="1651614162506" timestamp="2827337" />
  <Command __id="3286" _type="PauseCommand" date="Tue May 03 18:29:51 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2828961">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1624]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3291" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:29:51 EDT 2022" starttimestamp="1651614162506" timestamp="2828978" />
  <Command __id="3292" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:29:51 EDT 2022" starttimestamp="1651614162506" timestamp="2829409" />
  <Command __id="3293" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:52 EDT 2022" starttimestamp="1651614162506" timestamp="2829528" />
  <Command __id="3294" _type="EclipseCommand" commandID="" date="Tue May 03 18:29:52 EDT 2022" starttimestamp="1651614162506" timestamp="2829558" />
  <Command __id="3296" _type="PauseCommand" date="Tue May 03 18:29:54 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2832464">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2906]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3295" _type="MoveCaretCommand" caretOffset="445" date="Tue May 03 18:29:54 EDT 2022" docOffset="1931" starttimestamp="1651614162506" timestamp="2832464" />
  <Command __id="3298" _type="PauseCommand" date="Tue May 03 18:29:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2834402">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1938]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3299" _type="MoveCaretCommand" caretOffset="267" date="Tue May 03 18:29:57 EDT 2022" docOffset="386" starttimestamp="1651614162506" timestamp="2834531" />
  <Command __id="3301" _type="PauseCommand" date="Tue May 03 18:30:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2837827">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3296]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3300" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Tue May 03 18:30:00 EDT 2022" starttimestamp="1651614162506" timestamp="2837827" />
  <Command __id="3302" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:30:00 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2838190" type="Run" />
  <Command __id="3303" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:30:00 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2838190" type="Run" />
  <Command __id="3305" _type="PauseCommand" date="Tue May 03 18:30:03 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2840723">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2533]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3304" _type="ShellCommand" date="Tue May 03 18:30:03 EDT 2022" starttimestamp="1651614162506" timestamp="2840723" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3306" _type="ShellCommand" date="Tue May 03 18:30:03 EDT 2022" starttimestamp="1651614162506" timestamp="2841125" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3307" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:30:03 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2841233" type="Run" />
  <Command __id="3308" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:30:03 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2841233" type="Run" />
  <Command __id="3310" _type="PauseCommand" date="Tue May 03 18:30:08 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="2846290">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5057]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3309" _type="MoveCaretCommand" caretOffset="613" date="Tue May 03 18:30:08 EDT 2022" docOffset="732" starttimestamp="1651614162506" timestamp="2846290" />
  <Command __id="3311" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:30:09 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2847266" type="Run" />
  <Command __id="3312" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:30:09 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2847266" type="Run" />
  <Command __id="3314" _type="PauseCommand" date="Tue May 03 18:30:12 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2849747">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2481]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3313" _type="ShellCommand" date="Tue May 03 18:30:12 EDT 2022" starttimestamp="1651614162506" timestamp="2849747" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3316" _type="PauseCommand" date="Tue May 03 18:32:36 EDT 2022" range="2m-5m" starttimestamp="1651614162506" timestamp="2993596">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[143849]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3315" _type="ShellCommand" date="Tue May 03 18:32:36 EDT 2022" starttimestamp="1651614162506" timestamp="2993596" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3318" _type="PauseCommand" date="Tue May 03 18:32:39 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="2997262">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3666]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3317" _type="ConsoleOutput" date="Tue May 03 18:32:39 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="2997262" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67621
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"22563"), Diff(INSERT,"67621"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3320" _type="PauseCommand" date="Tue May 03 18:32:41 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="2999140">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1878]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3319" _type="ShellCommand" date="Tue May 03 18:32:41 EDT 2022" starttimestamp="1651614162506" timestamp="2999140" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3322" _type="PauseCommand" date="Tue May 03 18:32:44 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3001993">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2853]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3321" _type="ShellCommand" date="Tue May 03 18:32:44 EDT 2022" starttimestamp="1651614162506" timestamp="3001993" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3324" _type="PauseCommand" date="Tue May 03 18:32:46 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3003829">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1836]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3323" _type="ShellCommand" date="Tue May 03 18:32:46 EDT 2022" starttimestamp="1651614162506" timestamp="3003829" type="ECLIPSE_MINIMIZED" />
  <Command __id="3325" _type="ShellCommand" date="Tue May 03 18:32:46 EDT 2022" starttimestamp="1651614162506" timestamp="3003842" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3327" _type="PauseCommand" date="Tue May 03 18:32:49 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3007413">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3571]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3326" _type="ConsoleOutput" date="Tue May 03 18:32:49 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3007413" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67621"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3329" _type="PauseCommand" date="Tue May 03 18:34:32 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="3109849">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[102436]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3328" _type="ConsoleOutput" date="Tue May 03 18:34:32 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3109849" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112583
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112583¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="3331" _type="PauseCommand" date="Tue May 03 18:34:54 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="3132418">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22569]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3330" _type="ConsoleOutput" date="Tue May 03 18:34:54 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3132418" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22566
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"112583¶Number of traces > 800  turning tracing off"), Diff(INSERT,"22566"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3333" _type="PauseCommand" date="Tue May 03 18:35:17 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="3154988">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22570]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3332" _type="ConsoleOutput" date="Tue May 03 18:35:17 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3154988" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22566
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22566¶")]]]></diff>
  </Command>
  <Command __id="3335" _type="PauseCommand" date="Tue May 03 18:35:40 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="3177558">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22570]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3334" _type="ConsoleOutput" date="Tue May 03 18:35:40 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3177558" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22565
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2256"), Diff(DELETE,"6"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3337" _type="PauseCommand" date="Tue May 03 18:36:02 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="3200175">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22617]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3336" _type="ConsoleOutput" date="Tue May 03 18:36:02 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3200175" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22565
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22565¶")]]]></diff>
  </Command>
  <Command __id="3339" _type="PauseCommand" date="Tue May 03 18:36:30 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="3228190">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[28015]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3338" _type="ConsoleOutput" date="Tue May 03 18:36:30 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3228190" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21595
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2"), Diff(DELETE,"256"), Diff(INSERT,"159"), Diff(EQUAL,"5¶")]]]></diff>
  </Command>
  <Command __id="3341" _type="PauseCommand" date="Tue May 03 18:36:45 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="3242860">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14670]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3340" _type="ConsoleOutput" date="Tue May 03 18:36:45 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="3242860" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14666
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"21595"), Diff(INSERT,"14666"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3345" _type="PauseCommand" date="Tue May 03 18:39:57 EDT 2022" range="2m-5m" starttimestamp="1651614162506" timestamp="3435423">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[177676]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="3344" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:39:57 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3435423" type="Run" />
  <Command __id="3346" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:39:57 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3435423" type="Run" />
  <Command __id="3348" _type="PauseCommand" date="Tue May 03 18:39:59 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3436616">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1193]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3347" _type="ShellCommand" date="Tue May 03 18:39:59 EDT 2022" starttimestamp="1651614162506" timestamp="3436616" type="ECLIPSE_MAXIMIZED" />
  <Command __id="3349" _type="ShellCommand" date="Tue May 03 18:39:59 EDT 2022" starttimestamp="1651614162506" timestamp="3436650" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3351" _type="PauseCommand" date="Tue May 03 18:40:01 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3439403">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2753]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3352" _type="SelectTextCommand" caretOffset="249" date="Tue May 03 18:40:02 EDT 2022" end="249" start="232" starttimestamp="1651614162506" timestamp="3439521" />
  <Command __id="3354" _type="PauseCommand" date="Tue May 03 18:40:06 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3444263">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4742]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3353" _type="SelectTextCommand" caretOffset="379" date="Tue May 03 18:40:06 EDT 2022" end="587" start="379" starttimestamp="1651614162506" timestamp="3444263" />
  <Command __id="3356" _type="CutCommand" date="Tue May 03 18:40:07 EDT 2022" starttimestamp="1651614162506" timestamp="3445134" />
  <Command __id="3357" _type="MoveCaretCommand" caretOffset="222" date="Tue May 03 18:40:08 EDT 2022" docOffset="571" starttimestamp="1651614162506" timestamp="3445759" />
  <Command __id="3359" _type="PasteCommand" date="Tue May 03 18:40:09 EDT 2022" starttimestamp="1651614162506" timestamp="3446510" />
  <Command __id="3361" _type="PauseCommand" date="Tue May 03 18:40:10 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3447662">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1152]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3362" _type="InsertStringCommand" date="Tue May 03 18:40:10 EDT 2022" starttimestamp="1651614162506" timestamp="3447667" timestamp2="3447667">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="3364" _type="PauseCommand" date="Tue May 03 18:40:11 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3449487">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1820]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3363" _type="SelectTextCommand" caretOffset="216" date="Tue May 03 18:40:11 EDT 2022" end="216" start="182" starttimestamp="1651614162506" timestamp="3449487" />
  <Command __id="3366" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:40:12 EDT 2022" starttimestamp="1651614162506" timestamp="3449880" />
  <Command __id="3368" _type="PauseCommand" date="Tue May 03 18:40:16 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3454148">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4268]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3369" _type="PasteCommand" date="Tue May 03 18:40:16 EDT 2022" starttimestamp="1651614162506" timestamp="3454162" />
  <Command __id="3371" _type="PauseCommand" date="Tue May 03 18:40:19 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3457049">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2887]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3370" _type="SelectTextCommand" caretOffset="179" date="Tue May 03 18:40:19 EDT 2022" end="318" start="179" starttimestamp="1651614162506" timestamp="3457049" />
  <Command __id="3377" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:40:20 EDT 2022" starttimestamp="1651614162506" timestamp="3457614" />
  <Command __id="3378" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:40:20 EDT 2022" starttimestamp="1651614162506" timestamp="3458095" />
  <Command __id="3379" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:20 EDT 2022" starttimestamp="1651614162506" timestamp="3458183" />
  <Command __id="3380" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:20 EDT 2022" starttimestamp="1651614162506" timestamp="3458192" />
  <Command __id="3381" _type="MoveCaretCommand" caretOffset="541" date="Tue May 03 18:40:21 EDT 2022" docOffset="890" starttimestamp="1651614162506" timestamp="3458607" />
  <Command __id="3383" _type="PauseCommand" date="Tue May 03 18:40:26 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3464189">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5582]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3382" _type="MoveCaretCommand" caretOffset="418" date="Tue May 03 18:40:26 EDT 2022" docOffset="767" starttimestamp="1651614162506" timestamp="3464189" />
  <Command __id="3384" _type="SelectTextCommand" caretOffset="425" date="Tue May 03 18:40:26 EDT 2022" end="425" start="407" starttimestamp="1651614162506" timestamp="3464323" />
  <Command __id="3386" _type="PauseCommand" date="Tue May 03 18:40:33 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3470880">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6557]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3387" _type="InsertStringCommand" date="Tue May 03 18:40:33 EDT 2022" starttimestamp="1651614162506" timestamp="3470898" timestamp2="3470898">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3389" _type="InsertStringCommand" date="Tue May 03 18:40:33 EDT 2022" starttimestamp="1651614162506" timestamp="3470970" timestamp2="3470970">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3391" _type="InsertStringCommand" date="Tue May 03 18:40:33 EDT 2022" starttimestamp="1651614162506" timestamp="3471077" timestamp2="3471077">
    <data><![CDATA[k]]></data>
  </Command>
  <Command __id="3393" _type="InsertStringCommand" date="Tue May 03 18:40:33 EDT 2022" starttimestamp="1651614162506" timestamp="3471177" timestamp2="3471177">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3395" _type="InsertStringCommand" date="Tue May 03 18:40:34 EDT 2022" starttimestamp="1651614162506" timestamp="3471617" timestamp2="3471617">
    <data><![CDATA[C]]></data>
  </Command>
  <Command __id="3397" _type="InsertStringCommand" date="Tue May 03 18:40:34 EDT 2022" starttimestamp="1651614162506" timestamp="3471889" timestamp2="3471889">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="3399" _type="InsertStringCommand" date="Tue May 03 18:40:34 EDT 2022" starttimestamp="1651614162506" timestamp="3471990" timestamp2="3471990">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3401" _type="InsertStringCommand" date="Tue May 03 18:40:34 EDT 2022" starttimestamp="1651614162506" timestamp="3472078" timestamp2="3472078">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3403" _type="InsertStringCommand" date="Tue May 03 18:40:34 EDT 2022" starttimestamp="1651614162506" timestamp="3472258" timestamp2="3472258">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3405" _type="InsertStringCommand" date="Tue May 03 18:40:34 EDT 2022" starttimestamp="1651614162506" timestamp="3472321" timestamp2="3472321">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3407" _type="InsertStringCommand" date="Tue May 03 18:40:35 EDT 2022" starttimestamp="1651614162506" timestamp="3473061" timestamp2="3473061">
    <data><![CDATA[I]]></data>
  </Command>
  <Command __id="3409" _type="InsertStringCommand" date="Tue May 03 18:40:36 EDT 2022" starttimestamp="1651614162506" timestamp="3473842" timestamp2="3473842">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="3411" _type="InsertStringCommand" date="Tue May 03 18:40:36 EDT 2022" starttimestamp="1651614162506" timestamp="3473993" timestamp2="3473993">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3412" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:40:37 EDT 2022" starttimestamp="1651614162506" timestamp="3474835" />
  <Command __id="3413" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:37 EDT 2022" starttimestamp="1651614162506" timestamp="3474972" />
  <Command __id="3414" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:37 EDT 2022" starttimestamp="1651614162506" timestamp="3475032" />
  <Command __id="3416" _type="PauseCommand" date="Tue May 03 18:40:39 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3476556">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1524]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3417" _type="InsertStringCommand" date="Tue May 03 18:40:39 EDT 2022" starttimestamp="1651614162506" timestamp="3476574" timestamp2="3476574">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3418" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:40:39 EDT 2022" starttimestamp="1651614162506" timestamp="3476804" />
  <Command __id="3419" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:39 EDT 2022" starttimestamp="1651614162506" timestamp="3476942" />
  <Command __id="3420" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:39 EDT 2022" starttimestamp="1651614162506" timestamp="3476996" />
  <Command __id="3422" _type="PauseCommand" date="Tue May 03 18:40:40 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3478364">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1368]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3421" _type="MoveCaretCommand" caretOffset="415" date="Tue May 03 18:40:40 EDT 2022" docOffset="764" starttimestamp="1651614162506" timestamp="3478364" />
  <Command __id="3423" _type="SelectTextCommand" caretOffset="421" date="Tue May 03 18:40:41 EDT 2022" end="421" start="407" starttimestamp="1651614162506" timestamp="3478517" />
  <Command __id="3424" _type="CopyCommand" date="Tue May 03 18:40:41 EDT 2022" starttimestamp="1651614162506" timestamp="3479360" />
  <Command __id="3426" _type="MoveCaretCommand" caretOffset="9088" date="Tue May 03 18:40:42 EDT 2022" docOffset="10763" starttimestamp="1651614162506" timestamp="3480225" />
  <Command __id="3429" _type="PauseCommand" date="Tue May 03 18:40:47 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3484857">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4632]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3428" _type="ShellCommand" date="Tue May 03 18:40:47 EDT 2022" starttimestamp="1651614162506" timestamp="3484857" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3431" _type="PauseCommand" date="Tue May 03 18:40:51 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3489305">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4448]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3430" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:40:51 EDT 2022" forward="false" matchWord="false" offset="10763" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="3489305" wrapSearch="false">
    <searchString><![CDATA[change]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3433" _type="PauseCommand" date="Tue May 03 18:40:53 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3491178">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1873]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3432" _type="ShellCommand" date="Tue May 03 18:40:53 EDT 2022" starttimestamp="1651614162506" timestamp="3491178" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3434" _type="MoveCaretCommand" caretOffset="8340" date="Tue May 03 18:40:54 EDT 2022" docOffset="10015" starttimestamp="1651614162506" timestamp="3491598" />
  <Command __id="3435" _type="MoveCaretCommand" caretOffset="8258" date="Tue May 03 18:40:54 EDT 2022" docOffset="9933" starttimestamp="1651614162506" timestamp="3492104" />
  <Command __id="3436" _type="SelectTextCommand" caretOffset="8266" date="Tue May 03 18:40:54 EDT 2022" end="8266" start="8248" starttimestamp="1651614162506" timestamp="3492232" />
  <Command __id="3438" _type="PasteCommand" date="Tue May 03 18:40:55 EDT 2022" starttimestamp="1651614162506" timestamp="3492874" />
  <Command __id="3439" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:40:55 EDT 2022" starttimestamp="1651614162506" timestamp="3493443" />
  <Command __id="3440" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:56 EDT 2022" starttimestamp="1651614162506" timestamp="3493531" />
  <Command __id="3441" _type="EclipseCommand" commandID="" date="Tue May 03 18:40:56 EDT 2022" starttimestamp="1651614162506" timestamp="3493583" />
  <Command __id="3442" _type="MoveCaretCommand" caretOffset="8669" date="Tue May 03 18:40:56 EDT 2022" docOffset="10344" starttimestamp="1651614162506" timestamp="3493863" />
  <DocumentChange __id="3261" _type="Replace" date="Tue May 03 18:29:26 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5587" docExpressionCount="567" docLength="6767" endLine="191" insertionLength="11" int_docASTNodeCount="783" int_docActiveCodeLength="5576" int_docExpressionCount="566" int_docLength="6756" length="7" offset="6680" startLine="191" starttimestamp="1651614162506" timestamp="2804244">
    <deletedText><![CDATA[nioInit]]></deletedText>
    <insertedText><![CDATA[initiateNio]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3275" _type="Insert" date="Tue May 03 18:29:37 EDT 2022" docASTNodeCount="795" docActiveCodeLength="5662" docExpressionCount="572" docLength="6876" length="109" offset="6754" repeat="4" starttimestamp="1651614162506" timestamp="2814699" timestamp2="2814702">
    <text><![CDATA[

	@Override
	public void simulateCommand(String aCommand) {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="3285" _type="Insert" date="Tue May 03 18:29:51 EDT 2022" docASTNodeCount="793" docActiveCodeLength="5652" docExpressionCount="570" docLength="6878" length="2" offset="6544" starttimestamp="1651614162506" timestamp="2828961">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3287" _type="Insert" date="Tue May 03 18:29:51 EDT 2022" docASTNodeCount="786" docActiveCodeLength="5603" docExpressionCount="567" docLength="6880" length="2" offset="6558" starttimestamp="1651614162506" timestamp="2828963">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3288" _type="Insert" date="Tue May 03 18:29:51 EDT 2022" docASTNodeCount="786" docActiveCodeLength="5601" docExpressionCount="567" docLength="6882" length="2" offset="6611" starttimestamp="1651614162506" timestamp="2828964">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3289" _type="Insert" date="Tue May 03 18:29:51 EDT 2022" docASTNodeCount="786" docActiveCodeLength="5599" docExpressionCount="567" docLength="6884" length="2" offset="6651" starttimestamp="1651614162506" timestamp="2828966">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3290" _type="Insert" date="Tue May 03 18:29:51 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5597" docExpressionCount="567" docLength="6886" length="2" offset="6657" starttimestamp="1651614162506" timestamp="2828967">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3297" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:29:56 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="2834402">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="3350" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:40:01 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1079" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3439403">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3355" _type="Delete" date="Tue May 03 18:40:07 EDT 2022" docASTNodeCount="109" docActiveCodeLength="837" docExpressionCount="76" docLength="871" endLine="28" length="208" offset="728" startLine="24" starttimestamp="1651614162506" timestamp="3445113">
    <text><![CDATA[	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;]]></text>
  </DocumentChange>
  <DocumentChange __id="3358" _type="Replace" date="Tue May 03 18:40:09 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1044" docExpressionCount="87" docLength="1078" endLine="18" insertionLength="208" int_docASTNodeCount="109" int_docActiveCodeLength="836" int_docExpressionCount="76" int_docLength="870" length="1" offset="570" startLine="18" starttimestamp="1651614162506" timestamp="3446503">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3360" _type="Insert" date="Tue May 03 18:40:10 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1047" docExpressionCount="87" docLength="1081" length="3" offset="778" starttimestamp="1651614162506" timestamp="3447662">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="3365" _type="Delete" date="Tue May 03 18:40:12 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1047" docExpressionCount="87" docLength="1047" endLine="16" length="34" offset="531" startLine="16" starttimestamp="1651614162506" timestamp="3449876">
    <text><![CDATA[//void processArgs(String[] args);]]></text>
  </DocumentChange>
  <DocumentChange __id="3367" _type="Replace" date="Tue May 03 18:40:16 EDT 2022" docASTNodeCount="154" docActiveCodeLength="1180" docExpressionCount="96" docLength="1180" endLine="16" insertionLength="134" int_docASTNodeCount="134" int_docActiveCodeLength="1046" int_docExpressionCount="87" int_docLength="1046" length="1" offset="530" startLine="16" starttimestamp="1651614162506" timestamp="3454148">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3372" _type="Insert" date="Tue May 03 18:40:20 EDT 2022" docASTNodeCount="154" docActiveCodeLength="1180" docExpressionCount="96" docLength="1182" length="2" offset="528" starttimestamp="1651614162506" timestamp="3457604">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3373" _type="Insert" date="Tue May 03 18:40:20 EDT 2022" docASTNodeCount="143" docActiveCodeLength="1100" docExpressionCount="91" docLength="1184" length="2" offset="532" starttimestamp="1651614162506" timestamp="3457604">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3374" _type="Insert" date="Tue May 03 18:40:20 EDT 2022" docASTNodeCount="143" docActiveCodeLength="1100" docExpressionCount="91" docLength="1186" length="2" offset="616" starttimestamp="1651614162506" timestamp="3457605">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3375" _type="Insert" date="Tue May 03 18:40:20 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1050" docExpressionCount="87" docLength="1188" length="2" offset="620" starttimestamp="1651614162506" timestamp="3457605">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3376" _type="Insert" date="Tue May 03 18:40:20 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1049" docExpressionCount="87" docLength="1190" length="2" offset="674" starttimestamp="1651614162506" timestamp="3457606">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3385" _type="Replace" date="Tue May 03 18:40:33 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1032" docExpressionCount="87" docLength="1173" endLine="22" insertionLength="1" int_docASTNodeCount="132" int_docActiveCodeLength="1031" int_docExpressionCount="85" int_docLength="1172" length="18" offset="756" startLine="22" starttimestamp="1651614162506" timestamp="3470880">
    <deletedText><![CDATA[changeIPCMechanism]]></deletedText>
    <insertedText><![CDATA[m]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3388" _type="Insert" date="Tue May 03 18:40:33 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1044" docExpressionCount="87" docLength="1185" length="12" offset="757" repeat="12" starttimestamp="1651614162506" timestamp="3470966" timestamp2="3473988">
    <text><![CDATA[akeChangeIpc]]></text>
  </DocumentChange>
  <DocumentChange __id="3415" _type="Insert" date="Tue May 03 18:40:39 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1186" length="1" offset="769" starttimestamp="1651614162506" timestamp="3476556">
    <text><![CDATA[m]]></text>
  </DocumentChange>
  <Command __id="3425" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:40:42 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9851" docExpressionCount="902" docLength="10782" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3480149">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void "), Diff(DELETE,"p"), Diff(INSERT,"argumentP"), Diff(EQUAL,"rocess"), Diff(DELETE,"Args"), Diff(INSERT,"or"), Diff(EQUAL,"(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this."), Diff(DELETE,"p"), Diff(INSERT,"argumentP"), Diff(EQUAL,"rocess"), Diff(DELETE,"Args"), Diff(INSERT,"or"), Diff(EQUAL,"(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		"), Diff(DELETE,"//final int aProposalNumber = proposalNumber;¶		"), Diff(EQUAL,"System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶"), Diff(DELETE,""), Diff(EQUAL,"	}¶¶"), Diff(INSERT,"	@Override¶	public void processArgs(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶"), Diff(EQUAL,"¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}









}
]]></snapshot>
  </Command>
  <DocumentChange __id="3437" _type="Replace" date="Tue May 03 18:40:55 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9847" docExpressionCount="902" docLength="10778" endLine="283" insertionLength="14" int_docASTNodeCount="1263" int_docActiveCodeLength="9833" int_docExpressionCount="901" int_docLength="10764" length="18" offset="9923" startLine="283" starttimestamp="1651614162506" timestamp="3492864">
    <deletedText><![CDATA[changeIPCMechanism]]></deletedText>
    <insertedText><![CDATA[makeChangeIpcm]]></insertedText>
  </DocumentChange>
  <Command __id="3444" _type="PauseCommand" date="Tue May 03 18:40:59 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3497489">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3626]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3443" _type="ShellCommand" date="Tue May 03 18:40:59 EDT 2022" starttimestamp="1651614162506" timestamp="3497489" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3445" _type="ShellCommand" date="Tue May 03 18:41:00 EDT 2022" starttimestamp="1651614162506" timestamp="3497589" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3451" _type="PauseCommand" date="Tue May 03 18:41:02 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3499708">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2099]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3450" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:41:02 EDT 2022" starttimestamp="1651614162506" timestamp="3499708" />
  <Command __id="3452" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:02 EDT 2022" starttimestamp="1651614162506" timestamp="3499795" />
  <Command __id="3453" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:02 EDT 2022" starttimestamp="1651614162506" timestamp="3499843" />
  <Command __id="3455" _type="PauseCommand" date="Tue May 03 18:41:05 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3503251">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3408]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3454" _type="SelectTextCommand" caretOffset="9084" date="Tue May 03 18:41:05 EDT 2022" end="9242" start="9084" starttimestamp="1651614162506" timestamp="3503251" />
  <Command __id="3461" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 18:41:06 EDT 2022" starttimestamp="1651614162506" timestamp="3503927" />
  <Command __id="3462" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:41:07 EDT 2022" starttimestamp="1651614162506" timestamp="3504504" />
  <Command __id="3463" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:07 EDT 2022" starttimestamp="1651614162506" timestamp="3504643" />
  <Command __id="3464" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:07 EDT 2022" starttimestamp="1651614162506" timestamp="3504691" />
  <Command __id="3470" _type="UndoCommand" date="Tue May 03 18:41:08 EDT 2022" starttimestamp="1651614162506" timestamp="3505657" />
  <Command __id="3471" _type="MoveCaretCommand" caretOffset="9248" date="Tue May 03 18:41:08 EDT 2022" docOffset="10923" starttimestamp="1651614162506" timestamp="3506052" />
  <Command __id="3472" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:41:08 EDT 2022" starttimestamp="1651614162506" timestamp="3506373" />
  <Command __id="3473" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:08 EDT 2022" starttimestamp="1651614162506" timestamp="3506461" />
  <Command __id="3474" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:09 EDT 2022" starttimestamp="1651614162506" timestamp="3506508" />
  <Command __id="3475" _type="MoveCaretCommand" caretOffset="9248" date="Tue May 03 18:41:09 EDT 2022" docOffset="10923" starttimestamp="1651614162506" timestamp="3506772" />
  <Command __id="3477" _type="PauseCommand" date="Tue May 03 18:41:12 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3510441">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3669]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3478" _type="SelectTextCommand" caretOffset="329" date="Tue May 03 18:41:13 EDT 2022" end="329" start="318" starttimestamp="1651614162506" timestamp="3510623" />
  <Command __id="3480" _type="PauseCommand" date="Tue May 03 18:41:15 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3512901">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2278]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3481" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:41:15 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3513042" />
  <Command __id="3483" _type="PauseCommand" date="Tue May 03 18:41:17 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3515247">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2205]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3482" _type="MoveCaretCommand" caretOffset="367" date="Tue May 03 18:41:17 EDT 2022" docOffset="716" starttimestamp="1651614162506" timestamp="3515247" />
  <Command __id="3484" _type="SelectTextCommand" caretOffset="374" date="Tue May 03 18:41:17 EDT 2022" end="374" start="363" starttimestamp="1651614162506" timestamp="3515406" />
  <DocumentChange __id="3446" _type="Insert" date="Tue May 03 18:41:00 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9975" docExpressionCount="909" docLength="10940" length="162" offset="10755" repeat="4" starttimestamp="1651614162506" timestamp="3497609" timestamp2="3497616">
    <text><![CDATA[

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="3456" _type="Insert" date="Tue May 03 18:41:06 EDT 2022" docASTNodeCount="1276" docActiveCodeLength="9965" docExpressionCount="907" docLength="10942" length="2" offset="10759" starttimestamp="1651614162506" timestamp="3503908">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3457" _type="Insert" date="Tue May 03 18:41:06 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9865" docExpressionCount="902" docLength="10944" length="2" offset="10773" starttimestamp="1651614162506" timestamp="3503910">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3458" _type="Insert" date="Tue May 03 18:41:06 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9863" docExpressionCount="902" docLength="10946" length="2" offset="10877" starttimestamp="1651614162506" timestamp="3503911">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3459" _type="Insert" date="Tue May 03 18:41:06 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9861" docExpressionCount="902" docLength="10948" length="2" offset="10917" starttimestamp="1651614162506" timestamp="3503913">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3460" _type="Insert" date="Tue May 03 18:41:06 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9859" docExpressionCount="902" docLength="10950" length="2" offset="10923" starttimestamp="1651614162506" timestamp="3503914">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3465" _type="Delete" date="Tue May 03 18:41:08 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9861" docExpressionCount="902" docLength="10948" endLine="316" length="2" offset="10923" startLine="316" starttimestamp="1651614162506" timestamp="3505622">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3466" _type="Delete" date="Tue May 03 18:41:08 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9863" docExpressionCount="902" docLength="10946" endLine="315" length="2" offset="10917" startLine="315" starttimestamp="1651614162506" timestamp="3505627">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3467" _type="Delete" date="Tue May 03 18:41:08 EDT 2022" docASTNodeCount="1263" docActiveCodeLength="9865" docExpressionCount="902" docLength="10944" endLine="314" length="2" offset="10877" startLine="314" starttimestamp="1651614162506" timestamp="3505629">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3468" _type="Delete" date="Tue May 03 18:41:08 EDT 2022" docASTNodeCount="1276" docActiveCodeLength="9965" docExpressionCount="907" docLength="10942" endLine="313" length="2" offset="10773" startLine="313" starttimestamp="1651614162506" timestamp="3505630">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="3469" _type="Delete" date="Tue May 03 18:41:08 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9975" docExpressionCount="909" docLength="10940" endLine="312" length="2" offset="10759" startLine="312" starttimestamp="1651614162506" timestamp="3505631">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="3476" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:41:12 EDT 2022" docASTNodeCount="101" docActiveCodeLength="813" docExpressionCount="69" docLength="813" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3510441">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶¶	HalloweenCommandProcessor getCommandProcessor();¶	void simulateCommand(String aCommand);¶	void initiateNio(String[] args);¶¶	void setFactories();¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3479" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:41:15 EDT 2022" docASTNodeCount="120" docActiveCodeLength="918" docExpressionCount="81" docLength="952" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3512901">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3485" _type="Replace" date="Tue May 03 18:41:19 EDT 2022" docASTNodeCount="120" docActiveCodeLength="908" docExpressionCount="81" docLength="942" endLine="22" insertionLength="1" int_docASTNodeCount="117" int_docActiveCodeLength="907" int_docExpressionCount="79" int_docLength="941" length="11" offset="712" startLine="22" starttimestamp="1651614162506" timestamp="3516803">
    <deletedText><![CDATA[processArgs]]></deletedText>
    <insertedText><![CDATA[a]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3488" _type="Insert" date="Tue May 03 18:41:19 EDT 2022" docASTNodeCount="120" docActiveCodeLength="911" docExpressionCount="81" docLength="945" length="3" offset="713" repeat="3" starttimestamp="1651614162506" timestamp="3517021" timestamp2="3517499">
    <text><![CDATA[rgy]]></text>
  </DocumentChange>
  <DocumentChange __id="3494" _type="Delete" date="Tue May 03 18:41:20 EDT 2022" docASTNodeCount="120" docActiveCodeLength="910" docExpressionCount="81" docLength="944" endLine="22" length="1" offset="715" startLine="22" starttimestamp="1651614162506" timestamp="3518303">
    <text><![CDATA[y]]></text>
  </DocumentChange>
  <Command __id="3486" _type="PauseCommand" date="Tue May 03 18:41:19 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3516803">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1397]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3487" _type="InsertStringCommand" date="Tue May 03 18:41:19 EDT 2022" starttimestamp="1651614162506" timestamp="3516811" timestamp2="3516811">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3489" _type="InsertStringCommand" date="Tue May 03 18:41:19 EDT 2022" starttimestamp="1651614162506" timestamp="3517026" timestamp2="3517026">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3491" _type="InsertStringCommand" date="Tue May 03 18:41:19 EDT 2022" starttimestamp="1651614162506" timestamp="3517425" timestamp2="3517425">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3493" _type="InsertStringCommand" date="Tue May 03 18:41:20 EDT 2022" starttimestamp="1651614162506" timestamp="3517502" timestamp2="3517502">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="3495" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:41:20 EDT 2022" starttimestamp="1651614162506" timestamp="3518305" />
  <Command __id="3497" _type="InsertStringCommand" date="Tue May 03 18:41:21 EDT 2022" starttimestamp="1651614162506" timestamp="3519068" timestamp2="3519068">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3499" _type="InsertStringCommand" date="Tue May 03 18:41:21 EDT 2022" starttimestamp="1651614162506" timestamp="3519244" timestamp2="3519244">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3501" _type="InsertStringCommand" date="Tue May 03 18:41:21 EDT 2022" starttimestamp="1651614162506" timestamp="3519359" timestamp2="3519359">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3503" _type="InsertStringCommand" date="Tue May 03 18:41:21 EDT 2022" starttimestamp="1651614162506" timestamp="3519441" timestamp2="3519441">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3505" _type="InsertStringCommand" date="Tue May 03 18:41:22 EDT 2022" starttimestamp="1651614162506" timestamp="3519609" timestamp2="3519609">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3508" _type="PauseCommand" date="Tue May 03 18:41:23 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3521073">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1464]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3507" _type="InsertStringCommand" date="Tue May 03 18:41:23 EDT 2022" starttimestamp="1651614162506" timestamp="3521073" timestamp2="3521073">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="3510" _type="InsertStringCommand" date="Tue May 03 18:41:23 EDT 2022" starttimestamp="1651614162506" timestamp="3521273" timestamp2="3521273">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3512" _type="InsertStringCommand" date="Tue May 03 18:41:23 EDT 2022" starttimestamp="1651614162506" timestamp="3521394" timestamp2="3521394">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3514" _type="InsertStringCommand" date="Tue May 03 18:41:24 EDT 2022" starttimestamp="1651614162506" timestamp="3521513" timestamp2="3521513">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="3516" _type="InsertStringCommand" date="Tue May 03 18:41:24 EDT 2022" starttimestamp="1651614162506" timestamp="3521624" timestamp2="3521624">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3518" _type="InsertStringCommand" date="Tue May 03 18:41:24 EDT 2022" starttimestamp="1651614162506" timestamp="3521866" timestamp2="3521866">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3520" _type="InsertStringCommand" date="Tue May 03 18:41:24 EDT 2022" starttimestamp="1651614162506" timestamp="3521993" timestamp2="3521993">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3522" _type="InsertStringCommand" date="Tue May 03 18:41:24 EDT 2022" starttimestamp="1651614162506" timestamp="3522117" timestamp2="3522117">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3524" _type="InsertStringCommand" date="Tue May 03 18:41:24 EDT 2022" starttimestamp="1651614162506" timestamp="3522266" timestamp2="3522266">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3526" _type="InsertStringCommand" date="Tue May 03 18:41:25 EDT 2022" starttimestamp="1651614162506" timestamp="3523026" timestamp2="3523026">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3528" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:41:25 EDT 2022" starttimestamp="1651614162506" timestamp="3523385" />
  <Command __id="3530" _type="InsertStringCommand" date="Tue May 03 18:41:26 EDT 2022" starttimestamp="1651614162506" timestamp="3523537" timestamp2="3523537">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3532" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:41:26 EDT 2022" starttimestamp="1651614162506" timestamp="3523987" />
  <Command __id="3534" _type="InsertStringCommand" date="Tue May 03 18:41:26 EDT 2022" starttimestamp="1651614162506" timestamp="3524309" timestamp2="3524309">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="3536" _type="InsertStringCommand" date="Tue May 03 18:41:27 EDT 2022" starttimestamp="1651614162506" timestamp="3524495" timestamp2="3524495">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="3538" _type="InsertStringCommand" date="Tue May 03 18:41:27 EDT 2022" starttimestamp="1651614162506" timestamp="3524720" timestamp2="3524720">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3540" _type="InsertStringCommand" date="Tue May 03 18:41:27 EDT 2022" starttimestamp="1651614162506" timestamp="3524800" timestamp2="3524800">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3542" _type="InsertStringCommand" date="Tue May 03 18:41:27 EDT 2022" starttimestamp="1651614162506" timestamp="3524880" timestamp2="3524880">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3543" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:41:28 EDT 2022" starttimestamp="1651614162506" timestamp="3525526" />
  <Command __id="3544" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:28 EDT 2022" starttimestamp="1651614162506" timestamp="3525615" />
  <Command __id="3545" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:28 EDT 2022" starttimestamp="1651614162506" timestamp="3525666" />
  <Command __id="3546" _type="MoveCaretCommand" caretOffset="355" date="Tue May 03 18:41:28 EDT 2022" docOffset="704" starttimestamp="1651614162506" timestamp="3526485" />
  <Command __id="3547" _type="SelectTextCommand" caretOffset="362" date="Tue May 03 18:41:29 EDT 2022" end="362" start="355" starttimestamp="1651614162506" timestamp="3526598" />
  <Command __id="3548" _type="SelectTextCommand" caretOffset="377" date="Tue May 03 18:41:29 EDT 2022" end="377" start="376" starttimestamp="1651614162506" timestamp="3527436" />
  <Command __id="3549" _type="SelectTextCommand" caretOffset="385" date="Tue May 03 18:41:30 EDT 2022" end="385" start="363" starttimestamp="1651614162506" timestamp="3527573" />
  <Command __id="3550" _type="CopyCommand" date="Tue May 03 18:41:30 EDT 2022" starttimestamp="1651614162506" timestamp="3528111" />
  <Command __id="3552" _type="MoveCaretCommand" caretOffset="9248" date="Tue May 03 18:41:31 EDT 2022" docOffset="10923" starttimestamp="1651614162506" timestamp="3529091" />
  <Command __id="3554" _type="PauseCommand" date="Tue May 03 18:41:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3530344">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1253]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3553" _type="MoveCaretCommand" caretOffset="8987" date="Tue May 03 18:41:32 EDT 2022" docOffset="10662" starttimestamp="1651614162506" timestamp="3530344" />
  <Command __id="3555" _type="SelectTextCommand" caretOffset="8994" date="Tue May 03 18:41:32 EDT 2022" end="8994" start="8983" starttimestamp="1651614162506" timestamp="3530470" />
  <Command __id="3557" _type="PasteCommand" date="Tue May 03 18:41:33 EDT 2022" starttimestamp="1651614162506" timestamp="3531026" />
  <Command __id="3558" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:41:34 EDT 2022" starttimestamp="1651614162506" timestamp="3531625" />
  <Command __id="3559" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:34 EDT 2022" starttimestamp="1651614162506" timestamp="3531712" />
  <Command __id="3560" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:34 EDT 2022" starttimestamp="1651614162506" timestamp="3531762" />
  <Command __id="3562" _type="PauseCommand" date="Tue May 03 18:41:38 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3535812">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4050]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3563" _type="SelectTextCommand" caretOffset="385" date="Tue May 03 18:41:38 EDT 2022" end="385" start="363" starttimestamp="1651614162506" timestamp="3535935" />
  <Command __id="3565" _type="PauseCommand" date="Tue May 03 18:41:40 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3538485">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2550]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3564" _type="MoveCaretCommand" caretOffset="466" date="Tue May 03 18:41:40 EDT 2022" docOffset="815" starttimestamp="1651614162506" timestamp="3538485" />
  <Command __id="3566" _type="SelectTextCommand" caretOffset="471" date="Tue May 03 18:41:41 EDT 2022" end="471" start="455" starttimestamp="1651614162506" timestamp="3538625" />
  <Command __id="3568" _type="PauseCommand" date="Tue May 03 18:41:43 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3540721">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2096]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3569" _type="InsertStringCommand" date="Tue May 03 18:41:43 EDT 2022" starttimestamp="1651614162506" timestamp="3540728" timestamp2="3540728">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="3571" _type="InsertStringCommand" date="Tue May 03 18:41:43 EDT 2022" starttimestamp="1651614162506" timestamp="3540803" timestamp2="3540803">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3573" _type="InsertStringCommand" date="Tue May 03 18:41:43 EDT 2022" starttimestamp="1651614162506" timestamp="3540964" timestamp2="3540964">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3575" _type="InsertStringCommand" date="Tue May 03 18:41:43 EDT 2022" starttimestamp="1651614162506" timestamp="3541180" timestamp2="3541180">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3577" _type="InsertStringCommand" date="Tue May 03 18:41:43 EDT 2022" starttimestamp="1651614162506" timestamp="3541405" timestamp2="3541405">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3579" _type="InsertStringCommand" date="Tue May 03 18:41:43 EDT 2022" starttimestamp="1651614162506" timestamp="3541475" timestamp2="3541475">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3581" _type="InsertStringCommand" date="Tue May 03 18:41:44 EDT 2022" starttimestamp="1651614162506" timestamp="3541682" timestamp2="3541682">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3583" _type="InsertStringCommand" date="Tue May 03 18:41:44 EDT 2022" starttimestamp="1651614162506" timestamp="3541812" timestamp2="3541812">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3585" _type="InsertStringCommand" date="Tue May 03 18:41:45 EDT 2022" starttimestamp="1651614162506" timestamp="3542629" timestamp2="3542629">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3587" _type="InsertStringCommand" date="Tue May 03 18:41:45 EDT 2022" starttimestamp="1651614162506" timestamp="3542810" timestamp2="3542810">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3589" _type="InsertStringCommand" date="Tue May 03 18:41:45 EDT 2022" starttimestamp="1651614162506" timestamp="3543059" timestamp2="3543059">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3591" _type="InsertStringCommand" date="Tue May 03 18:41:45 EDT 2022" starttimestamp="1651614162506" timestamp="3543166" timestamp2="3543166">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3593" _type="InsertStringCommand" date="Tue May 03 18:41:46 EDT 2022" starttimestamp="1651614162506" timestamp="3543522" timestamp2="3543522">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3595" _type="InsertStringCommand" date="Tue May 03 18:41:46 EDT 2022" starttimestamp="1651614162506" timestamp="3543611" timestamp2="3543611">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3597" _type="InsertStringCommand" date="Tue May 03 18:41:46 EDT 2022" starttimestamp="1651614162506" timestamp="3543821" timestamp2="3543821">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3599" _type="InsertStringCommand" date="Tue May 03 18:41:46 EDT 2022" starttimestamp="1651614162506" timestamp="3543981" timestamp2="3543981">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3601" _type="InsertStringCommand" date="Tue May 03 18:41:46 EDT 2022" starttimestamp="1651614162506" timestamp="3544174" timestamp2="3544174">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3603" _type="InsertStringCommand" date="Tue May 03 18:41:46 EDT 2022" starttimestamp="1651614162506" timestamp="3544258" timestamp2="3544258">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3605" _type="PauseCommand" date="Tue May 03 18:41:48 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3545612">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1354]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3604" _type="MoveCaretCommand" caretOffset="464" date="Tue May 03 18:41:48 EDT 2022" docOffset="813" starttimestamp="1651614162506" timestamp="3545612" />
  <Command __id="3606" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue May 03 18:41:48 EDT 2022" starttimestamp="1651614162506" timestamp="3546416" />
  <Command __id="3608" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:41:49 EDT 2022" starttimestamp="1651614162506" timestamp="3546574" />
  <Command __id="3610" _type="InsertStringCommand" date="Tue May 03 18:41:49 EDT 2022" starttimestamp="1651614162506" timestamp="3546877" timestamp2="3546877">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3612" _type="InsertStringCommand" date="Tue May 03 18:41:49 EDT 2022" starttimestamp="1651614162506" timestamp="3547043" timestamp2="3547043">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3614" _type="InsertStringCommand" date="Tue May 03 18:41:49 EDT 2022" starttimestamp="1651614162506" timestamp="3547076" timestamp2="3547076">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3616" _type="PauseCommand" date="Tue May 03 18:41:50 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3548167">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1091]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3615" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:41:50 EDT 2022" starttimestamp="1651614162506" timestamp="3548167" />
  <Command __id="3617" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:50 EDT 2022" starttimestamp="1651614162506" timestamp="3548253" />
  <Command __id="3618" _type="EclipseCommand" commandID="" date="Tue May 03 18:41:50 EDT 2022" starttimestamp="1651614162506" timestamp="3548302" />
  <Command __id="3619" _type="MoveCaretCommand" caretOffset="470" date="Tue May 03 18:41:51 EDT 2022" docOffset="819" starttimestamp="1651614162506" timestamp="3548527" />
  <Command __id="3620" _type="SelectTextCommand" caretOffset="475" date="Tue May 03 18:41:51 EDT 2022" end="475" start="455" starttimestamp="1651614162506" timestamp="3548653" />
  <Command __id="3621" _type="CopyCommand" date="Tue May 03 18:41:51 EDT 2022" starttimestamp="1651614162506" timestamp="3549249" />
  <Command __id="3623" _type="MoveCaretCommand" caretOffset="9005" date="Tue May 03 18:41:52 EDT 2022" docOffset="10680" starttimestamp="1651614162506" timestamp="3550114" />
  <Command __id="3626" _type="PauseCommand" date="Tue May 03 18:41:55 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3553419">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3304]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3625" _type="ShellCommand" date="Tue May 03 18:41:55 EDT 2022" starttimestamp="1651614162506" timestamp="3553418" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3628" _type="PauseCommand" date="Tue May 03 18:41:59 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3556628">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3210]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3627" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:41:59 EDT 2022" forward="false" matchWord="false" offset="10680" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="3556628" wrapSearch="false">
    <searchString><![CDATA[simula]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3629" _type="ShellCommand" date="Tue May 03 18:41:59 EDT 2022" starttimestamp="1651614162506" timestamp="3557414" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3630" _type="MoveCaretCommand" caretOffset="6337" date="Tue May 03 18:42:00 EDT 2022" docOffset="8012" starttimestamp="1651614162506" timestamp="3558156" />
  <Command __id="3631" _type="SelectTextCommand" caretOffset="6342" date="Tue May 03 18:42:00 EDT 2022" end="6342" start="6334" starttimestamp="1651614162506" timestamp="3558302" />
  <Command __id="3632" _type="MoveCaretCommand" caretOffset="6291" date="Tue May 03 18:42:01 EDT 2022" docOffset="7966" starttimestamp="1651614162506" timestamp="3558804" />
  <Command __id="3633" _type="SelectTextCommand" caretOffset="6295" date="Tue May 03 18:42:01 EDT 2022" end="6295" start="6278" starttimestamp="1651614162506" timestamp="3558924" />
  <Command __id="3636" _type="PauseCommand" date="Tue May 03 18:42:05 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3562720">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3796]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3635" _type="ShellCommand" date="Tue May 03 18:42:05 EDT 2022" starttimestamp="1651614162506" timestamp="3562720" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3638" _type="PauseCommand" date="Tue May 03 18:42:09 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3566707">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3987]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3637" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:42:09 EDT 2022" forward="false" matchWord="false" offset="7970" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="3566707" wrapSearch="false">
    <searchString><![CDATA[simul]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3639" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:42:09 EDT 2022" forward="false" matchWord="false" offset="7958" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="3567154" wrapSearch="false">
    <searchString><![CDATA[simul]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3641" _type="PauseCommand" date="Tue May 03 18:42:11 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3568828">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1674]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3640" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:42:11 EDT 2022" forward="true" matchWord="false" offset="7958" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="3568828" wrapSearch="false">
    <searchString><![CDATA[simul]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3642" _type="ShellCommand" date="Tue May 03 18:42:12 EDT 2022" starttimestamp="1651614162506" timestamp="3569595" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3643" _type="MoveCaretCommand" caretOffset="6285" date="Tue May 03 18:42:12 EDT 2022" docOffset="7960" starttimestamp="1651614162506" timestamp="3570173" />
  <Command __id="3644" _type="SelectTextCommand" caretOffset="6295" date="Tue May 03 18:42:12 EDT 2022" end="6295" start="6278" starttimestamp="1651614162506" timestamp="3570305" />
  <Command __id="3646" _type="PasteCommand" date="Tue May 03 18:42:13 EDT 2022" starttimestamp="1651614162506" timestamp="3571113" />
  <Command __id="3647" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:42:14 EDT 2022" starttimestamp="1651614162506" timestamp="3571745" />
  <Command __id="3648" _type="EclipseCommand" commandID="" date="Tue May 03 18:42:14 EDT 2022" starttimestamp="1651614162506" timestamp="3571832" />
  <Command __id="3649" _type="EclipseCommand" commandID="" date="Tue May 03 18:42:14 EDT 2022" starttimestamp="1651614162506" timestamp="3571882" />
  <Command __id="3651" _type="PauseCommand" date="Tue May 03 18:42:16 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3574058">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2176]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3652" _type="SelectTextCommand" caretOffset="475" date="Tue May 03 18:42:16 EDT 2022" end="475" start="455" starttimestamp="1651614162506" timestamp="3574193" />
  <Command __id="3654" _type="PauseCommand" date="Tue May 03 18:42:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3575433">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1240]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3655" _type="UndoCommand" date="Tue May 03 18:42:17 EDT 2022" starttimestamp="1651614162506" timestamp="3575441" />
  <Command __id="3657" _type="PauseCommand" date="Tue May 03 18:42:19 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3577179">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1738]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3658" _type="UndoCommand" date="Tue May 03 18:42:19 EDT 2022" starttimestamp="1651614162506" timestamp="3577183" />
  <Command __id="3660" _type="UndoCommand" date="Tue May 03 18:42:20 EDT 2022" starttimestamp="1651614162506" timestamp="3577595" />
  <Command __id="3662" _type="UndoCommand" date="Tue May 03 18:42:20 EDT 2022" starttimestamp="1651614162506" timestamp="3578057" />
  <Command __id="3664" _type="PauseCommand" date="Tue May 03 18:42:23 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3581407">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[3350]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3665" _type="MoveCaretCommand" caretOffset="6298" date="Tue May 03 18:42:24 EDT 2022" docOffset="7973" starttimestamp="1651614162506" timestamp="3581516" />
  <Command __id="3667" _type="PauseCommand" date="Tue May 03 18:42:25 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3582723">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1207]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3668" _type="UndoCommand" date="Tue May 03 18:42:25 EDT 2022" starttimestamp="1651614162506" timestamp="3582735" />
  <Command __id="3670" _type="PauseCommand" date="Tue May 03 18:42:27 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3584763">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2028]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3671" _type="SelectTextCommand" caretOffset="471" date="Tue May 03 18:42:27 EDT 2022" end="471" start="455" starttimestamp="1651614162506" timestamp="3584847" />
  <Command __id="3673" _type="PauseCommand" date="Tue May 03 18:42:29 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3587478">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2631]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3674" _type="SelectTextCommand" caretOffset="6295" date="Tue May 03 18:42:30 EDT 2022" end="6295" start="6278" starttimestamp="1651614162506" timestamp="3587562" />
  <Command __id="3675" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:42:30 EDT 2022" starttimestamp="1651614162506" timestamp="3587857" />
  <Command __id="3676" _type="EclipseCommand" commandID="" date="Tue May 03 18:42:30 EDT 2022" starttimestamp="1651614162506" timestamp="3587943" />
  <Command __id="3677" _type="EclipseCommand" commandID="" date="Tue May 03 18:42:30 EDT 2022" starttimestamp="1651614162506" timestamp="3587996" />
  <Command __id="3679" _type="PauseCommand" date="Tue May 03 18:42:37 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3594499">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6503]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3678" _type="ShellCommand" date="Tue May 03 18:42:37 EDT 2022" starttimestamp="1651614162506" timestamp="3594499" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3680" _type="ShellCommand" date="Tue May 03 18:42:37 EDT 2022" starttimestamp="1651614162506" timestamp="3594590" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="3496" _type="Insert" date="Tue May 03 18:41:21 EDT 2022" docASTNodeCount="120" docActiveCodeLength="925" docExpressionCount="81" docLength="959" length="15" offset="715" repeat="15" starttimestamp="1651614162506" timestamp="3519066" timestamp2="3523023">
    <text><![CDATA[umentProcessorG]]></text>
  </DocumentChange>
  <DocumentChange __id="3527" _type="Delete" date="Tue May 03 18:41:25 EDT 2022" docASTNodeCount="120" docActiveCodeLength="924" docExpressionCount="81" docLength="958" endLine="22" length="1" offset="729" startLine="22" starttimestamp="1651614162506" timestamp="3523384">
    <text><![CDATA[G]]></text>
  </DocumentChange>
  <DocumentChange __id="3529" _type="Insert" date="Tue May 03 18:41:26 EDT 2022" docASTNodeCount="120" docActiveCodeLength="925" docExpressionCount="81" docLength="959" length="1" offset="729" starttimestamp="1651614162506" timestamp="3523534">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="3531" _type="Delete" date="Tue May 03 18:41:26 EDT 2022" docASTNodeCount="120" docActiveCodeLength="924" docExpressionCount="81" docLength="958" endLine="22" length="1" offset="729" startLine="22" starttimestamp="1651614162506" timestamp="3523985">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="3533" _type="Insert" date="Tue May 03 18:41:26 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" length="5" offset="729" repeat="5" starttimestamp="1651614162506" timestamp="3524306" timestamp2="3524877">
    <text><![CDATA[Again]]></text>
  </DocumentChange>
  <Command __id="3551" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:41:31 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9975" docExpressionCount="909" docLength="10940" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3529014">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void "), Diff(DELETE,"c"), Diff(INSERT,"makeC"), Diff(EQUAL,"hangeI"), Diff(DELETE,"PCMechanis"), Diff(INSERT,"pc"), Diff(EQUAL,"m(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void processArgs(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(EQUAL,"¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}









}
]]></snapshot>
  </Command>
  <DocumentChange __id="3556" _type="Replace" date="Tue May 03 18:41:33 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" endLine="307" insertionLength="22" int_docASTNodeCount="1276" int_docActiveCodeLength="9964" int_docExpressionCount="907" int_docLength="10929" length="11" offset="10658" startLine="307" starttimestamp="1651614162506" timestamp="3531015">
    <deletedText><![CDATA[processArgs]]></deletedText>
    <insertedText><![CDATA[argumentProcessorAgain]]></insertedText>
  </DocumentChange>
  <Command __id="3561" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:41:38 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3535812">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void "), Diff(DELETE,"processArgs"), Diff(INSERT,"argumentProcessorAgain"), Diff(EQUAL,"(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void argumentProcessorAgain(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3567" _type="Replace" date="Tue May 03 18:41:43 EDT 2022" docASTNodeCount="120" docActiveCodeLength="914" docExpressionCount="81" docLength="948" endLine="24" insertionLength="1" int_docASTNodeCount="118" int_docActiveCodeLength="913" int_docExpressionCount="80" int_docLength="947" length="16" offset="804" startLine="24" starttimestamp="1651614162506" timestamp="3540721">
    <deletedText><![CDATA[createSimulation]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3570" _type="Insert" date="Tue May 03 18:41:43 EDT 2022" docASTNodeCount="120" docActiveCodeLength="931" docExpressionCount="81" docLength="965" length="17" offset="805" repeat="17" starttimestamp="1651614162506" timestamp="3540800" timestamp2="3544256">
    <text><![CDATA[imulateGeneration]]></text>
  </DocumentChange>
  <DocumentChange __id="3607" _type="Delete" date="Tue May 03 18:41:49 EDT 2022" docASTNodeCount="120" docActiveCodeLength="930" docExpressionCount="81" docLength="964" endLine="24" length="1" offset="811" startLine="24" starttimestamp="1651614162506" timestamp="3546573">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="3609" _type="Insert" date="Tue May 03 18:41:49 EDT 2022" docASTNodeCount="120" docActiveCodeLength="933" docExpressionCount="81" docLength="967" length="3" offset="811" repeat="3" starttimestamp="1651614162506" timestamp="3546874" timestamp2="3547074">
    <text><![CDATA[ion]]></text>
  </DocumentChange>
  <Command __id="3622" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:41:52 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3549998">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void "), Diff(DELETE,"processArgs"), Diff(INSERT,"argumentProcessorAgain"), Diff(EQUAL,"(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void argumentProcessorAgain(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}









}
]]></snapshot>
  </Command>
  <DocumentChange __id="3645" _type="Replace" date="Tue May 03 18:42:13 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9989" docExpressionCount="909" docLength="10954" endLine="221" insertionLength="20" int_docASTNodeCount="1277" int_docActiveCodeLength="9969" int_docExpressionCount="908" int_docLength="10934" length="17" offset="7953" startLine="221" starttimestamp="1651614162506" timestamp="3571104">
    <deletedText><![CDATA[simulationCommand]]></deletedText>
    <insertedText><![CDATA[simulationGeneration]]></insertedText>
  </DocumentChange>
  <Command __id="3650" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:42:16 EDT 2022" docASTNodeCount="120" docActiveCodeLength="933" docExpressionCount="81" docLength="967" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3574058">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessorAgain(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor "), Diff(DELETE,"createSimul"), Diff(INSERT,"simulationGener"), Diff(EQUAL,"ation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void argumentProcessorAgain(String[] args) throws RemoteException;

	HalloweenCommandProcessor simulationGeneration(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="3653" _type="Delete" date="Tue May 03 18:42:17 EDT 2022" docASTNodeCount="120" docActiveCodeLength="930" docExpressionCount="81" docLength="964" endLine="24" length="3" offset="811" startLine="24" starttimestamp="1651614162506" timestamp="3575433">
    <text><![CDATA[ion]]></text>
  </DocumentChange>
  <DocumentChange __id="3656" _type="Insert" date="Tue May 03 18:42:19 EDT 2022" docASTNodeCount="120" docActiveCodeLength="931" docExpressionCount="81" docLength="965" length="1" offset="811" starttimestamp="1651614162506" timestamp="3577179">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="3659" _type="Delete" date="Tue May 03 18:42:20 EDT 2022" docASTNodeCount="120" docActiveCodeLength="914" docExpressionCount="81" docLength="948" endLine="24" length="17" offset="805" startLine="24" starttimestamp="1651614162506" timestamp="3577588">
    <text><![CDATA[imulateGeneration]]></text>
  </DocumentChange>
  <DocumentChange __id="3661" _type="Replace" date="Tue May 03 18:42:20 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" endLine="24" insertionLength="16" int_docASTNodeCount="118" int_docActiveCodeLength="913" int_docExpressionCount="80" int_docLength="947" length="1" offset="804" startLine="24" starttimestamp="1651614162506" timestamp="3578050">
    <deletedText><![CDATA[s]]></deletedText>
    <insertedText><![CDATA[createSimulation]]></insertedText>
  </DocumentChange>
  <Command __id="3663" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:42:23 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9989" docExpressionCount="909" docLength="10954" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3581407">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulation"), Diff(DELETE,"Command"), Diff(INSERT,"Generation"), Diff(EQUAL,"(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationGeneration(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void argumentProcessorAgain(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}









}
]]></snapshot>
  </Command>
  <DocumentChange __id="3666" _type="Replace" date="Tue May 03 18:42:25 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" endLine="221" insertionLength="17" int_docASTNodeCount="1277" int_docActiveCodeLength="9969" int_docExpressionCount="908" int_docLength="10934" length="20" offset="7953" startLine="221" starttimestamp="1651614162506" timestamp="3582723">
    <deletedText><![CDATA[simulationGeneration]]></deletedText>
    <insertedText><![CDATA[simulationCommand]]></insertedText>
  </DocumentChange>
  <Command __id="3669" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:42:27 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3584763">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessorAgain(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor "), Diff(DELETE,"simulationGener"), Diff(INSERT,"createSimul"), Diff(EQUAL,"ation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void argumentProcessorAgain(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="3672" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:42:29 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3587478">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulation"), Diff(DELETE,"Generation"), Diff(INSERT,"Command"), Diff(EQUAL,"(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */
	public void simulationCommand(String aCommand) {
		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void argumentProcessorAgain(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}









}
]]></snapshot>
  </Command>
  <DocumentChange __id="3681" _type="Insert" date="Tue May 03 18:42:37 EDT 2022" docASTNodeCount="1279" docActiveCodeLength="9995" docExpressionCount="909" docLength="10960" length="9" offset="1825" repeat="2" starttimestamp="1651614162506" timestamp="3594605" timestamp2="3594606">
    <text><![CDATA[ abstract]]></text>
  </DocumentChange>
  <Command __id="3684" _type="PauseCommand" date="Tue May 03 18:42:38 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3596191">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1586]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3686" _type="UndoCommand" date="Tue May 03 18:42:38 EDT 2022" starttimestamp="1651614162506" timestamp="3596212" />
  <Command __id="3688" _type="PauseCommand" date="Tue May 03 18:42:40 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3598167">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1955]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3687" _type="ShellCommand" date="Tue May 03 18:42:40 EDT 2022" starttimestamp="1651614162506" timestamp="3598167" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3689" _type="ShellCommand" date="Tue May 03 18:42:40 EDT 2022" starttimestamp="1651614162506" timestamp="3598269" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3690" _type="ShellCommand" date="Tue May 03 18:42:40 EDT 2022" starttimestamp="1651614162506" timestamp="3598292" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3692" _type="PauseCommand" date="Tue May 03 18:42:41 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3599441">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1149]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3691" _type="ShellCommand" date="Tue May 03 18:42:41 EDT 2022" starttimestamp="1651614162506" timestamp="3599441" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3693" _type="BalloonCommand" date="Tue May 03 18:42:42 EDT 2022" message="*******************************************
Worked 34 minutes(fixed)/60 minutes(context based) from
Tue May 03 17:42:42 EDT 2022 to Tue May 03 18:42:41 EDT 2022
Edited 2 Projects: 
	533Assignment5
	533Assignment060
Edited 13 Files: 
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\RMIAndGIPCClient.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\RMIClient.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\GIPCClient.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObjectNIO.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\RemoteClientObject.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\ClientInterface.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\Client.java
Number of insert: 3967
Number of delete: 8267
" starttimestamp="1651614162506" timestamp="3600105">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[3967]]></insert>
    <startTime><![CDATA[1651614162508]]></startTime>
    <endTime><![CDATA[1651617761947]]></endTime>
    <workTime><![CDATA[34]]></workTime>
    <delete><![CDATA[8267]]></delete>
  </Command>
  <Command __id="3694" _type="MoveCaretCommand" caretOffset="655" date="Tue May 03 18:42:42 EDT 2022" docOffset="2330" starttimestamp="1651614162506" timestamp="3600235" />
  <Command __id="3696" _type="PauseCommand" date="Tue May 03 18:42:44 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3601602">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1367]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3697" _type="SelectTextCommand" caretOffset="471" date="Tue May 03 18:42:44 EDT 2022" end="471" start="455" starttimestamp="1651614162506" timestamp="3601698" />
  <Command __id="3698" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:42:44 EDT 2022" starttimestamp="1651614162506" timestamp="3601838" />
  <Command __id="3699" _type="EclipseCommand" commandID="" date="Tue May 03 18:42:44 EDT 2022" starttimestamp="1651614162506" timestamp="3601924" />
  <Command __id="3700" _type="EclipseCommand" commandID="" date="Tue May 03 18:42:44 EDT 2022" starttimestamp="1651614162506" timestamp="3601974" />
  <Command __id="3701" _type="MoveCaretCommand" caretOffset="353" date="Tue May 03 18:42:44 EDT 2022" docOffset="702" starttimestamp="1651614162506" timestamp="3602213" />
  <Command __id="3703" _type="MoveCaretCommand" caretOffset="655" date="Tue May 03 18:42:45 EDT 2022" docOffset="2330" starttimestamp="1651614162506" timestamp="3603026" />
  <Command __id="3705" _type="PauseCommand" date="Tue May 03 18:42:47 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3604693">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1667]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3704" _type="MoveCaretCommand" caretOffset="778" date="Tue May 03 18:42:47 EDT 2022" docOffset="2453" starttimestamp="1651614162506" timestamp="3604693" />
  <Command __id="3707" _type="ShellCommand" date="Tue May 03 18:42:48 EDT 2022" starttimestamp="1651614162506" timestamp="3605514" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3709" _type="PauseCommand" date="Tue May 03 18:42:50 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3608471">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2957]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="3708" _type="FindCommand" caseSensitive="true" date="Tue May 03 18:42:50 EDT 2022" forward="true" matchWord="false" offset="2453" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651614162506" timestamp="3608471" wrapSearch="false">
    <searchString><![CDATA[command]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="3710" _type="ShellCommand" date="Tue May 03 18:42:51 EDT 2022" starttimestamp="1651614162506" timestamp="3609276" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3712" _type="PauseCommand" date="Tue May 03 18:42:54 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3612361">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3085]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3713" _type="MoveCaretCommand" caretOffset="353" date="Tue May 03 18:42:54 EDT 2022" docOffset="702" starttimestamp="1651614162506" timestamp="3612446" />
  <Command __id="3715" _type="PauseCommand" date="Tue May 03 18:42:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3614096">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1650]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3714" _type="MoveCaretCommand" caretOffset="464" date="Tue May 03 18:42:56 EDT 2022" docOffset="813" starttimestamp="1651614162506" timestamp="3614096" />
  <Command __id="3716" _type="SelectTextCommand" caretOffset="471" date="Tue May 03 18:42:56 EDT 2022" end="471" start="455" starttimestamp="1651614162506" timestamp="3614215" />
  <Command __id="3718" _type="PauseCommand" date="Tue May 03 18:42:57 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3615445">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1230]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3719" _type="InsertStringCommand" date="Tue May 03 18:42:57 EDT 2022" starttimestamp="1651614162506" timestamp="3615464" timestamp2="3615464">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="3721" _type="InsertStringCommand" date="Tue May 03 18:42:58 EDT 2022" starttimestamp="1651614162506" timestamp="3615648" timestamp2="3615648">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3723" _type="InsertStringCommand" date="Tue May 03 18:42:58 EDT 2022" starttimestamp="1651614162506" timestamp="3615818" timestamp2="3615818">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="3725" _type="InsertStringCommand" date="Tue May 03 18:42:58 EDT 2022" starttimestamp="1651614162506" timestamp="3616009" timestamp2="3616009">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="3727" _type="InsertStringCommand" date="Tue May 03 18:42:58 EDT 2022" starttimestamp="1651614162506" timestamp="3616199" timestamp2="3616199">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="3729" _type="InsertStringCommand" date="Tue May 03 18:42:58 EDT 2022" starttimestamp="1651614162506" timestamp="3616299" timestamp2="3616299">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3731" _type="InsertStringCommand" date="Tue May 03 18:42:58 EDT 2022" starttimestamp="1651614162506" timestamp="3616469" timestamp2="3616469">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3733" _type="InsertStringCommand" date="Tue May 03 18:42:59 EDT 2022" starttimestamp="1651614162506" timestamp="3616599" timestamp2="3616599">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="3735" _type="InsertStringCommand" date="Tue May 03 18:42:59 EDT 2022" starttimestamp="1651614162506" timestamp="3616746" timestamp2="3616746">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3737" _type="InsertStringCommand" date="Tue May 03 18:42:59 EDT 2022" starttimestamp="1651614162506" timestamp="3616809" timestamp2="3616809">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3739" _type="InsertStringCommand" date="Tue May 03 18:43:00 EDT 2022" starttimestamp="1651614162506" timestamp="3617591" timestamp2="3617591">
    <data><![CDATA[G]]></data>
  </Command>
  <Command __id="3741" _type="InsertStringCommand" date="Tue May 03 18:43:00 EDT 2022" starttimestamp="1651614162506" timestamp="3617712" timestamp2="3617712">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3743" _type="InsertStringCommand" date="Tue May 03 18:43:00 EDT 2022" starttimestamp="1651614162506" timestamp="3617902" timestamp2="3617902">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="3745" _type="InsertStringCommand" date="Tue May 03 18:43:00 EDT 2022" starttimestamp="1651614162506" timestamp="3617992" timestamp2="3617992">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="3747" _type="InsertStringCommand" date="Tue May 03 18:43:00 EDT 2022" starttimestamp="1651614162506" timestamp="3618233" timestamp2="3618233">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3749" _type="InsertStringCommand" date="Tue May 03 18:43:00 EDT 2022" starttimestamp="1651614162506" timestamp="3618344" timestamp2="3618344">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="3751" _type="InsertStringCommand" date="Tue May 03 18:43:01 EDT 2022" starttimestamp="1651614162506" timestamp="3618633" timestamp2="3618633">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="3753" _type="InsertStringCommand" date="Tue May 03 18:43:01 EDT 2022" starttimestamp="1651614162506" timestamp="3618713" timestamp2="3618713">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="3755" _type="InsertStringCommand" date="Tue May 03 18:43:01 EDT 2022" starttimestamp="1651614162506" timestamp="3618831" timestamp2="3618831">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="3756" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:43:02 EDT 2022" starttimestamp="1651614162506" timestamp="3619795" />
  <Command __id="3757" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:02 EDT 2022" starttimestamp="1651614162506" timestamp="3619881" />
  <Command __id="3758" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:02 EDT 2022" starttimestamp="1651614162506" timestamp="3619930" />
  <Command __id="3759" _type="MoveCaretCommand" caretOffset="469" date="Tue May 03 18:43:03 EDT 2022" docOffset="818" starttimestamp="1651614162506" timestamp="3620782" />
  <Command __id="3760" _type="SelectTextCommand" caretOffset="474" date="Tue May 03 18:43:03 EDT 2022" end="474" start="455" starttimestamp="1651614162506" timestamp="3620902" />
  <Command __id="3761" _type="CopyCommand" date="Tue May 03 18:43:04 EDT 2022" starttimestamp="1651614162506" timestamp="3621646" />
  <Command __id="3763" _type="SelectTextCommand" caretOffset="3429" date="Tue May 03 18:43:04 EDT 2022" end="3429" start="3422" starttimestamp="1651614162506" timestamp="3622231" />
  <Command __id="3765" _type="PauseCommand" date="Tue May 03 18:43:05 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3623377">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1146]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3764" _type="MoveCaretCommand" caretOffset="3450" date="Tue May 03 18:43:05 EDT 2022" docOffset="5125" starttimestamp="1651614162506" timestamp="3623377" />
  <Command __id="3766" _type="SelectTextCommand" caretOffset="3457" date="Tue May 03 18:43:06 EDT 2022" end="3457" start="3441" starttimestamp="1651614162506" timestamp="3623511" />
  <Command __id="3768" _type="PasteCommand" date="Tue May 03 18:43:06 EDT 2022" starttimestamp="1651614162506" timestamp="3624319" />
  <Command __id="3770" _type="PauseCommand" date="Tue May 03 18:43:09 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3627318">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2999]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3769" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:43:09 EDT 2022" starttimestamp="1651614162506" timestamp="3627318" />
  <Command __id="3771" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:09 EDT 2022" starttimestamp="1651614162506" timestamp="3627455" />
  <Command __id="3772" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:09 EDT 2022" starttimestamp="1651614162506" timestamp="3627473" />
  <Command __id="3774" _type="PauseCommand" date="Tue May 03 18:43:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3631830">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4357]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3773" _type="ShellCommand" date="Tue May 03 18:43:14 EDT 2022" starttimestamp="1651614162506" timestamp="3631830" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3775" _type="ShellCommand" date="Tue May 03 18:43:14 EDT 2022" starttimestamp="1651614162506" timestamp="3631907" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3786" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:43:15 EDT 2022" starttimestamp="1651614162506" timestamp="3632856" />
  <Command __id="3787" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:15 EDT 2022" starttimestamp="1651614162506" timestamp="3632944" />
  <Command __id="3788" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:15 EDT 2022" starttimestamp="1651614162506" timestamp="3632964" />
  <Command __id="3789" _type="MoveCaretCommand" caretOffset="3686" date="Tue May 03 18:43:15 EDT 2022" docOffset="5361" starttimestamp="1651614162506" timestamp="3633292" />
  <Command __id="3791" _type="PauseCommand" date="Tue May 03 18:43:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3634503">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1211]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="3801" _type="UndoCommand" date="Tue May 03 18:43:17 EDT 2022" starttimestamp="1651614162506" timestamp="3634605" />
  <Command __id="3803" _type="UndoCommand" date="Tue May 03 18:43:18 EDT 2022" starttimestamp="1651614162506" timestamp="3635496" />
  <Command __id="3804" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:43:18 EDT 2022" starttimestamp="1651614162506" timestamp="3636481" />
  <Command __id="3805" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:19 EDT 2022" starttimestamp="1651614162506" timestamp="3636569" />
  <Command __id="3806" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:19 EDT 2022" starttimestamp="1651614162506" timestamp="3636587" />
  <Command __id="3807" _type="MoveCaretCommand" caretOffset="3998" date="Tue May 03 18:43:19 EDT 2022" docOffset="5673" starttimestamp="1651614162506" timestamp="3637318" />
  <Command __id="3809" _type="PauseCommand" date="Tue May 03 18:43:24 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3642469">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5151]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3808" _type="ShellCommand" date="Tue May 03 18:43:24 EDT 2022" starttimestamp="1651614162506" timestamp="3642469" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3810" _type="ShellCommand" date="Tue May 03 18:43:25 EDT 2022" starttimestamp="1651614162506" timestamp="3642559" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3816" _type="PauseCommand" date="Tue May 03 18:43:40 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="3658062">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[15486]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3815" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:43:40 EDT 2022" starttimestamp="1651614162506" timestamp="3658062" />
  <Command __id="3817" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:40 EDT 2022" starttimestamp="1651614162506" timestamp="3658150" />
  <Command __id="3818" _type="EclipseCommand" commandID="" date="Tue May 03 18:43:40 EDT 2022" starttimestamp="1651614162506" timestamp="3658237" />
  <Command __id="3820" _type="PauseCommand" date="Tue May 03 18:43:47 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3665025">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6788]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3819" _type="SelectTextCommand" caretOffset="6185" date="Tue May 03 18:43:47 EDT 2022" end="6263" start="6185" starttimestamp="1651614162506" timestamp="3665025" />
  <Command __id="3822" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:43:48 EDT 2022" starttimestamp="1651614162506" timestamp="3665649" />
  <Command __id="3824" _type="PauseCommand" date="Tue May 03 18:43:50 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3667731">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2082]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3823" _type="SelectTextCommand" caretOffset="6238" date="Tue May 03 18:43:50 EDT 2022" end="6333" start="6238" starttimestamp="1651614162506" timestamp="3667731" />
  <Command __id="3826" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:43:50 EDT 2022" starttimestamp="1651614162506" timestamp="3668243" />
  <Command __id="3828" _type="PauseCommand" date="Tue May 03 18:43:59 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3676991">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8748]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3827" _type="SelectTextCommand" caretOffset="2778" date="Tue May 03 18:43:59 EDT 2022" end="3265" start="2778" starttimestamp="1651614162506" timestamp="3676991" />
  <Command __id="3830" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:44:00 EDT 2022" starttimestamp="1651614162506" timestamp="3677942" />
  <Command __id="3831" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:44:00 EDT 2022" starttimestamp="1651614162506" timestamp="3678398" />
  <Command __id="3832" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:00 EDT 2022" starttimestamp="1651614162506" timestamp="3678486" />
  <Command __id="3833" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:01 EDT 2022" starttimestamp="1651614162506" timestamp="3678505" />
  <Command __id="3835" _type="PauseCommand" date="Tue May 03 18:44:04 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3681769">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3264]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3834" _type="MoveCaretCommand" caretOffset="1973" date="Tue May 03 18:44:04 EDT 2022" docOffset="3648" starttimestamp="1651614162506" timestamp="3681769" />
  <Command __id="3836" _type="SelectTextCommand" caretOffset="1974" date="Tue May 03 18:44:04 EDT 2022" end="1974" start="1970" starttimestamp="1651614162506" timestamp="3681901" />
  <Command __id="3837" _type="SelectTextCommand" caretOffset="1992" date="Tue May 03 18:44:04 EDT 2022" end="1992" start="1933" starttimestamp="1651614162506" timestamp="3682021" />
  <Command __id="3839" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:44:05 EDT 2022" starttimestamp="1651614162506" timestamp="3682624" />
  <Command __id="3841" _type="PauseCommand" date="Tue May 03 18:44:08 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3685777">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3153]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3840" _type="SelectTextCommand" caretOffset="1524" date="Tue May 03 18:44:08 EDT 2022" end="1931" start="1524" starttimestamp="1651614162506" timestamp="3685777" />
  <Command __id="3843" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:44:08 EDT 2022" starttimestamp="1651614162506" timestamp="3686304" />
  <Command __id="3844" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:44:09 EDT 2022" starttimestamp="1651614162506" timestamp="3686681" />
  <Command __id="3845" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:09 EDT 2022" starttimestamp="1651614162506" timestamp="3686770" />
  <Command __id="3846" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:09 EDT 2022" starttimestamp="1651614162506" timestamp="3686789" />
  <Command __id="3848" _type="PauseCommand" date="Tue May 03 18:44:18 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3696353">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9564]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3849" _type="MoveCaretCommand" caretOffset="613" date="Tue May 03 18:44:19 EDT 2022" docOffset="732" starttimestamp="1651614162506" timestamp="3696499" />
  <Command __id="3851" _type="PauseCommand" date="Tue May 03 18:44:20 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3698011">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1512]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3850" _type="ShellCommand" date="Tue May 03 18:44:20 EDT 2022" starttimestamp="1651614162506" timestamp="3698011" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3853" _type="PauseCommand" date="Tue May 03 18:44:22 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3699648">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1637]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3852" _type="ShellCommand" date="Tue May 03 18:44:22 EDT 2022" starttimestamp="1651614162506" timestamp="3699648" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3855" _type="PauseCommand" date="Tue May 03 18:44:23 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3700861">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1213]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3854" _type="ShellCommand" date="Tue May 03 18:44:23 EDT 2022" starttimestamp="1651614162506" timestamp="3700861" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3856" _type="ShellCommand" date="Tue May 03 18:44:24 EDT 2022" starttimestamp="1651614162506" timestamp="3701779" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3858" _type="MoveCaretCommand" caretOffset="11061" date="Tue May 03 18:44:24 EDT 2022" docOffset="11061" starttimestamp="1651614162506" timestamp="3701911" />
  <Command __id="3860" _type="PauseCommand" date="Tue May 03 18:44:30 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3707924">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6013]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3859" _type="MoveCaretCommand" caretOffset="3593" date="Tue May 03 18:44:30 EDT 2022" docOffset="3593" starttimestamp="1651614162506" timestamp="3707924" />
  <Command __id="3861" _type="SelectTextCommand" caretOffset="3597" date="Tue May 03 18:44:30 EDT 2022" end="3597" start="3586" starttimestamp="1651614162506" timestamp="3708057" />
  <Command __id="3863" _type="PauseCommand" date="Tue May 03 18:44:33 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3710845">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2788]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="3862" _type="InsertStringCommand" date="Tue May 03 18:44:33 EDT 2022" starttimestamp="1651614162506" timestamp="3710845" timestamp2="3710845">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="3865" _type="PauseCommand" date="Tue May 03 18:44:37 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3715096">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[4251]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3866" _type="PasteCommand" date="Tue May 03 18:44:37 EDT 2022" starttimestamp="1651614162506" timestamp="3715107" />
  <Command __id="3867" _type="MoveCaretCommand" caretOffset="3691" date="Tue May 03 18:44:38 EDT 2022" docOffset="3691" starttimestamp="1651614162506" timestamp="3715707" />
  <Command __id="3869" _type="PauseCommand" date="Tue May 03 18:44:39 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3716887">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1180]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3868" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:44:39 EDT 2022" starttimestamp="1651614162506" timestamp="3716887" />
  <Command __id="3870" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:39 EDT 2022" starttimestamp="1651614162506" timestamp="3716975" />
  <Command __id="3871" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:39 EDT 2022" starttimestamp="1651614162506" timestamp="3716999" />
  <Command __id="3873" _type="PauseCommand" date="Tue May 03 18:44:42 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3719762">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2763]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3872" _type="MoveCaretCommand" caretOffset="3604" date="Tue May 03 18:44:42 EDT 2022" docOffset="3604" starttimestamp="1651614162506" timestamp="3719762" />
  <Command __id="3874" _type="SelectTextCommand" caretOffset="3608" date="Tue May 03 18:44:42 EDT 2022" end="3608" start="3586" starttimestamp="1651614162506" timestamp="3719887" />
  <Command __id="3875" _type="CopyCommand" date="Tue May 03 18:44:42 EDT 2022" starttimestamp="1651614162506" timestamp="3720483" />
  <Command __id="3877" _type="PauseCommand" date="Tue May 03 18:44:45 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3723194">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2711]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3876" _type="MoveCaretCommand" caretOffset="5416" date="Tue May 03 18:44:45 EDT 2022" docOffset="5416" starttimestamp="1651614162506" timestamp="3723194" />
  <Command __id="3878" _type="SelectTextCommand" caretOffset="5421" date="Tue May 03 18:44:45 EDT 2022" end="5421" start="5410" starttimestamp="1651614162506" timestamp="3723333" />
  <Command __id="3880" _type="PasteCommand" date="Tue May 03 18:44:46 EDT 2022" starttimestamp="1651614162506" timestamp="3723869" />
  <Command __id="3881" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:44:46 EDT 2022" starttimestamp="1651614162506" timestamp="3724429" />
  <Command __id="3882" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:47 EDT 2022" starttimestamp="1651614162506" timestamp="3724512" />
  <Command __id="3883" _type="EclipseCommand" commandID="" date="Tue May 03 18:44:47 EDT 2022" starttimestamp="1651614162506" timestamp="3724547" />
  <Command __id="3884" _type="MoveCaretCommand" caretOffset="5401" date="Tue May 03 18:44:47 EDT 2022" docOffset="5401" starttimestamp="1651614162506" timestamp="3725391" />
  <Command __id="3886" _type="PauseCommand" date="Tue May 03 18:44:49 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3727057">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1666]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3887" _type="MoveCaretCommand" caretOffset="613" date="Tue May 03 18:44:49 EDT 2022" docOffset="732" starttimestamp="1651614162506" timestamp="3727253" />
  <Command __id="3889" _type="PauseCommand" date="Tue May 03 18:44:50 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3728341">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1088]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3888" _type="ShellCommand" date="Tue May 03 18:44:50 EDT 2022" starttimestamp="1651614162506" timestamp="3728341" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3891" _type="PauseCommand" date="Tue May 03 18:44:52 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3729913">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1572]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3890" _type="ShellCommand" date="Tue May 03 18:44:52 EDT 2022" starttimestamp="1651614162506" timestamp="3729913" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3892" _type="ShellCommand" date="Tue May 03 18:44:53 EDT 2022" starttimestamp="1651614162506" timestamp="3730827" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="3683" _type="Delete" date="Tue May 03 18:42:38 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" endLine="45" length="9" offset="1825" repeat="2" startLine="45" starttimestamp="1651614162506" timestamp="3596191" timestamp2="3596199">
    <text><![CDATA[ abstract]]></text>
  </DocumentChange>
  <Command __id="3695" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:42:44 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3601602">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessorAgain(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3702" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:42:45 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3602911">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3711" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:42:54 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3612361">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessorAgain(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3717" _type="Replace" date="Tue May 03 18:42:57 EDT 2022" docASTNodeCount="120" docActiveCodeLength="914" docExpressionCount="81" docLength="948" endLine="24" insertionLength="1" int_docASTNodeCount="118" int_docActiveCodeLength="913" int_docExpressionCount="80" int_docLength="947" length="16" offset="804" startLine="24" starttimestamp="1651614162506" timestamp="3615445">
    <deletedText><![CDATA[createSimulation]]></deletedText>
    <insertedText><![CDATA[S]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3720" _type="Insert" date="Tue May 03 18:42:58 EDT 2022" docASTNodeCount="120" docActiveCodeLength="932" docExpressionCount="81" docLength="966" length="18" offset="805" repeat="18" starttimestamp="1651614162506" timestamp="3615645" timestamp2="3618829">
    <text><![CDATA[imulationGenerator]]></text>
  </DocumentChange>
  <Command __id="3762" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:43:04 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3622146">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="3767" _type="Replace" date="Tue May 03 18:43:06 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9989" docExpressionCount="909" docLength="10954" endLine="139" insertionLength="19" int_docASTNodeCount="1277" int_docActiveCodeLength="9970" int_docExpressionCount="908" int_docLength="10935" length="16" offset="5116" startLine="139" starttimestamp="1651614162506" timestamp="3624307">
    <deletedText><![CDATA[createSimulation]]></deletedText>
    <insertedText><![CDATA[SimulationGenerator]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3776" _type="Delete" date="Tue May 03 18:43:14 EDT 2022" docASTNodeCount="1270" docActiveCodeLength="9918" docExpressionCount="902" docLength="10883" endLine="139" length="71" offset="5097" startLine="139" starttimestamp="1651614162506" timestamp="3631933">
    <text><![CDATA[commandProcessor = SimulationGenerator(Simulation1.SIMULATION1_PREFIX);]]></text>
  </DocumentChange>
  <DocumentChange __id="3777" _type="Insert" date="Tue May 03 18:43:14 EDT 2022" docASTNodeCount="1290" docActiveCodeLength="10069" docExpressionCount="914" docLength="11068" length="185" offset="5097" repeat="9" starttimestamp="1651614162506" timestamp="3631942" timestamp2="3631999">
    <text><![CDATA[try {
			commandProcessor = SimulationGenerator(Simulation1.SIMULATION1_PREFIX);
		} catch (RemoteException e4) {
			// TODO Auto-generated catch block
			e4.printStackTrace();
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="3790" _type="Delete" date="Tue May 03 18:43:17 EDT 2022" docASTNodeCount="1270" docActiveCodeLength="9918" docExpressionCount="902" docLength="10883" endLine="144" length="185" offset="5097" repeat="9" startLine="139" starttimestamp="1651614162506" timestamp="3634503" timestamp2="3634591">
    <text><![CDATA[try {
			commandProcessor = SimulationGenerator(Simulation1.SIMULATION1_PREFIX);
		} catch (RemoteException e4) {
			// TODO Auto-generated catch block
			e4.printStackTrace();
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="3800" _type="Insert" date="Tue May 03 18:43:17 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9989" docExpressionCount="909" docLength="10954" length="71" offset="5097" starttimestamp="1651614162506" timestamp="3634599">
    <text><![CDATA[commandProcessor = SimulationGenerator(Simulation1.SIMULATION1_PREFIX);]]></text>
  </DocumentChange>
  <DocumentChange __id="3802" _type="Replace" date="Tue May 03 18:43:17 EDT 2022" docASTNodeCount="1278" docActiveCodeLength="9986" docExpressionCount="909" docLength="10951" endLine="139" insertionLength="16" int_docASTNodeCount="1277" int_docActiveCodeLength="9970" int_docExpressionCount="908" int_docLength="10935" length="19" offset="5116" startLine="139" starttimestamp="1651614162506" timestamp="3635486">
    <deletedText><![CDATA[SimulationGenerator]]></deletedText>
    <insertedText><![CDATA[createSimulation]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3811" _type="Insert" date="Tue May 03 18:43:25 EDT 2022" docASTNodeCount="1293" docActiveCodeLength="10120" docExpressionCount="917" docLength="11119" length="168" offset="10928" repeat="4" starttimestamp="1651614162506" timestamp="3642576" timestamp2="3642580">
    <text><![CDATA[

	@Override
	public HalloweenCommandProcessor SimulationGenerator(String aPrefix) throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="3821" _type="Delete" date="Tue May 03 18:43:48 EDT 2022" docASTNodeCount="1293" docActiveCodeLength="10119" docExpressionCount="917" docLength="11041" endLine="220" length="78" offset="7860" startLine="218" starttimestamp="1651614162506" timestamp="3665642">
    <text><![CDATA[	/*
	 * You will need to delay not command input but sends(non-Javadoc)
	 */]]></text>
  </DocumentChange>
  <DocumentChange __id="3825" _type="Delete" date="Tue May 03 18:43:50 EDT 2022" docASTNodeCount="1293" docActiveCodeLength="10105" docExpressionCount="917" docLength="10946" endLine="223" length="95" offset="7913" startLine="220" starttimestamp="1651614162506" timestamp="3668237">
    <text><![CDATA[		//long aDelay = getDelay(); 
		//if (aDelay > 0) {
		//	ThreadSupport.sleep(aDelay);
		//}]]></text>
  </DocumentChange>
  <DocumentChange __id="3829" _type="Delete" date="Tue May 03 18:44:00 EDT 2022" docASTNodeCount="1237" docActiveCodeLength="9626" docExpressionCount="875" docLength="10459" endLine="130" length="487" offset="4453" startLine="114" starttimestamp="1651614162506" timestamp="3677937">
    <text><![CDATA[		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);]]></text>
  </DocumentChange>
  <DocumentChange __id="3838" _type="Delete" date="Tue May 03 18:44:05 EDT 2022" docASTNodeCount="1237" docActiveCodeLength="9622" docExpressionCount="875" docLength="10400" endLine="86" length="59" offset="3608" startLine="85" starttimestamp="1651614162506" timestamp="3682602">
    <text><![CDATA[		// Make sure you set this property when processing args
]]></text>
  </DocumentChange>
  <DocumentChange __id="3842" _type="Delete" date="Tue May 03 18:44:08 EDT 2022" docASTNodeCount="1177" docActiveCodeLength="9215" docExpressionCount="820" docLength="9993" endLine="84" length="407" offset="3199" startLine="79" starttimestamp="1651614162506" timestamp="3686299">
    <text><![CDATA[	System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));
]]></text>
  </DocumentChange>
  <Command __id="3847" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:18 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3696353">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="3857" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:24 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12597" docExpressionCount="1106" docLength="15234" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3701823">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void "), Diff(DELETE,"nioInit"), Diff(INSERT,"initiateNio"), Diff(EQUAL,"(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

//	public void RMIAndGIPCClient() {
//  new int i = 1+1;
//}
	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void initiateNio(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="3864" _type="Replace" date="Tue May 03 18:44:37 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12608" docExpressionCount="1106" docLength="15245" endLine="92" insertionLength="22" int_docASTNodeCount="1640" int_docActiveCodeLength="12586" int_docExpressionCount="1105" int_docLength="15223" length="11" offset="3586" startLine="92" starttimestamp="1651614162506" timestamp="3715096">
    <deletedText><![CDATA[processArgs]]></deletedText>
    <insertedText><![CDATA[argumentProcessorAgain]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="3879" _type="Replace" date="Tue May 03 18:44:46 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12619" docExpressionCount="1106" docLength="15256" endLine="153" insertionLength="22" int_docASTNodeCount="1639" int_docActiveCodeLength="12597" int_docExpressionCount="1104" int_docLength="15234" length="11" offset="5410" startLine="153" starttimestamp="1651614162506" timestamp="3723858">
    <deletedText><![CDATA[processArgs]]></deletedText>
    <insertedText><![CDATA[argumentProcessorAgain]]></insertedText>
  </DocumentChange>
  <Command __id="3885" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:49 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3727057">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="3894" _type="PauseCommand" date="Tue May 03 18:44:55 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3732806">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1979]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3893" _type="ShellCommand" date="Tue May 03 18:44:55 EDT 2022" starttimestamp="1651614162506" timestamp="3732806" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3895" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:55 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5597" docExpressionCount="567" docLength="6886" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3732982">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		reader = new ClientReadThread(this);¶						¶		//Create new readThread¶		readThread = new Thread(reader);¶				¶		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶"), Diff(INSERT,"//"), Diff(EQUAL,"	@Override¶"), Diff(INSERT,"//"), Diff(EQUAL,"	public void "), Diff(DELETE,"simulationCommand1(String aCommand"), Diff(INSERT,"argumentProcessor(String aCommand) {¶//		// TODO Auto-generated method stub¶//		¶//	}¶¶	@Override¶	public void initiateNio(String[] args"), Diff(EQUAL,") {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void "), Diff(DELETE,"nioInit(String[] args"), Diff(INSERT,"simulateCommand(String aCommand"), Diff(EQUAL,") {¶		// TODO Auto-generated method stub¶		¶	}¶		¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRemoteObject implements ClientRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

//	@Override
//	public void argumentProcessor(String aCommand) {
//		// TODO Auto-generated method stub
//		
//	}

	@Override
	public void initiateNio(String[] args) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void simulateCommand(String aCommand) {
		// TODO Auto-generated method stub
		
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="3896" _type="MoveCaretCommand" caretOffset="445" date="Tue May 03 18:44:55 EDT 2022" docOffset="1931" starttimestamp="1651614162506" timestamp="3733139" />
  <Command __id="3897" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:56 EDT 2022" docASTNodeCount="1177" docActiveCodeLength="9215" docExpressionCount="820" docLength="9993" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3733908">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	"), Diff(DELETE,"	System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args"), Diff(EQUAL,"¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶"), Diff(DELETE,"		//A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		//A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();		¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);"), Diff(EQUAL,"¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶"), Diff(DELETE,"	/*¶	 * You will need to delay not command input but sends(non-Javadoc)¶	 */¶	public void simulationCommand(String aCommand) {¶		//long aDelay = getDelay(); ¶		//if (aDelay > 0) {¶		//	ThreadSupport.sleep(aDelay);¶		//}"), Diff(INSERT,"¶	public void simulationCommand(String aCommand) {¶"), Diff(EQUAL,"¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(INSERT,"	@Override¶	public HalloweenCommandProcessor SimulationGenerator(String aPrefix) throws RemoteException {¶		// TODO Auto-generated method stub¶		return null;¶	}¶¶"), Diff(EQUAL,"¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
	
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		

	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override

	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void argumentProcessorAgain(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public HalloweenCommandProcessor SimulationGenerator(String aPrefix) throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}









}
]]></snapshot>
  </Command>
  <Command __id="3898" _type="MoveCaretCommand" caretOffset="1524" date="Tue May 03 18:44:56 EDT 2022" docOffset="3199" starttimestamp="1651614162506" timestamp="3734019" />
  <Command __id="3900" _type="SelectTextCommand" caretOffset="329" date="Tue May 03 18:44:57 EDT 2022" end="329" start="318" starttimestamp="1651614162506" timestamp="3734879" />
  <Command __id="3902" _type="PauseCommand" date="Tue May 03 18:44:58 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3736209">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1329]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3903" _type="SelectTextCommand" caretOffset="421" date="Tue May 03 18:44:58 EDT 2022" end="421" start="407" starttimestamp="1651614162506" timestamp="3736317" />
  <Command __id="3905" _type="MoveCaretCommand" caretOffset="1376" date="Tue May 03 18:44:59 EDT 2022" docOffset="1806" starttimestamp="1651614162506" timestamp="3737056" />
  <Command __id="3907" _type="MoveCaretCommand" caretOffset="5401" date="Tue May 03 18:45:00 EDT 2022" docOffset="5401" starttimestamp="1651614162506" timestamp="3737629" />
  <Command __id="3909" _type="PauseCommand" date="Tue May 03 18:45:01 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3738761">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1132]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3910" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:01 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3738901" />
  <Command __id="3912" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:02 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3739927" />
  <Command __id="3914" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:03 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3740620" />
  <Command __id="3916" _type="PauseCommand" date="Tue May 03 18:45:04 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3741708">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1088]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3917" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:04 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3741862" />
  <Command __id="3919" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:05 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3742632" />
  <Command __id="3921" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:05 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3743368" />
  <Command __id="3923" _type="PauseCommand" date="Tue May 03 18:45:07 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3744745">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1377]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3924" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:07 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3744945" />
  <Command __id="3926" _type="PauseCommand" date="Tue May 03 18:45:09 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3746881">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1935]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3927" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:09 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3747024" />
  <Command __id="3929" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:10 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3747851" />
  <Command __id="3931" _type="PauseCommand" date="Tue May 03 18:45:12 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3749750">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1899]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3932" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:12 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3749891" />
  <Command __id="3934" _type="PauseCommand" date="Tue May 03 18:45:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3751935">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2044]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3935" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:14 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3752084" />
  <Command __id="3937" _type="PauseCommand" date="Tue May 03 18:45:17 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3754594">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2509]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3938" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:17 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3754740" />
  <Command __id="3940" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:18 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3755534" />
  <Command __id="3942" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:18 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3756234" />
  <Command __id="3944" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:19 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3756949" />
  <Command __id="3946" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:20 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3757655" />
  <Command __id="3948" _type="PauseCommand" date="Tue May 03 18:45:22 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3759712">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2057]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3949" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:22 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3759908" />
  <Command __id="3951" _type="PauseCommand" date="Tue May 03 18:45:24 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3761673">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1765]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3952" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:24 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3761818" />
  <Command __id="3954" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:45:24 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3762479" />
  <Command __id="3956" _type="PauseCommand" date="Tue May 03 18:45:26 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3764059">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1580]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3955" _type="ShellCommand" date="Tue May 03 18:45:26 EDT 2022" starttimestamp="1651614162506" timestamp="3764059" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3958" _type="PauseCommand" date="Tue May 03 18:45:31 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3768817">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4758]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3957" _type="ShellCommand" date="Tue May 03 18:45:31 EDT 2022" starttimestamp="1651614162506" timestamp="3768817" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3960" _type="PauseCommand" date="Tue May 03 18:45:34 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3772410">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3593]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3959" _type="MoveCaretCommand" caretOffset="4982" date="Tue May 03 18:45:34 EDT 2022" docOffset="7369" starttimestamp="1651614162506" timestamp="3772410" />
  <Command __id="3961" _type="SelectTextCommand" caretOffset="4991" date="Tue May 03 18:45:35 EDT 2022" end="4991" start="4973" starttimestamp="1651614162506" timestamp="3772546" />
  <Command __id="3963" _type="PauseCommand" date="Tue May 03 18:45:40 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3777728">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5182]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="3964" _type="PasteCommand" date="Tue May 03 18:45:40 EDT 2022" starttimestamp="1651614162506" timestamp="3777752" />
  <Command __id="3966" _type="PauseCommand" date="Tue May 03 18:45:41 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3778924">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1172]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="3965" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:45:41 EDT 2022" starttimestamp="1651614162506" timestamp="3778924" />
  <Command __id="3967" _type="EclipseCommand" commandID="" date="Tue May 03 18:45:41 EDT 2022" starttimestamp="1651614162506" timestamp="3779010" />
  <Command __id="3968" _type="EclipseCommand" commandID="" date="Tue May 03 18:45:41 EDT 2022" starttimestamp="1651614162506" timestamp="3779034" />
  <Command __id="3969" _type="MoveCaretCommand" caretOffset="5225" date="Tue May 03 18:45:41 EDT 2022" docOffset="7612" starttimestamp="1651614162506" timestamp="3779441" />
  <Command __id="3899" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:57 EDT 2022" docASTNodeCount="101" docActiveCodeLength="813" docExpressionCount="69" docLength="813" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3734774">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶¶	HalloweenCommandProcessor getCommandProcessor();¶	void simulateCommand(String aCommand);¶	void initiateNio(String[] args);¶¶	void setFactories();¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="3901" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:58 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1186" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3736208">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶"), Diff(INSERT,"//"), Diff(EQUAL,"¶"), Diff(DELETE,"	"), Diff(EQUAL,"//"), Diff(INSERT,"	"), Diff(EQUAL,"void "), Diff(DELETE,"processArgs(String[] args);¶	¶	¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation"), Diff(INSERT,"inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶//¶//	void start"), Diff(EQUAL,"(String"), Diff(DELETE," aPrefix"), Diff(INSERT,"[] args"), Diff(EQUAL,") throws RemoteException;¶"), Diff(INSERT,"//	"), Diff(EQUAL,"¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void "), Diff(DELETE,"c"), Diff(INSERT,"makeC"), Diff(EQUAL,"hangeI"), Diff(DELETE,"PCMechanis"), Diff(INSERT,"pc"), Diff(EQUAL,"m(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶"), Diff(INSERT,"	¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶¶"), Diff(EQUAL,"¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{
//
//	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;
//
//	void start(String[] args) throws RemoteException;
//	
	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;
	

	void argumentProcessor(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;



	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;
}
]]></snapshot>
  </Command>
  <Command __id="3904" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:44:59 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1811" docExpressionCount="152" docLength="1811" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3736949">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientRemoteInterfaceGIPC thatClient;¶¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientRemoteInterfaceGIPC aClient, final String aClientName, Boolean nio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶		¶	}¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3906" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:00 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12619" docExpressionCount="1106" docLength="15256" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3737513">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}¶	@Override¶	public void "), Diff(DELETE,"processArgs"), Diff(INSERT,"argumentProcessorAgain"), Diff(EQUAL,"(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this."), Diff(DELETE,"processArgs"), Diff(INSERT,"argumentProcessorAgain"), Diff(EQUAL,"(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void initiateNio(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

//	public void RMIAndGIPCClient() {
//  new int i = 1+1;
//}
	@Override
	public void argumentProcessorAgain(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.argumentProcessorAgain(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void initiateNio(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <Command __id="3908" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:01 EDT 2022" docASTNodeCount="555" docActiveCodeLength="3823" docExpressionCount="387" docLength="4167" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3738761">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception exception) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <Command __id="3911" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:02 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3959" docExpressionCount="391" docLength="4580" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3739773">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
		setFactories();
		initialize(aServerPort);
	}

	void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		/*
		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		*/
		System.out.println("notifying reader!!");
		reader.notifyThread();
		System.out.println("thread has completed action and is now waiting");

	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer(){
		return boundedBuffer;
		
	}
	
	@Override
	public List<SocketChannel> getSocketList(){
		return socketList;
	}
	
	@Override
	public SocketChannel getSocketChannel() {
		return currentSocket;
	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <Command __id="3913" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:02 EDT 2022" docASTNodeCount="225" docActiveCodeLength="1609" docExpressionCount="133" docLength="1877" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3740493">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\exampleServerReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import readThread.ReadThreadInterface;

public class exampleServerReadThread implements ReadThreadInterface{
	final NIOManagerPrintServer server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public exampleServerReadThread (final NIOManagerPrintServer aServer) {
		server = aServer;
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			// Echo recieve message to all clients (except original message sender)
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3915" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:04 EDT 2022" docASTNodeCount="30" docActiveCodeLength="228" docExpressionCount="18" docLength="228" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3741708">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\FakeClientInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

public interface FakeClientInterface {

	void processInput();

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

}
]]></snapshot>
  </Command>
  <Command __id="3918" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:05 EDT 2022" docASTNodeCount="35" docActiveCodeLength="276" docExpressionCount="20" docLength="276" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3742502">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\NIOManagerPrintClientLauncherNoFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import assignments.util.mainArgs.ClientArgsProcessor;

public class NIOManagerPrintClientLauncherNoFactory {
	public static void main(String[] args) {
		new AnNIOManagerPrintClient(ClientArgsProcessor.getNIOServerPort(args)).processInput();
	}

}]]></snapshot>
  </Command>
  <Command __id="3920" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:05 EDT 2022" docASTNodeCount="88" docActiveCodeLength="644" docExpressionCount="64" docLength="644" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3743242">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener, SocketChannelWriteListener {

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	List<SocketChannel> getSocketList();

	SocketChannel getSocketChannel();

}]]></snapshot>
  </Command>
  <Command __id="3922" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:07 EDT 2022" docASTNodeCount="33" docActiveCodeLength="261" docExpressionCount="18" docLength="261" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3744745">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\NIOManagerPrintServerLauncherNoFactory.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import assignments.util.mainArgs.ServerArgsProcessor;

public class NIOManagerPrintServerLauncherNoFactory {
	public static void main(String[] args) {
		new AnNIOManagerPrintServer(ServerArgsProcessor.getNIOServerPort(args));
	}

}]]></snapshot>
  </Command>
  <Command __id="3925" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:09 EDT 2022" docASTNodeCount="352" docActiveCodeLength="2626" docExpressionCount="241" docLength="2916" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3746880">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\readThread\ClientReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.concurrent.ArrayBlockingQueue;

import client.ClientRemoteObjectNIO;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.AnNIOManagerPrintClient;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;


@Tags({DistributedTags.NIO, DistributedTags.CLIENT_READ_THREAD})
public class ClientReadThread implements ReadThreadInterface{
	//final ClientRemoteObjectNIO client;
	final ClientRemoteObjectNIO client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ClientReadThread (final ClientRemoteObjectNIO aClient) {
		client = aClient;
	}
	
	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			
			/// To pass the autograder
			int position = originalMessage.position();
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			///
			
			System.out.println(aMessageString);
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
			
			HalloweenCommandProcessor commandProcessor = client.getCommandProcessor();
			
			
			RemoteProposeRequestReceived.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			commandProcessor.processCommand(aMessageString);
			ProposedStateSet.newCase(this, client.CLIENT_NAME, aProposalNumber, aMessageString);
			//client.aProposalNumber++;
		
		}
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <Command __id="3928" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:10 EDT 2022" docASTNodeCount="44" docActiveCodeLength="342" docExpressionCount="33" docLength="342" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3747722">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\readThread\ReadThreadInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import util.annotations.Tags;
import util.tags.DistributedTags;
import inputport.nio.manager.listeners.SocketChannelReadListener;

@Tags({DistributedTags.NIO, DistributedTags.READ_THREAD_INTERFACE})
public interface ReadThreadInterface extends SocketChannelReadListener, Runnable{

	void notifyThread();


}
]]></snapshot>
  </Command>
  <Command __id="3930" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:12 EDT 2022" docASTNodeCount="387" docActiveCodeLength="2814" docExpressionCount="265" docLength="3303" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3749750">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\readThread\ServerReadThread.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package readThread;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.NIOManagerPrintServer;
import server.remote.ServerRemoteObjectNIO;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.communication.CommunicationStateNames;


@Tags({DistributedTags.NIO, DistributedTags.SERVER_READ_THREAD})
public class ServerReadThread implements ReadThreadInterface{
	
	final ServerRemoteObjectNIO server;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ServerReadThread (final ServerRemoteObjectNIO aServer) {
		server = aServer;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = server.getBoundedBuffer();
			List<SocketChannel> socketList = server.getSocketList();
			SocketChannel currentSocket = server.getSocketChannel();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			
			/// To pass the autograder
			ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(originalMessage);
			ArrayBlockingQueue<ByteBuffer> boundedBufferFake = new ArrayBlockingQueue<ByteBuffer>(500);
			boundedBufferFake.add(originalMessage);
			
			String aMessageString = new String(originalMessage.array());
					
			int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
			aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
			///
			// Echo recieve message to all clients (except original message sender)
			
			//ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalMessage.array());
			
			for (SocketChannel socket : socketList) {
				if (!socket.equals(currentSocket)) {
					///
					RemoteProposeRequestReceived.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);
					//ProposalMade.newCase(this, CommunicationStateNames.COMMAND, aProposalNumber, aMessageString);
					ProposalLearnedNotificationSent.newCase(this, server.SERVER_NAME, aProposalNumber, aMessageString);
					
					///
					nioManager.write(socket, originalMessage, server);
				}
			}
		
		}
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}


}
]]></snapshot>
  </Command>
  <Command __id="3933" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:14 EDT 2022" docASTNodeCount="138" docActiveCodeLength="839" docExpressionCount="95" docLength="879" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3751935">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\registry\TrickOrTreatRegistry.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package registry;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Scanner;

import util.annotations.Tags;
import util.tags.DistributedTags;

import  util.trace.port.rpc.rmi.RMIRegistryCreated;
import assignments.util.mainArgs.RegistryArgsProcessor;

@Tags({DistributedTags.REGISTRY, DistributedTags.RMI})
public class TrickOrTreatRegistry {
	//TODO get rid of hard coded port number
	 private static int SERVER_PORT = 1099;

	public static void main (final String[] args) {
		SERVER_PORT = RegistryArgsProcessor.getRegistryPort(args);
		 try {
			final Registry rmiRegistry = LocateRegistry.createRegistry(SERVER_PORT);
			Scanner scanner = new Scanner(System.in);
		    scanner.nextLine();

			
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		 
	 }

}
]]></snapshot>
  </Command>
  <Command __id="3936" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:17 EDT 2022" docASTNodeCount="231" docActiveCodeLength="1847" docExpressionCount="141" docLength="1847" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3754593">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="3939" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:17 EDT 2022" docASTNodeCount="93" docActiveCodeLength="677" docExpressionCount="67" docLength="677" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3755394">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;


import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

public interface ServerRemoteInterfaceNIO extends SocketChannelAcceptListener, SocketChannelReadListener, SocketChannelWriteListener {

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	List<SocketChannel> getSocketList();

	SocketChannel getSocketChannel();

	void setFactories();

}]]></snapshot>
  </Command>
  <Command __id="3941" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:18 EDT 2022" docASTNodeCount="257" docActiveCodeLength="2003" docExpressionCount="157" docLength="2021" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3756077">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends Remote{
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="3943" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:19 EDT 2022" docASTNodeCount="714" docActiveCodeLength="4993" docExpressionCount="513" docLength="5565" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3756803">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import nioExample.exampleServerReadThread;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;

public class ServerRemoteObjectNIO extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	@Override
	protected void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		String name = "Read Thread";
		readThread.setName(name);
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("COMMAND IN SERVER: "+ aMessageString);
		
		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);
		//RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

}
]]></snapshot>
  </Command>
  <Command __id="3945" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:20 EDT 2022" docASTNodeCount="914" docActiveCodeLength="6665" docExpressionCount="639" docLength="7485" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3757512">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerRemoteInterfaceRMI{
	List<ClientRemoteInterfaceRMI> clientList = new ArrayList<ClientRemoteInterfaceRMI>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		//SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientRemoteInterfaceRMI client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerRemoteInterfaceRMI server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		System.out.println("inside RMI server start");
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <Command __id="3947" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:22 EDT 2022" docASTNodeCount="26" docActiveCodeLength="185" docExpressionCount="12" docLength="185" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3759712">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\OriginalSimulation.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import main.BeauAndersonFinalProject;

public class OriginalSimulation {
	public static void main(String[] args) {
		BeauAndersonFinalProject.main(args);
	}
}
]]></snapshot>
  </Command>
  <Command __id="3950" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:24 EDT 2022" docASTNodeCount="101" docActiveCodeLength="689" docExpressionCount="68" docLength="879" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3761673">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\Server.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectNIO;
import server.remote.ServerRemoteObjectRMI;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Server {
	
	
	public static void main(final String[] args) {
		
		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc
		//final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectNIO();
		
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="3953" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:24 EDT 2022" docASTNodeCount="1788" docActiveCodeLength="13105" docExpressionCount="1241" docLength="14677" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3762253">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import server.remote.ServerRemoteInterfaceNIO;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism, aProposalNumber);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	//@Override
	void initServer(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		//reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		final String serverName = "server";
		readThread.setName(serverName);
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
		
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		reader.notifyThread();
		
		//Fake call for autograder
		nioManager.write(aSocketChannel, aMessage, this);
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	//@Override
	void setTracingFake() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="3962" _type="Replace" date="Tue May 03 18:45:40 EDT 2022" docASTNodeCount="1788" docActiveCodeLength="13101" docExpressionCount="1241" docLength="14673" endLine="212" insertionLength="14" int_docASTNodeCount="1786" int_docActiveCodeLength="13087" int_docExpressionCount="1239" int_docLength="14659" length="18" offset="7360" startLine="212" starttimestamp="1651614162506" timestamp="3777728">
    <deletedText><![CDATA[changeIPCMechanism]]></deletedText>
    <insertedText><![CDATA[makeChangeIpcm]]></insertedText>
  </DocumentChange>
  <Command __id="3971" _type="PauseCommand" date="Tue May 03 18:45:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3781296">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1855]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3972" _type="MoveCaretCommand" caretOffset="613" date="Tue May 03 18:45:43 EDT 2022" docOffset="732" starttimestamp="1651614162506" timestamp="3781457" />
  <Command __id="3974" _type="PauseCommand" date="Tue May 03 18:45:45 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3782821">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1364]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3973" _type="ShellCommand" date="Tue May 03 18:45:45 EDT 2022" starttimestamp="1651614162506" timestamp="3782821" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3976" _type="PauseCommand" date="Tue May 03 18:45:46 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3784223">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1402]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3975" _type="ShellCommand" date="Tue May 03 18:45:46 EDT 2022" starttimestamp="1651614162506" timestamp="3784223" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3977" _type="ShellCommand" date="Tue May 03 18:45:47 EDT 2022" starttimestamp="1651614162506" timestamp="3785142" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3979" _type="PauseCommand" date="Tue May 03 18:45:54 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3792173">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7031]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3978" _type="ShellCommand" date="Tue May 03 18:45:54 EDT 2022" starttimestamp="1651614162506" timestamp="3792173" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3980" _type="MoveCaretCommand" caretOffset="599" date="Tue May 03 18:45:54 EDT 2022" docOffset="718" starttimestamp="1651614162506" timestamp="3792226" />
  <Command __id="3982" _type="PauseCommand" date="Tue May 03 18:45:56 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3794409">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2183]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3983" _type="MoveCaretCommand" caretOffset="5225" date="Tue May 03 18:45:57 EDT 2022" docOffset="7612" starttimestamp="1651614162506" timestamp="3794605" />
  <Command __id="3984" _type="MoveCaretCommand" caretOffset="5250" date="Tue May 03 18:45:58 EDT 2022" docOffset="7637" starttimestamp="1651614162506" timestamp="3795528" />
  <Command __id="3986" _type="PauseCommand" date="Tue May 03 18:46:01 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3798659">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3131]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3987" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:46:01 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3798791" />
  <Command __id="3989" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:46:02 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3799740" />
  <Command __id="3991" _type="PauseCommand" date="Tue May 03 18:46:04 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3801772">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2032]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3992" _type="MoveCaretCommand" caretOffset="942" date="Tue May 03 18:46:04 EDT 2022" docOffset="977" starttimestamp="1651614162506" timestamp="3801897" />
  <Command __id="3994" _type="MoveCaretCommand" caretOffset="1376" date="Tue May 03 18:46:05 EDT 2022" docOffset="1806" starttimestamp="1651614162506" timestamp="3802556" />
  <Command __id="3996" _type="SelectTextCommand" caretOffset="421" date="Tue May 03 18:46:05 EDT 2022" end="421" start="407" starttimestamp="1651614162506" timestamp="3803400" />
  <Command __id="3998" _type="PauseCommand" date="Tue May 03 18:46:07 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3804944">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1544]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3999" _type="SelectTextCommand" caretOffset="474" date="Tue May 03 18:46:07 EDT 2022" end="474" start="455" starttimestamp="1651614162506" timestamp="3805084" />
  <Command __id="4000" _type="MoveCaretCommand" caretOffset="355" date="Tue May 03 18:46:07 EDT 2022" docOffset="704" starttimestamp="1651614162506" timestamp="3805375" />
  <Command __id="4002" _type="UndoCommand" date="Tue May 03 18:46:08 EDT 2022" starttimestamp="1651614162506" timestamp="3805924" />
  <Command __id="4004" _type="UndoCommand" date="Tue May 03 18:46:09 EDT 2022" starttimestamp="1651614162506" timestamp="3806539" />
  <Command __id="4005" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:46:09 EDT 2022" starttimestamp="1651614162506" timestamp="3807358" />
  <Command __id="4006" _type="EclipseCommand" commandID="" date="Tue May 03 18:46:09 EDT 2022" starttimestamp="1651614162506" timestamp="3807444" />
  <Command __id="4007" _type="EclipseCommand" commandID="" date="Tue May 03 18:46:09 EDT 2022" starttimestamp="1651614162506" timestamp="3807492" />
  <Command __id="4009" _type="PauseCommand" date="Tue May 03 18:46:11 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3808865">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1373]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4008" _type="ShellCommand" date="Tue May 03 18:46:11 EDT 2022" starttimestamp="1651614162506" timestamp="3808865" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4011" _type="PauseCommand" date="Tue May 03 18:46:12 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3810491">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1625]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4010" _type="ShellCommand" date="Tue May 03 18:46:12 EDT 2022" starttimestamp="1651614162506" timestamp="3810490" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4013" _type="MoveCaretCommand" caretOffset="1524" date="Tue May 03 18:46:13 EDT 2022" docOffset="3199" starttimestamp="1651614162506" timestamp="3810641" />
  <Command __id="4015" _type="PauseCommand" date="Tue May 03 18:46:18 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3816172">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5531]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="4014" _type="SelectTextCommand" caretOffset="8131" date="Tue May 03 18:46:18 EDT 2022" end="8295" start="8131" starttimestamp="1651614162506" timestamp="3816172" />
  <Command __id="4017" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 18:46:19 EDT 2022" starttimestamp="1651614162506" timestamp="3816783" />
  <Command __id="4018" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:46:19 EDT 2022" starttimestamp="1651614162506" timestamp="3817172" />
  <Command __id="4019" _type="EclipseCommand" commandID="" date="Tue May 03 18:46:19 EDT 2022" starttimestamp="1651614162506" timestamp="3817309" />
  <Command __id="4020" _type="EclipseCommand" commandID="" date="Tue May 03 18:46:19 EDT 2022" starttimestamp="1651614162506" timestamp="3817357" />
  <Command __id="4022" _type="PauseCommand" date="Tue May 03 18:46:21 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3819237">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1880]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4021" _type="ShellCommand" date="Tue May 03 18:46:21 EDT 2022" starttimestamp="1651614162506" timestamp="3819237" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4024" _type="PauseCommand" date="Tue May 03 18:46:25 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3822970">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3733]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4023" _type="ShellCommand" date="Tue May 03 18:46:25 EDT 2022" starttimestamp="1651614162506" timestamp="3822970" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4026" _type="MoveCaretCommand" caretOffset="599" date="Tue May 03 18:46:25 EDT 2022" docOffset="718" starttimestamp="1651614162506" timestamp="3823270" />
  <Command __id="4028" _type="PauseCommand" date="Tue May 03 18:46:27 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3825159">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1889]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4027" _type="ShellCommand" date="Tue May 03 18:46:27 EDT 2022" starttimestamp="1651614162506" timestamp="3825159" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4030" _type="PauseCommand" date="Tue May 03 18:46:29 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3827344">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2185]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4029" _type="ShellCommand" date="Tue May 03 18:46:29 EDT 2022" starttimestamp="1651614162506" timestamp="3827344" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4039" _type="PauseCommand" date="Tue May 03 18:46:47 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3845405">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1026]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4038" _type="MoveCaretCommand" caretOffset="731" date="Tue May 03 18:46:47 EDT 2022" docOffset="1892" starttimestamp="1651614162506" timestamp="3845405" />
  <Command __id="4041" _type="PauseCommand" date="Tue May 03 18:46:54 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3851917">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6512]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4042" _type="MoveCaretCommand" caretOffset="128" date="Tue May 03 18:46:54 EDT 2022" docOffset="247" starttimestamp="1651614162506" timestamp="3852068" />
  <Command __id="4044" _type="PauseCommand" date="Tue May 03 18:46:56 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3853913">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1845]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4043" _type="ShellCommand" date="Tue May 03 18:46:56 EDT 2022" starttimestamp="1651614162506" timestamp="3853913" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4046" _type="PauseCommand" date="Tue May 03 18:47:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3857567">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3654]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4045" _type="ShellCommand" date="Tue May 03 18:47:00 EDT 2022" starttimestamp="1651614162506" timestamp="3857567" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4048" _type="MoveCaretCommand" caretOffset="180" date="Tue May 03 18:47:00 EDT 2022" docOffset="299" starttimestamp="1651614162506" timestamp="3857630" />
  <Command __id="4049" _type="MoveCaretCommand" caretOffset="180" date="Tue May 03 18:47:00 EDT 2022" docOffset="299" starttimestamp="1651614162506" timestamp="3857648" />
  <Command __id="4051" _type="PauseCommand" date="Tue May 03 18:47:12 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="3870192">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[12544]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4050" _type="ShellCommand" date="Tue May 03 18:47:12 EDT 2022" starttimestamp="1651614162506" timestamp="3870192" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4053" _type="PauseCommand" date="Tue May 03 18:47:15 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3873354">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3162]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4052" _type="ShellCommand" date="Tue May 03 18:47:15 EDT 2022" starttimestamp="1651614162506" timestamp="3873354" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4055" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 18:47:16 EDT 2022" docOffset="0" starttimestamp="1651614162506" timestamp="3873497" />
  <Command __id="4057" _type="PauseCommand" date="Tue May 03 18:47:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3875311">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1814]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4056" _type="ShellCommand" date="Tue May 03 18:47:17 EDT 2022" starttimestamp="1651614162506" timestamp="3875311" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4059" _type="PauseCommand" date="Tue May 03 18:47:19 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3876647">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1336]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4058" _type="ShellCommand" date="Tue May 03 18:47:19 EDT 2022" starttimestamp="1651614162506" timestamp="3876647" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4061" _type="MoveCaretCommand" caretOffset="180" date="Tue May 03 18:47:19 EDT 2022" docOffset="299" starttimestamp="1651614162506" timestamp="3876793" />
  <Command __id="4063" _type="PauseCommand" date="Tue May 03 18:47:24 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3881645">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4852]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4062" _type="ShellCommand" date="Tue May 03 18:47:24 EDT 2022" starttimestamp="1651614162506" timestamp="3881645" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4065" _type="PauseCommand" date="Tue May 03 18:47:25 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3883048">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1403]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4064" _type="ShellCommand" date="Tue May 03 18:47:25 EDT 2022" starttimestamp="1651614162506" timestamp="3883048" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4067" _type="PauseCommand" date="Tue May 03 18:47:28 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3886005">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2957]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4068" _type="MoveCaretCommand" caretOffset="942" date="Tue May 03 18:47:28 EDT 2022" docOffset="977" starttimestamp="1651614162506" timestamp="3886102" />
  <Command __id="4070" _type="PauseCommand" date="Tue May 03 18:47:34 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3891601">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5499]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4071" _type="SelectTextCommand" caretOffset="471" date="Tue May 03 18:47:34 EDT 2022" end="471" start="455" starttimestamp="1651614162506" timestamp="3891718" />
  <Command __id="4072" _type="MoveCaretCommand" caretOffset="513" date="Tue May 03 18:47:34 EDT 2022" docOffset="862" starttimestamp="1651614162506" timestamp="3892426" />
  <Command __id="4074" _type="PauseCommand" date="Tue May 03 18:47:36 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3893662">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1236]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4075" _type="UndoCommand" date="Tue May 03 18:47:36 EDT 2022" starttimestamp="1651614162506" timestamp="3893673" />
  <Command __id="4077" _type="PauseCommand" date="Tue May 03 18:47:37 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3894817">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1144]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4076" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:47:37 EDT 2022" starttimestamp="1651614162506" timestamp="3894817" />
  <Command __id="4078" _type="EclipseCommand" commandID="" date="Tue May 03 18:47:37 EDT 2022" starttimestamp="1651614162506" timestamp="3894952" />
  <Command __id="4079" _type="EclipseCommand" commandID="" date="Tue May 03 18:47:37 EDT 2022" starttimestamp="1651614162506" timestamp="3894999" />
  <Command __id="4081" _type="PauseCommand" date="Tue May 03 18:47:39 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3897224">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2225]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4082" _type="MoveCaretCommand" caretOffset="8131" date="Tue May 03 18:47:39 EDT 2022" docOffset="9806" starttimestamp="1651614162506" timestamp="3897337" />
  <Command __id="4084" _type="PauseCommand" date="Tue May 03 18:47:43 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3901256">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3919]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4085" _type="MoveCaretCommand" caretOffset="380" date="Tue May 03 18:47:43 EDT 2022" docOffset="729" starttimestamp="1651614162506" timestamp="3901357" />
  <Command __id="4087" _type="PauseCommand" date="Tue May 03 18:47:44 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3902463">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1106]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4086" _type="MoveCaretCommand" caretOffset="373" date="Tue May 03 18:47:44 EDT 2022" docOffset="722" starttimestamp="1651614162506" timestamp="3902463" />
  <Command __id="4088" _type="SelectTextCommand" caretOffset="380" date="Tue May 03 18:47:45 EDT 2022" end="380" start="363" starttimestamp="1651614162506" timestamp="3902603" />
  <Command __id="4089" _type="CopyCommand" date="Tue May 03 18:47:45 EDT 2022" starttimestamp="1651614162506" timestamp="3903305" />
  <Command __id="4091" _type="MoveCaretCommand" caretOffset="8131" date="Tue May 03 18:47:46 EDT 2022" docOffset="9806" starttimestamp="1651614162506" timestamp="3904077" />
  <Command __id="4092" _type="MoveCaretCommand" caretOffset="7871" date="Tue May 03 18:47:47 EDT 2022" docOffset="9546" starttimestamp="1651614162506" timestamp="3904795" />
  <Command __id="4093" _type="SelectTextCommand" caretOffset="7879" date="Tue May 03 18:47:47 EDT 2022" end="7879" start="7857" starttimestamp="1651614162506" timestamp="3904936" />
  <Command __id="3970" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:43 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3781296">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="3981" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:45:56 EDT 2022" docASTNodeCount="1788" docActiveCodeLength="13101" docExpressionCount="1241" docLength="14673" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3794409">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\ServerConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.io.IOException;¶import java.net.InetSocketAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientRemoteInterfaceGIPC;¶import client.ClientRemoteInterfaceRMI;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import readThread.ReadThreadInterface;¶import readThread.ServerReadThread;¶import server.remote.ServerRemoteInterfaceNIO;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectRMI;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.nio.SocketChannelBound;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ServerConfigure extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{¶	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();¶	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));¶		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));¶		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));¶		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));¶		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶¶	}¶¶	@Override¶	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){¶		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (ClientRemoteInterfaceGIPC client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {¶		List<ClientRemoteInterfaceGIPC> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			¶			for (ClientRemoteInterfaceGIPC client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client."), Diff(DELETE,"c"), Diff(INSERT,"makeC"), Diff(EQUAL,"hangeI"), Diff(DELETE,"PCMechanis"), Diff(INSERT,"pc"), Diff(EQUAL,"m(mechanism, aProposalNumber);¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶	}¶¶	@Override¶	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)¶			throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	¶	List<SocketChannel> socketList = new ArrayList<SocketChannel>();¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	SocketChannel currentSocket = null;¶	¶	//@Override¶	void initServer(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ServerArgsProcessor.getNIOServerPort(args);¶			¶		try {¶			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();¶			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);¶			aServerFactoryChannel.socket().bind(anInternetSocketAddress);¶			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes¶																							// that can be read¶					this);¶			¶			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);¶¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶		//Create new read thread Runnable¶		//reader = new ServerReadThread(this);¶				¶		//Create new readThread¶		readThread = new Thread(reader);¶		final String serverName = "server";¶		readThread.setName(serverName);¶		//Start thread and do some action¶		readThread.start();¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));¶	}¶	¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {¶		nioManager.addReadListener(aSocketChannel, this);¶¶		// save aSocketChannel¶		socketList.add(aSocketChannel);¶		¶		¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶¶		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);¶		System.out.println(aMessageString + "<--" + aSocketChannel);¶¶		currentSocket = aSocketChannel;¶		¶		reader.notifyThread();¶		¶		//Fake call for autograder¶		nioManager.write(aSocketChannel, aMessage, this);¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶¶	@Override¶	public List<SocketChannel> getSocketList() {¶		// TODO Auto-generated method stub¶		return socketList;¶	}¶¶	@Override¶	public SocketChannel getSocketChannel() {¶		// TODO Auto-generated method stub¶		return currentSocket;¶	}¶	¶	//@Override¶	void setTracingFake() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import readThread.ReadThreadInterface;
import readThread.ServerReadThread;
import server.remote.ServerRemoteInterfaceNIO;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectRMI;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.SERVER_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ServerConfigure extends ServerRemoteObjectGIPC implements ServerRemoteInterfaceNIO{
	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		// ClientArgsProcessor.getServerHost(args);

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.makeChangeIpcm(mechanism, aProposalNumber);
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
	}

	@Override
	public void registerClient(ClientRemoteInterfaceRMI aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceRMI originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	//@Override
	void initServer(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		//reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		final String serverName = "server";
		readThread.setName(serverName);
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
		
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		reader.notifyThread();
		
		//Fake call for autograder
		nioManager.write(aSocketChannel, aMessage, this);
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	//@Override
	void setTracingFake() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}


}
]]></snapshot>
  </Command>
  <Command __id="3985" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:01 EDT 2022" docASTNodeCount="101" docActiveCodeLength="689" docExpressionCount="68" docLength="879" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3798659">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectNIO;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		//final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectNIO();¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3988" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:02 EDT 2022" docASTNodeCount="26" docActiveCodeLength="185" docExpressionCount="12" docLength="185" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3799628">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\OriginalSimulation.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import main.BeauAndersonFinalProject;¶¶public class OriginalSimulation {¶	public static void main(String[] args) {¶		BeauAndersonFinalProject.main(args);¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="3990" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:04 EDT 2022" docASTNodeCount="71" docActiveCodeLength="473" docExpressionCount="43" docLength="1073" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3801772">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\Client.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class Client {¶¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	public static void main(final String[] args) {¶		try {¶			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();¶			// started!!!¶			client.start(args);¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3993" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:04 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1811" docExpressionCount="152" docLength="1811" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3802441">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientRemoteInterfaceGIPC thatClient;¶¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientRemoteInterfaceGIPC aClient, final String aClientName, Boolean nio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶		¶	}¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="3995" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:05 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1186" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3803287">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶//¶//	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶//¶//	void start(String[] args) throws RemoteException;¶//	¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶	¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
  </Command>
  <Command __id="3997" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:07 EDT 2022" docASTNodeCount="120" docActiveCodeLength="932" docExpressionCount="81" docLength="966" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3804944">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessorAgain(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor "), Diff(DELETE,"create"), Diff(EQUAL,"Simulation"), Diff(INSERT,"Generator"), Diff(EQUAL,"(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void argumentProcessorAgain(String[] args) throws RemoteException;

	HalloweenCommandProcessor SimulationGenerator(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4001" _type="Delete" date="Tue May 03 18:46:08 EDT 2022" docASTNodeCount="120" docActiveCodeLength="914" docExpressionCount="81" docLength="948" endLine="24" length="18" offset="805" startLine="24" starttimestamp="1651614162506" timestamp="3805916">
    <text><![CDATA[imulationGenerator]]></text>
  </DocumentChange>
  <DocumentChange __id="4003" _type="Replace" date="Tue May 03 18:46:09 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" endLine="24" insertionLength="16" int_docASTNodeCount="118" int_docActiveCodeLength="913" int_docExpressionCount="80" int_docLength="947" length="1" offset="804" startLine="24" starttimestamp="1651614162506" timestamp="3806533">
    <deletedText><![CDATA[S]]></deletedText>
    <insertedText><![CDATA[createSimulation]]></insertedText>
  </DocumentChange>
  <Command __id="4012" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:13 EDT 2022" docASTNodeCount="1177" docActiveCodeLength="9215" docExpressionCount="820" docLength="9993" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3810542">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public HalloweenCommandProcessor SimulationGenerator(String aPrefix) throws RemoteException {¶		// TODO Auto-generated method stub¶		return null;¶	}¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4016" _type="Delete" date="Tue May 03 18:46:19 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9085" docExpressionCount="812" docLength="9829" endLine="295" length="164" offset="9806" startLine="291" starttimestamp="1651614162506" timestamp="3816773">
    <text><![CDATA[	@Override
	public HalloweenCommandProcessor SimulationGenerator(String aPrefix) throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}]]></text>
  </DocumentChange>
  <Command __id="4025" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:25 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3823148">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="4035" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:46 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3959" docExpressionCount="391" docLength="4580" projectName="533A6" starttimestamp="1651614162506" timestamp="3844165">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533A6\src\nioExample\AnNIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientRemoteInterfaceGIPC;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public AnNIOManagerPrintServer(int aServerPort) {
		setTracing();
		setFactories();
		initialize(aServerPort);
	}

	void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		/*
		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		*/
		System.out.println("notifying reader!!");
		reader.notifyThread();
		System.out.println("thread has completed action and is now waiting");

	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer(){
		return boundedBuffer;
		
	}
	
	@Override
	public List<SocketChannel> getSocketList(){
		return socketList;
	}
	
	@Override
	public SocketChannel getSocketChannel() {
		return currentSocket;
	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <Command __id="4040" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:46:54 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3851917">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="4047" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:00 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3857584">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="4054" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:15 EDT 2022" docASTNodeCount="101" docActiveCodeLength="689" docExpressionCount="68" docLength="879" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3873401">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\Server.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server;¶¶import java.rmi.RemoteException;¶¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteObjectNIO;¶import server.remote.ServerRemoteObjectRMI;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class Server {¶	¶	¶	public static void main(final String[] args) {¶		¶		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc¶		//final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();¶		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectNIO();¶		¶		try {¶			server.start(args);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4060" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:19 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3876693">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="4066" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:28 EDT 2022" docASTNodeCount="71" docActiveCodeLength="473" docExpressionCount="43" docLength="1073" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3886005">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\Client.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class Client {¶¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	public static void main(final String[] args) {¶		try {¶			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();¶			// started!!!¶			client.start(args);¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4069" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:34 EDT 2022" docASTNodeCount="120" docActiveCodeLength="929" docExpressionCount="81" docLength="963" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3891601">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessorAgain(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor "), Diff(INSERT,"create"), Diff(EQUAL,"Simulation"), Diff(DELETE,"Generator"), Diff(EQUAL,"(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void argumentProcessorAgain(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <DocumentChange __id="4073" _type="Delete" date="Tue May 03 18:47:36 EDT 2022" docASTNodeCount="120" docActiveCodeLength="924" docExpressionCount="81" docLength="958" endLine="22" length="5" offset="729" startLine="22" starttimestamp="1651614162506" timestamp="3893662">
    <text><![CDATA[Again]]></text>
  </DocumentChange>
  <Command __id="4080" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:39 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9085" docExpressionCount="812" docLength="9829" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3897224">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶"), Diff(DELETE,"	@Override¶	public HalloweenCommandProcessor SimulationGenerator(String aPrefix) throws RemoteException {¶		// TODO Auto-generated method stub¶		return null;¶	}"), Diff(EQUAL,"¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
	
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		

	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override

	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void argumentProcessorAgain(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}











}
]]></snapshot>
  </Command>
  <Command __id="4083" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:43 EDT 2022" docASTNodeCount="120" docActiveCodeLength="924" docExpressionCount="81" docLength="958" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3901256">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessor"), Diff(DELETE,"Again"), Diff(EQUAL,"(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void argumentProcessor(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="4090" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:47:46 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9085" docExpressionCount="812" docLength="9829" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3903976">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="4095" _type="PauseCommand" date="Tue May 03 18:47:48 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3906075">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1139]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="4096" _type="PasteCommand" date="Tue May 03 18:47:48 EDT 2022" starttimestamp="1651614162506" timestamp="3906088" />
  <Command __id="4097" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:47:49 EDT 2022" starttimestamp="1651614162506" timestamp="3906758" />
  <Command __id="4098" _type="EclipseCommand" commandID="" date="Tue May 03 18:47:49 EDT 2022" starttimestamp="1651614162506" timestamp="3906844" />
  <Command __id="4099" _type="EclipseCommand" commandID="" date="Tue May 03 18:47:49 EDT 2022" starttimestamp="1651614162506" timestamp="3906897" />
  <Command __id="4101" _type="PauseCommand" date="Tue May 03 18:47:59 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="3916651">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9754]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="4102" _type="UndoCommand" date="Tue May 03 18:47:59 EDT 2022" starttimestamp="1651614162506" timestamp="3916674" />
  <Command __id="4104" _type="PauseCommand" date="Tue May 03 18:48:00 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3918322">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1648]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4105" _type="SelectTextCommand" caretOffset="380" date="Tue May 03 18:48:00 EDT 2022" end="380" start="363" starttimestamp="1651614162506" timestamp="3918424" />
  <Command __id="4107" _type="UndoCommand" date="Tue May 03 18:48:01 EDT 2022" starttimestamp="1651614162506" timestamp="3919271" />
  <Command __id="4109" _type="UndoCommand" date="Tue May 03 18:48:02 EDT 2022" starttimestamp="1651614162506" timestamp="3920241" />
  <Command __id="4111" _type="UndoCommand" date="Tue May 03 18:48:03 EDT 2022" starttimestamp="1651614162506" timestamp="3920679" />
  <Command __id="4113" _type="UndoCommand" date="Tue May 03 18:48:03 EDT 2022" starttimestamp="1651614162506" timestamp="3921315" />
  <Command __id="4115" _type="UndoCommand" date="Tue May 03 18:48:04 EDT 2022" starttimestamp="1651614162506" timestamp="3922027" />
  <Command __id="4117" _type="UndoCommand" date="Tue May 03 18:48:05 EDT 2022" starttimestamp="1651614162506" timestamp="3922696" />
  <Command __id="4119" _type="UndoCommand" date="Tue May 03 18:48:05 EDT 2022" starttimestamp="1651614162506" timestamp="3923118" />
  <Command __id="4121" _type="PauseCommand" date="Tue May 03 18:48:06 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3924143">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1025]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4120" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:48:06 EDT 2022" starttimestamp="1651614162506" timestamp="3924143" />
  <Command __id="4122" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:06 EDT 2022" starttimestamp="1651614162506" timestamp="3924227" />
  <Command __id="4123" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:06 EDT 2022" starttimestamp="1651614162506" timestamp="3924279" />
  <Command __id="4125" _type="PauseCommand" date="Tue May 03 18:48:07 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3925458">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1179]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4124" _type="MoveCaretCommand" caretOffset="368" date="Tue May 03 18:48:07 EDT 2022" docOffset="717" starttimestamp="1651614162506" timestamp="3925458" />
  <Command __id="4126" _type="SelectTextCommand" caretOffset="374" date="Tue May 03 18:48:08 EDT 2022" end="374" start="363" starttimestamp="1651614162506" timestamp="3925725" />
  <Command __id="4127" _type="CopyCommand" date="Tue May 03 18:48:08 EDT 2022" starttimestamp="1651614162506" timestamp="3926424" />
  <Command __id="4129" _type="SelectTextCommand" caretOffset="7879" date="Tue May 03 18:48:09 EDT 2022" end="7879" start="7857" starttimestamp="1651614162506" timestamp="3927148" />
  <Command __id="4131" _type="PauseCommand" date="Tue May 03 18:48:11 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3928935">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1787]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4130" _type="MoveCaretCommand" caretOffset="7869" date="Tue May 03 18:48:11 EDT 2022" docOffset="9544" starttimestamp="1651614162506" timestamp="3928935" />
  <Command __id="4133" _type="PauseCommand" date="Tue May 03 18:48:12 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3930389">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1454]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="4134" _type="PasteCommand" date="Tue May 03 18:48:12 EDT 2022" starttimestamp="1651614162506" timestamp="3930397" />
  <Command __id="4135" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:48:13 EDT 2022" starttimestamp="1651614162506" timestamp="3930967" />
  <Command __id="4136" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:13 EDT 2022" starttimestamp="1651614162506" timestamp="3931054" />
  <Command __id="4137" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:13 EDT 2022" starttimestamp="1651614162506" timestamp="3931104" />
  <Command __id="4138" _type="MoveCaretCommand" caretOffset="8122" date="Tue May 03 18:48:14 EDT 2022" docOffset="9797" starttimestamp="1651614162506" timestamp="3931570" />
  <Command __id="4140" _type="PauseCommand" date="Tue May 03 18:48:18 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3935824">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4254]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4139" _type="ShellCommand" date="Tue May 03 18:48:18 EDT 2022" starttimestamp="1651614162506" timestamp="3935824" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4141" _type="ShellCommand" date="Tue May 03 18:48:19 EDT 2022" starttimestamp="1651614162506" timestamp="3936747" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4143" _type="MoveCaretCommand" caretOffset="5401" date="Tue May 03 18:48:19 EDT 2022" docOffset="5401" starttimestamp="1651614162506" timestamp="3936896" />
  <Command __id="4145" _type="PauseCommand" date="Tue May 03 18:48:23 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3940690">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3794]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4144" _type="MoveCaretCommand" caretOffset="3604" date="Tue May 03 18:48:23 EDT 2022" docOffset="3604" starttimestamp="1651614162506" timestamp="3940690" />
  <Command __id="4146" _type="SelectTextCommand" caretOffset="3608" date="Tue May 03 18:48:23 EDT 2022" end="3608" start="3586" starttimestamp="1651614162506" timestamp="3940828" />
  <Command __id="4148" _type="PasteCommand" date="Tue May 03 18:48:24 EDT 2022" starttimestamp="1651614162506" timestamp="3941611" />
  <Command __id="4149" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:48:24 EDT 2022" starttimestamp="1651614162506" timestamp="3942388" />
  <Command __id="4150" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:24 EDT 2022" starttimestamp="1651614162506" timestamp="3942475" />
  <Command __id="4151" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:25 EDT 2022" starttimestamp="1651614162506" timestamp="3942496" />
  <Command __id="4153" _type="PauseCommand" date="Tue May 03 18:48:28 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3946397">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3901]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4152" _type="MoveCaretCommand" caretOffset="5413" date="Tue May 03 18:48:28 EDT 2022" docOffset="5413" starttimestamp="1651614162506" timestamp="3946397" />
  <Command __id="4154" _type="SelectTextCommand" caretOffset="5421" date="Tue May 03 18:48:29 EDT 2022" end="5421" start="5399" starttimestamp="1651614162506" timestamp="3946526" />
  <Command __id="4156" _type="PasteCommand" date="Tue May 03 18:48:29 EDT 2022" starttimestamp="1651614162506" timestamp="3947081" />
  <Command __id="4157" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:48:30 EDT 2022" starttimestamp="1651614162506" timestamp="3947594" />
  <Command __id="4158" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:30 EDT 2022" starttimestamp="1651614162506" timestamp="3947679" />
  <Command __id="4159" _type="EclipseCommand" commandID="" date="Tue May 03 18:48:30 EDT 2022" starttimestamp="1651614162506" timestamp="3947702" />
  <Command __id="4161" _type="PauseCommand" date="Tue May 03 18:48:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3949573">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1871]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4160" _type="ShellCommand" date="Tue May 03 18:48:32 EDT 2022" starttimestamp="1651614162506" timestamp="3949573" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4163" _type="PauseCommand" date="Tue May 03 18:48:34 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3951896">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2323]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4162" _type="ShellCommand" date="Tue May 03 18:48:34 EDT 2022" starttimestamp="1651614162506" timestamp="3951896" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4164" _type="MoveCaretCommand" caretOffset="5799" date="Tue May 03 18:48:34 EDT 2022" docOffset="5799" starttimestamp="1651614162506" timestamp="3951951" />
  <Command __id="4166" _type="PauseCommand" date="Tue May 03 18:48:35 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3953275">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1324]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4167" _type="SelectTextCommand" caretOffset="374" date="Tue May 03 18:48:35 EDT 2022" end="374" start="363" starttimestamp="1651614162506" timestamp="3953412" />
  <Command __id="4169" _type="PauseCommand" date="Tue May 03 18:48:38 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3955689">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2277]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4168" _type="ShellCommand" date="Tue May 03 18:48:38 EDT 2022" starttimestamp="1651614162506" timestamp="3955689" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4171" _type="PauseCommand" date="Tue May 03 18:48:39 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3957199">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1510]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4170" _type="ShellCommand" date="Tue May 03 18:48:39 EDT 2022" starttimestamp="1651614162506" timestamp="3957199" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4172" _type="MoveCaretCommand" caretOffset="415" date="Tue May 03 18:48:40 EDT 2022" docOffset="764" starttimestamp="1651614162506" timestamp="3957626" />
  <Command __id="4174" _type="PauseCommand" date="Tue May 03 18:48:44 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3961876">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4250]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4175" _type="SelectTextCommand" caretOffset="329" date="Tue May 03 18:48:44 EDT 2022" end="329" start="318" starttimestamp="1651614162506" timestamp="3961996" />
  <Command __id="4177" _type="UndoCommand" date="Tue May 03 18:48:44 EDT 2022" starttimestamp="1651614162506" timestamp="3962482" />
  <Command __id="4179" _type="UndoCommand" date="Tue May 03 18:48:45 EDT 2022" starttimestamp="1651614162506" timestamp="3963381" />
  <Command __id="4181" _type="UndoCommand" date="Tue May 03 18:48:46 EDT 2022" starttimestamp="1651614162506" timestamp="3963732" />
  <Command __id="4183" _type="UndoCommand" date="Tue May 03 18:48:46 EDT 2022" starttimestamp="1651614162506" timestamp="3964358" />
  <Command __id="4185" _type="PauseCommand" date="Tue May 03 18:48:51 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3968985">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[4627]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4186" _type="RedoCommand" date="Tue May 03 18:48:51 EDT 2022" starttimestamp="1651614162506" timestamp="3969002" />
  <Command __id="4188" _type="PauseCommand" date="Tue May 03 18:48:52 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3970090">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RedoCommand]]></prev>
    <pause><![CDATA[1087]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="4189" _type="RedoCommand" date="Tue May 03 18:48:52 EDT 2022" starttimestamp="1651614162506" timestamp="3970095" />
  <Command __id="4191" _type="PauseCommand" date="Tue May 03 18:48:54 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3972129">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RedoCommand]]></prev>
    <pause><![CDATA[2034]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="4192" _type="RedoCommand" date="Tue May 03 18:48:54 EDT 2022" starttimestamp="1651614162506" timestamp="3972136" />
  <DocumentChange __id="4094" _type="Replace" date="Tue May 03 18:47:48 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9080" docExpressionCount="812" docLength="9824" endLine="280" insertionLength="17" int_docASTNodeCount="1160" int_docActiveCodeLength="9063" int_docExpressionCount="810" int_docLength="9807" length="22" offset="9532" startLine="280" starttimestamp="1651614162506" timestamp="3906075">
    <deletedText><![CDATA[argumentProcessorAgain]]></deletedText>
    <insertedText><![CDATA[argumentProcessor]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4100" _type="Replace" date="Tue May 03 18:47:59 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9085" docExpressionCount="812" docLength="9829" endLine="280" insertionLength="22" int_docASTNodeCount="1160" int_docActiveCodeLength="9063" int_docExpressionCount="810" int_docLength="9807" length="17" offset="9532" startLine="280" starttimestamp="1651614162506" timestamp="3916651">
    <deletedText><![CDATA[argumentProcessor]]></deletedText>
    <insertedText><![CDATA[argumentProcessorAgain]]></insertedText>
  </DocumentChange>
  <Command __id="4103" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:48:00 EDT 2022" docASTNodeCount="120" docActiveCodeLength="924" docExpressionCount="81" docLength="958" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3918322">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4106" _type="Insert" date="Tue May 03 18:48:01 EDT 2022" docASTNodeCount="120" docActiveCodeLength="925" docExpressionCount="81" docLength="959" length="1" offset="729" starttimestamp="1651614162506" timestamp="3919266">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="4108" _type="Delete" date="Tue May 03 18:48:02 EDT 2022" docASTNodeCount="120" docActiveCodeLength="924" docExpressionCount="81" docLength="958" endLine="22" length="1" offset="729" startLine="22" starttimestamp="1651614162506" timestamp="3920235">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <DocumentChange __id="4110" _type="Insert" date="Tue May 03 18:48:03 EDT 2022" docASTNodeCount="120" docActiveCodeLength="925" docExpressionCount="81" docLength="959" length="1" offset="729" starttimestamp="1651614162506" timestamp="3920675">
    <text><![CDATA[G]]></text>
  </DocumentChange>
  <DocumentChange __id="4112" _type="Delete" date="Tue May 03 18:48:03 EDT 2022" docASTNodeCount="120" docActiveCodeLength="910" docExpressionCount="81" docLength="944" endLine="22" length="15" offset="715" startLine="22" starttimestamp="1651614162506" timestamp="3921308">
    <text><![CDATA[umentProcessorG]]></text>
  </DocumentChange>
  <DocumentChange __id="4114" _type="Insert" date="Tue May 03 18:48:04 EDT 2022" docASTNodeCount="120" docActiveCodeLength="911" docExpressionCount="81" docLength="945" length="1" offset="715" starttimestamp="1651614162506" timestamp="3922022">
    <text><![CDATA[y]]></text>
  </DocumentChange>
  <DocumentChange __id="4116" _type="Delete" date="Tue May 03 18:48:05 EDT 2022" docASTNodeCount="120" docActiveCodeLength="908" docExpressionCount="81" docLength="942" endLine="22" length="3" offset="713" startLine="22" starttimestamp="1651614162506" timestamp="3922691">
    <text><![CDATA[rgy]]></text>
  </DocumentChange>
  <DocumentChange __id="4118" _type="Replace" date="Tue May 03 18:48:05 EDT 2022" docASTNodeCount="120" docActiveCodeLength="918" docExpressionCount="81" docLength="952" endLine="22" insertionLength="11" int_docASTNodeCount="117" int_docActiveCodeLength="907" int_docExpressionCount="79" int_docLength="941" length="1" offset="712" startLine="22" starttimestamp="1651614162506" timestamp="3923113">
    <deletedText><![CDATA[a]]></deletedText>
    <insertedText><![CDATA[processArgs]]></insertedText>
  </DocumentChange>
  <Command __id="4128" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:48:09 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9085" docExpressionCount="812" docLength="9829" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3927042">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientRemoteInterfaceRMI, ClientRemoteInterfaceGIPC {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	//A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶	//protected int aProposalNumber;¶	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void argumentProcessorAgain(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4132" _type="Replace" date="Tue May 03 18:48:12 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9074" docExpressionCount="812" docLength="9818" endLine="280" insertionLength="11" int_docASTNodeCount="1160" int_docActiveCodeLength="9063" int_docExpressionCount="810" int_docLength="9807" length="22" offset="9532" startLine="280" starttimestamp="1651614162506" timestamp="3930389">
    <deletedText><![CDATA[argumentProcessorAgain]]></deletedText>
    <insertedText><![CDATA[processArgs]]></insertedText>
  </DocumentChange>
  <Command __id="4142" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:48:19 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12619" docExpressionCount="1106" docLength="15256" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3936795">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}¶	@Override¶	public void argumentProcessorAgain(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.argumentProcessorAgain(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void initiateNio(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4147" _type="Replace" date="Tue May 03 18:48:24 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12608" docExpressionCount="1106" docLength="15245" endLine="92" insertionLength="11" int_docASTNodeCount="1640" int_docActiveCodeLength="12597" int_docExpressionCount="1105" int_docLength="15234" length="22" offset="3586" startLine="92" starttimestamp="1651614162506" timestamp="3941601">
    <deletedText><![CDATA[argumentProcessorAgain]]></deletedText>
    <insertedText><![CDATA[processArgs]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4155" _type="Replace" date="Tue May 03 18:48:29 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12597" docExpressionCount="1106" docLength="15234" endLine="153" insertionLength="11" int_docASTNodeCount="1639" int_docActiveCodeLength="12586" int_docExpressionCount="1104" int_docLength="15223" length="22" offset="5399" startLine="153" starttimestamp="1651614162506" timestamp="3947071">
    <deletedText><![CDATA[argumentProcessorAgain]]></deletedText>
    <insertedText><![CDATA[processArgs]]></insertedText>
  </DocumentChange>
  <Command __id="4165" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:48:35 EDT 2022" docASTNodeCount="120" docActiveCodeLength="918" docExpressionCount="81" docLength="952" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3953275">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientRemoteInterfaceRMI  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void "), Diff(DELETE,"argumentP"), Diff(INSERT,"p"), Diff(EQUAL,"rocess"), Diff(DELETE,"or"), Diff(INSERT,"Args"), Diff(EQUAL,"(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="4173" _type="DiffBasedFileOpenCommand" date="Tue May 03 18:48:44 EDT 2022" docASTNodeCount="101" docActiveCodeLength="813" docExpressionCount="69" docLength="813" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3961876">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶¶	HalloweenCommandProcessor getCommandProcessor();¶	void simulateCommand(String aCommand);¶	void initiateNio(String[] args);¶¶	void setFactories();¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="4176" _type="Delete" date="Tue May 03 18:48:44 EDT 2022" docASTNodeCount="99" docActiveCodeLength="802" docExpressionCount="68" docLength="802" endLine="17" length="11" offset="695" startLine="17" starttimestamp="1651614162506" timestamp="3962473">
    <text><![CDATA[initiateNio]]></text>
  </DocumentChange>
  <DocumentChange __id="4178" _type="Insert" date="Tue May 03 18:48:45 EDT 2022" docASTNodeCount="101" docActiveCodeLength="803" docExpressionCount="69" docLength="803" length="1" offset="695" starttimestamp="1651614162506" timestamp="3963376">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <DocumentChange __id="4180" _type="Replace" date="Tue May 03 18:48:46 EDT 2022" docASTNodeCount="101" docActiveCodeLength="809" docExpressionCount="69" docLength="809" endLine="17" insertionLength="7" int_docASTNodeCount="99" int_docActiveCodeLength="802" int_docExpressionCount="68" int_docLength="802" length="1" offset="695" startLine="17" starttimestamp="1651614162506" timestamp="3963724">
    <deletedText><![CDATA[I]]></deletedText>
    <insertedText><![CDATA[nioInit]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4182" _type="Delete" date="Tue May 03 18:48:46 EDT 2022" docASTNodeCount="101" docActiveCodeLength="801" docExpressionCount="69" docLength="801" endLine="16" length="8" offset="661" startLine="16" starttimestamp="1651614162506" timestamp="3964351">
    <text><![CDATA[eCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="4184" _type="Insert" date="Tue May 03 18:48:51 EDT 2022" docASTNodeCount="101" docActiveCodeLength="809" docExpressionCount="69" docLength="809" length="8" offset="661" starttimestamp="1651614162506" timestamp="3968985">
    <text><![CDATA[eCommand]]></text>
  </DocumentChange>
  <DocumentChange __id="4187" _type="Replace" date="Tue May 03 18:48:52 EDT 2022" docASTNodeCount="101" docActiveCodeLength="803" docExpressionCount="69" docLength="803" endLine="17" insertionLength="1" int_docASTNodeCount="99" int_docActiveCodeLength="802" int_docExpressionCount="68" int_docLength="802" length="7" offset="695" startLine="17" starttimestamp="1651614162506" timestamp="3970089">
    <deletedText><![CDATA[nioInit]]></deletedText>
    <insertedText><![CDATA[I]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="4190" _type="Delete" date="Tue May 03 18:48:54 EDT 2022" docASTNodeCount="99" docActiveCodeLength="802" docExpressionCount="68" docLength="802" endLine="17" length="1" offset="695" startLine="17" starttimestamp="1651614162506" timestamp="3972129">
    <text><![CDATA[I]]></text>
  </DocumentChange>
  <Command __id="4194" _type="PauseCommand" date="Tue May 03 18:48:56 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3974227">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[RedoCommand]]></prev>
    <pause><![CDATA[2091]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="4195" _type="RedoCommand" date="Tue May 03 18:48:56 EDT 2022" starttimestamp="1651614162506" timestamp="3974235" />
  <Command __id="4196" _type="MoveCaretCommand" caretOffset="431" date="Tue May 03 18:48:57 EDT 2022" docOffset="808" starttimestamp="1651614162506" timestamp="3974789" />
  <Command __id="4197" _type="MoveCaretCommand" caretOffset="431" date="Tue May 03 18:48:58 EDT 2022" docOffset="808" starttimestamp="1651614162506" timestamp="3975520" />
  <Command __id="4199" _type="PauseCommand" date="Tue May 03 18:48:59 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3977423">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1903]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4198" _type="ShellCommand" date="Tue May 03 18:48:59 EDT 2022" starttimestamp="1651614162506" timestamp="3977423" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4201" _type="PauseCommand" date="Tue May 03 18:49:02 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3979817">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2394]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4200" _type="ShellCommand" date="Tue May 03 18:49:02 EDT 2022" starttimestamp="1651614162506" timestamp="3979817" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4202" _type="MoveCaretCommand" caretOffset="347" date="Tue May 03 18:49:02 EDT 2022" docOffset="724" starttimestamp="1651614162506" timestamp="3979882" />
  <Command __id="4204" _type="PauseCommand" date="Tue May 03 18:49:03 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3981018">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1136]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4203" _type="ShellCommand" date="Tue May 03 18:49:03 EDT 2022" starttimestamp="1651614162506" timestamp="3981018" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4206" _type="PauseCommand" date="Tue May 03 18:49:05 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="3982550">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1532]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4205" _type="ShellCommand" date="Tue May 03 18:49:05 EDT 2022" starttimestamp="1651614162506" timestamp="3982550" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4207" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:49:05 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3982630" type="Run" />
  <Command __id="4208" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:49:05 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="3982630" type="Run" />
  <Command __id="4210" _type="PauseCommand" date="Tue May 03 18:49:07 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="3985053">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2423]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4209" _type="ShellCommand" date="Tue May 03 18:49:07 EDT 2022" starttimestamp="1651614162506" timestamp="3985053" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4212" _type="PauseCommand" date="Tue May 03 18:49:26 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4004161">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[19108]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4211" _type="ShellCommand" date="Tue May 03 18:49:26 EDT 2022" starttimestamp="1651614162506" timestamp="4004161" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4214" _type="PauseCommand" date="Tue May 03 18:49:41 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4018926">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14765]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4213" _type="ConsoleOutput" date="Tue May 03 18:49:41 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4018926" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21803
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14885"), Diff(INSERT,"21803"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4216" _type="PauseCommand" date="Tue May 03 18:49:51 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="4028900">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9974]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4217" _type="SelectTextCommand" caretOffset="4321" date="Tue May 03 18:49:51 EDT 2022" end="4321" start="4287" starttimestamp="1651614162506" timestamp="4029088" />
  <Command __id="4219" _type="PauseCommand" date="Tue May 03 18:49:57 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="4035354">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6266]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4218" _type="ShellCommand" date="Tue May 03 18:49:57 EDT 2022" starttimestamp="1651614162506" timestamp="4035354" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4221" _type="PauseCommand" date="Tue May 03 18:50:11 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4048848">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13494]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4220" _type="ShellCommand" date="Tue May 03 18:50:11 EDT 2022" starttimestamp="1651614162506" timestamp="4048848" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4222" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:50:11 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="4048973" type="Run" />
  <Command __id="4223" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:50:11 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="4048973" type="Run" />
  <Command __id="4225" _type="PauseCommand" date="Tue May 03 18:50:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4051902">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2929]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4226" _type="MoveCaretCommand" caretOffset="180" date="Tue May 03 18:50:14 EDT 2022" docOffset="299" starttimestamp="1651614162506" timestamp="4052130" />
  <Command __id="4227" _type="ShellCommand" date="Tue May 03 18:50:15 EDT 2022" starttimestamp="1651614162506" timestamp="4052684" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4229" _type="PauseCommand" date="Tue May 03 18:50:16 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4053757">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1073]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4228" _type="ShellCommand" date="Tue May 03 18:50:16 EDT 2022" starttimestamp="1651614162506" timestamp="4053757" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4230" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:50:16 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="4053829" type="Run" />
  <Command __id="4231" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 18:50:16 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="4053829" type="Run" />
  <Command __id="4233" _type="PauseCommand" date="Tue May 03 18:50:18 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4056320">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2491]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4232" _type="ShellCommand" date="Tue May 03 18:50:18 EDT 2022" starttimestamp="1651614162506" timestamp="4056320" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4235" _type="PauseCommand" date="Tue May 03 18:50:41 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="4079401">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23081]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4234" _type="ConsoleOutput" date="Tue May 03 18:50:41 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4079401" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21592
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):21"), Diff(DELETE,"803"), Diff(INSERT,"592"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4237" _type="PauseCommand" date="Tue May 03 18:50:44 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4081912">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2511]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4236" _type="ShellCommand" date="Tue May 03 18:50:44 EDT 2022" starttimestamp="1651614162506" timestamp="4081912" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4239" _type="PauseCommand" date="Tue May 03 18:50:48 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4085839">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3927]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4238" _type="EclipseCommand" commandID="org.eclipse.ui.project.buildAutomatically" date="Tue May 03 18:50:48 EDT 2022" starttimestamp="1651614162506" timestamp="4085839" />
  <Command __id="4241" _type="PauseCommand" date="Tue May 03 18:50:50 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4087561">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1722]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4240" _type="EclipseCommand" commandID="org.eclipse.ui.project.buildAutomatically" date="Tue May 03 18:50:50 EDT 2022" starttimestamp="1651614162506" timestamp="4087561" />
  <Command __id="4243" _type="PauseCommand" date="Tue May 03 18:50:52 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4090460">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2899]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4242" _type="ShellCommand" date="Tue May 03 18:50:52 EDT 2022" starttimestamp="1651614162506" timestamp="4090460" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4245" _type="PauseCommand" date="Tue May 03 18:50:56 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4093747">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3287]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4244" _type="ConsoleOutput" date="Tue May 03 18:50:56 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4093747" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14292
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"215"), Diff(INSERT,"142"), Diff(EQUAL,"92¶")]]]></diff>
  </Command>
  <Command __id="4247" _type="PauseCommand" date="Tue May 03 18:51:10 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4108159">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14412]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4246" _type="ConsoleOutput" date="Tue May 03 18:51:10 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4108159" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14457
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):14"), Diff(DELETE,"292"), Diff(INSERT,"457"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4249" _type="PauseCommand" date="Tue May 03 18:51:31 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="4128724">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[20565]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4248" _type="ShellCommand" date="Tue May 03 18:51:31 EDT 2022" starttimestamp="1651614162506" timestamp="4128724" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4251" _type="PauseCommand" date="Tue May 03 18:51:33 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4131449">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2725]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4250" _type="ShellCommand" date="Tue May 03 18:51:33 EDT 2022" starttimestamp="1651614162506" timestamp="4131449" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4253" _type="PauseCommand" date="Tue May 03 18:51:42 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="4139494">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8045]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4252" _type="ShellCommand" date="Tue May 03 18:51:42 EDT 2022" starttimestamp="1651614162506" timestamp="4139494" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4254" _type="EclipseCommand" commandID="org.eclipse.ui.project.properties" date="Tue May 03 18:51:42 EDT 2022" starttimestamp="1651614162506" timestamp="4139517" />
  <Command __id="4256" _type="PauseCommand" date="Tue May 03 18:51:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4141258">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1741]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4255" _type="ShellCommand" date="Tue May 03 18:51:43 EDT 2022" starttimestamp="1651614162506" timestamp="4141258" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4258" _type="PauseCommand" date="Tue May 03 18:52:36 EDT 2022" range="30s-1m" starttimestamp="1651614162506" timestamp="4194488">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[53230]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4257" _type="ConsoleOutput" date="Tue May 03 18:52:36 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4194488" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67580
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14457"), Diff(INSERT,"67580"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4260" _type="PauseCommand" date="Tue May 03 18:52:46 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="4204202">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9714]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4259" _type="ConsoleOutput" date="Tue May 03 18:52:46 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4204202" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67580"), Diff(INSERT,"Number of traces > 800  turning tracing off¶Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4262" _type="PauseCommand" date="Tue May 03 18:54:29 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="4307013">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[102811]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4261" _type="ConsoleOutput" date="Tue May 03 18:54:29 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4307013" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112571
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 800  turning tracing off"), Diff(INSERT,"Test execution time (ms):112571"), Diff(EQUAL,"¶Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4264" _type="PauseCommand" date="Tue May 03 18:54:52 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="4329590">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22577]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4263" _type="ConsoleOutput" date="Tue May 03 18:54:52 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4329590" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22575
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"257"), Diff(DELETE,"1¶Number of traces > 800  turning tracing off"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4266" _type="PauseCommand" date="Tue May 03 18:55:04 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4341890">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[12300]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4265" _type="ShellCommand" date="Tue May 03 18:55:04 EDT 2022" starttimestamp="1651614162506" timestamp="4341890" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4268" _type="PauseCommand" date="Tue May 03 18:55:22 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4360397">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18507]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4267" _type="ShellCommand" date="Tue May 03 18:55:22 EDT 2022" starttimestamp="1651614162506" timestamp="4360397" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4270" _type="PauseCommand" date="Tue May 03 18:56:09 EDT 2022" range="30s-1m" starttimestamp="1651614162506" timestamp="4406954">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[46557]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4269" _type="ShellCommand" date="Tue May 03 18:56:09 EDT 2022" starttimestamp="1651614162506" timestamp="4406954" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4272" _type="PauseCommand" date="Tue May 03 18:56:19 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4417112">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10157]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4271" _type="ShellCommand" date="Tue May 03 18:56:19 EDT 2022" starttimestamp="1651614162506" timestamp="4417111" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4274" _type="PauseCommand" date="Tue May 03 18:56:44 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="4442175">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[25064]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4273" _type="ConsoleOutput" date="Tue May 03 18:56:44 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4442175" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i rmi' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i gipc' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification%0.0

Number of traces > 800  turning tracing off
Test execution time (ms):112582
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22575"), Diff(INSERT,"GIPCRMINIOClientMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Number of traces > 800  turning tracing off¶Test execution time (ms):112582¶Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4276" _type="PauseCommand" date="Tue May 03 18:56:49 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4446626">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4451]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4275" _type="ConsoleOutput" date="Tue May 03 18:56:49 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4446626" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOClientMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Number of traces > 800  turning tracing off¶Test execution time (ms):112582¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4278" _type="PauseCommand" date="Tue May 03 18:57:05 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4463045">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16419]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4277" _type="ShellCommand" date="Tue May 03 18:57:05 EDT 2022" starttimestamp="1651614162506" timestamp="4463045" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4280" _type="PauseCommand" date="Tue May 03 18:57:07 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4464758">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1713]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4279" _type="ConsoleOutput" date="Tue May 03 18:57:07 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4464758" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22565
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):22565¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4282" _type="PauseCommand" date="Tue May 03 18:57:11 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4469120">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4362]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4281" _type="ConsoleOutput" date="Tue May 03 18:57:11 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4469120" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22565¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4284" _type="PauseCommand" date="Tue May 03 18:57:14 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4471661">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2541]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4283" _type="ShellCommand" date="Tue May 03 18:57:14 EDT 2022" starttimestamp="1651614162506" timestamp="4471661" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4286" _type="PauseCommand" date="Tue May 03 18:57:47 EDT 2022" range="30s-1m" starttimestamp="1651614162506" timestamp="4504736">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[33075]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4285" _type="ShellCommand" date="Tue May 03 18:57:47 EDT 2022" starttimestamp="1651614162506" timestamp="4504736" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4288" _type="PauseCommand" date="Tue May 03 18:57:50 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4507995">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3259]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4287" _type="ShellCommand" date="Tue May 03 18:57:50 EDT 2022" starttimestamp="1651614162506" timestamp="4507995" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4290" _type="PauseCommand" date="Tue May 03 18:58:18 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="4536392">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[28397]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4289" _type="ShellCommand" date="Tue May 03 18:58:18 EDT 2022" starttimestamp="1651614162506" timestamp="4536392" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4292" _type="PauseCommand" date="Tue May 03 18:58:20 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4537795">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1403]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4291" _type="ShellCommand" date="Tue May 03 18:58:20 EDT 2022" starttimestamp="1651614162506" timestamp="4537795" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4294" _type="PauseCommand" date="Tue May 03 18:58:35 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4552732">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14937]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4293" _type="ShellCommand" date="Tue May 03 18:58:35 EDT 2022" starttimestamp="1651614162506" timestamp="4552732" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4296" _type="PauseCommand" date="Tue May 03 18:58:36 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4553937">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4295" _type="ShellCommand" date="Tue May 03 18:58:36 EDT 2022" starttimestamp="1651614162506" timestamp="4553937" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4298" _type="PauseCommand" date="Tue May 03 18:58:59 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="4577370">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23433]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4297" _type="ConsoleOutput" date="Tue May 03 18:58:59 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4577370" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0

Test execution time (ms):112572
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 800  turning tracing off"), Diff(INSERT,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Test execution time (ms):112572"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4300" _type="PauseCommand" date="Tue May 03 18:59:03 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4581442">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4072]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4299" _type="ConsoleOutput" date="Tue May 03 18:59:03 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4581442" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@5a245ed4 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Test execution time (ms):112572"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateBroadcast@5a245ed4 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4302" _type="PauseCommand" date="Tue May 03 18:59:15 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4593419">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[11977]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4301" _type="ConsoleOutput" date="Tue May 03 18:59:15 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4593419" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@3d2081c9 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIO"), Diff(DELETE,"Client"), Diff(INSERT,"Server"), Diff(EQUAL,"MetaStateBroadcast@"), Diff(DELETE,"5a245ed4"), Diff(INSERT,"3d2081c9"), Diff(EQUAL," . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="4304" _type="PauseCommand" date="Tue May 03 18:59:17 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4595240">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1821]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4303" _type="ShellCommand" date="Tue May 03 18:59:17 EDT 2022" starttimestamp="1651614162506" timestamp="4595240" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4305" _type="MoveCaretCommand" caretOffset="947" date="Tue May 03 18:59:17 EDT 2022" docOffset="1066" starttimestamp="1651614162506" timestamp="4595313" />
  <Command __id="4306" _type="MoveCaretCommand" caretOffset="947" date="Tue May 03 18:59:17 EDT 2022" docOffset="1066" starttimestamp="1651614162506" timestamp="4595313" />
  <Command __id="4308" _type="PauseCommand" date="Tue May 03 18:59:19 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4596895">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1582]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4307" _type="ShellCommand" date="Tue May 03 18:59:19 EDT 2022" starttimestamp="1651614162506" timestamp="4596895" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4310" _type="PauseCommand" date="Tue May 03 18:59:21 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4599009">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2114]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4309" _type="ShellCommand" date="Tue May 03 18:59:21 EDT 2022" starttimestamp="1651614162506" timestamp="4599009" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4311" _type="MoveCaretCommand" caretOffset="917" date="Tue May 03 18:59:21 EDT 2022" docOffset="1036" starttimestamp="1651614162506" timestamp="4599066" />
  <Command __id="4312" _type="MoveCaretCommand" caretOffset="917" date="Tue May 03 18:59:21 EDT 2022" docOffset="1036" starttimestamp="1651614162506" timestamp="4599066" />
  <Command __id="4314" _type="PauseCommand" date="Tue May 03 18:59:23 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4600495">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1429]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4315" _type="MoveCaretCommand" caretOffset="347" date="Tue May 03 18:59:23 EDT 2022" docOffset="724" starttimestamp="1651614162506" timestamp="4600608" />
  <Command __id="4317" _type="MoveCaretCommand" caretOffset="415" date="Tue May 03 18:59:24 EDT 2022" docOffset="764" starttimestamp="1651614162506" timestamp="4601546" />
  <Command __id="4318" _type="MoveCaretCommand" caretOffset="323" date="Tue May 03 18:59:24 EDT 2022" docOffset="672" starttimestamp="1651614162506" timestamp="4602021" />
  <Command __id="4320" _type="PauseCommand" date="Tue May 03 18:59:27 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4604731">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2710]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4319" _type="MoveCaretCommand" caretOffset="385" date="Tue May 03 18:59:27 EDT 2022" docOffset="734" starttimestamp="1651614162506" timestamp="4604731" />
  <Command __id="4322" _type="PauseCommand" date="Tue May 03 18:59:35 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="4612944">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8213]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="4323" _type="MoveCaretCommand" caretOffset="347" date="Tue May 03 18:59:35 EDT 2022" docOffset="724" starttimestamp="1651614162506" timestamp="4613065" />
  <Command __id="4325" _type="UndoCommand" date="Tue May 03 18:59:36 EDT 2022" starttimestamp="1651614162506" timestamp="4613767" />
  <Command __id="4327" _type="UndoCommand" date="Tue May 03 18:59:36 EDT 2022" starttimestamp="1651614162506" timestamp="4614422" />
  <Command __id="4329" _type="UndoCommand" date="Tue May 03 18:59:37 EDT 2022" starttimestamp="1651614162506" timestamp="4614806" />
  <Command __id="4331" _type="PauseCommand" date="Tue May 03 18:59:38 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4615841">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1035]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="4330" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:59:38 EDT 2022" starttimestamp="1651614162506" timestamp="4615841" />
  <Command __id="4332" _type="EclipseCommand" commandID="" date="Tue May 03 18:59:38 EDT 2022" starttimestamp="1651614162506" timestamp="4615973" />
  <Command __id="4333" _type="EclipseCommand" commandID="" date="Tue May 03 18:59:38 EDT 2022" starttimestamp="1651614162506" timestamp="4616010" />
  <Command __id="4335" _type="PauseCommand" date="Tue May 03 18:59:40 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4618202">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2192]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4334" _type="MoveCaretCommand" caretOffset="322" date="Tue May 03 18:59:40 EDT 2022" docOffset="699" starttimestamp="1651614162506" timestamp="4618202" />
  <Command __id="4336" _type="SelectTextCommand" caretOffset="325" date="Tue May 03 18:59:40 EDT 2022" end="325" start="318" starttimestamp="1651614162506" timestamp="4618324" />
  <Command __id="4337" _type="CopyCommand" date="Tue May 03 18:59:41 EDT 2022" starttimestamp="1651614162506" timestamp="4618914" />
  <Command __id="4339" _type="MoveCaretCommand" caretOffset="5799" date="Tue May 03 18:59:42 EDT 2022" docOffset="5799" starttimestamp="1651614162506" timestamp="4619525" />
  <Command __id="4341" _type="PauseCommand" date="Tue May 03 18:59:45 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4623331">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3806]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4340" _type="MoveCaretCommand" caretOffset="11092" date="Tue May 03 18:59:45 EDT 2022" docOffset="11092" starttimestamp="1651614162506" timestamp="4623331" />
  <Command __id="4342" _type="SelectTextCommand" caretOffset="11099" date="Tue May 03 18:59:45 EDT 2022" end="11099" start="11088" starttimestamp="1651614162506" timestamp="4623464" />
  <Command __id="4344" _type="PasteCommand" date="Tue May 03 18:59:46 EDT 2022" starttimestamp="1651614162506" timestamp="4624098" />
  <Command __id="4345" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:59:47 EDT 2022" starttimestamp="1651614162506" timestamp="4624580" />
  <Command __id="4346" _type="EclipseCommand" commandID="" date="Tue May 03 18:59:47 EDT 2022" starttimestamp="1651614162506" timestamp="4624664" />
  <Command __id="4347" _type="EclipseCommand" commandID="" date="Tue May 03 18:59:47 EDT 2022" starttimestamp="1651614162506" timestamp="4624689" />
  <Command __id="4349" _type="PauseCommand" date="Tue May 03 18:59:50 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4628210">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3521]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4348" _type="ShellCommand" date="Tue May 03 18:59:50 EDT 2022" starttimestamp="1651614162506" timestamp="4628210" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4351" _type="PauseCommand" date="Tue May 03 18:59:51 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4629410">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1200]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4350" _type="ShellCommand" date="Tue May 03 18:59:51 EDT 2022" starttimestamp="1651614162506" timestamp="4629410" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4353" _type="MoveCaretCommand" caretOffset="445" date="Tue May 03 18:59:52 EDT 2022" docOffset="1931" starttimestamp="1651614162506" timestamp="4629567" />
  <Command __id="4355" _type="PauseCommand" date="Tue May 03 18:59:55 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4633449">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3882]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="4354" _type="MoveCaretCommand" caretOffset="5210" date="Tue May 03 18:59:55 EDT 2022" docOffset="6696" starttimestamp="1651614162506" timestamp="4633449" />
  <Command __id="4356" _type="SelectTextCommand" caretOffset="5215" date="Tue May 03 18:59:56 EDT 2022" end="5215" start="5204" starttimestamp="1651614162506" timestamp="4633581" />
  <Command __id="4358" _type="PasteCommand" date="Tue May 03 18:59:56 EDT 2022" starttimestamp="1651614162506" timestamp="4634181" />
  <Command __id="4359" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 18:59:57 EDT 2022" starttimestamp="1651614162506" timestamp="4634583" />
  <Command __id="4360" _type="EclipseCommand" commandID="" date="Tue May 03 18:59:57 EDT 2022" starttimestamp="1651614162506" timestamp="4634665" />
  <Command __id="4361" _type="EclipseCommand" commandID="" date="Tue May 03 18:59:57 EDT 2022" starttimestamp="1651614162506" timestamp="4634697" />
  <Command __id="4363" _type="PauseCommand" date="Tue May 03 19:00:00 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4637757">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3060]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4362" _type="ShellCommand" date="Tue May 03 19:00:00 EDT 2022" starttimestamp="1651614162506" timestamp="4637757" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4365" _type="PauseCommand" date="Tue May 03 19:00:03 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4641036">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3279]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4364" _type="ShellCommand" date="Tue May 03 19:00:03 EDT 2022" starttimestamp="1651614162506" timestamp="4641036" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4367" _type="MoveCaretCommand" caretOffset="917" date="Tue May 03 19:00:03 EDT 2022" docOffset="1036" starttimestamp="1651614162506" timestamp="4641331" />
  <Command __id="4369" _type="PauseCommand" date="Tue May 03 19:00:04 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4642399">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1068]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4368" _type="ShellCommand" date="Tue May 03 19:00:04 EDT 2022" starttimestamp="1651614162506" timestamp="4642399" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4371" _type="PauseCommand" date="Tue May 03 19:00:07 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4645466">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3067]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4370" _type="ShellCommand" date="Tue May 03 19:00:07 EDT 2022" starttimestamp="1651614162506" timestamp="4645466" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4372" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:00:08 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="4645562" type="Run" />
  <Command __id="4374" _type="PauseCommand" date="Tue May 03 19:00:09 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4647134">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1572]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4373" _type="ShellCommand" date="Tue May 03 19:00:09 EDT 2022" starttimestamp="1651614162506" timestamp="4647134" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4375" _type="ShellCommand" date="Tue May 03 19:00:10 EDT 2022" starttimestamp="1651614162506" timestamp="4648077" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4376" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:00:10 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="4648266" type="Run" />
  <Command __id="4377" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:00:10 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="4648266" type="Run" />
  <Command __id="4379" _type="PauseCommand" date="Tue May 03 19:00:12 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4649914">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1648]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4378" _type="ShellCommand" date="Tue May 03 19:00:12 EDT 2022" starttimestamp="1651614162506" timestamp="4649914" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4381" _type="PauseCommand" date="Tue May 03 19:01:21 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="4718857">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[68943]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4380" _type="ConsoleOutput" date="Tue May 03 19:01:21 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4718857" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67643
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@3d2081c9 . Results may change."), Diff(INSERT,"Test execution time (ms):67643"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4383" _type="PauseCommand" date="Tue May 03 19:01:31 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="4728722">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9865]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4382" _type="ConsoleOutput" date="Tue May 03 19:01:31 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4728722" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67643"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4385" _type="PauseCommand" date="Tue May 03 19:01:40 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="4737857">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9135]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4384" _type="ShellCommand" date="Tue May 03 19:01:40 EDT 2022" starttimestamp="1651614162506" timestamp="4737857" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4387" _type="PauseCommand" date="Tue May 03 19:01:53 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4751436">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13579]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4386" _type="ShellCommand" date="Tue May 03 19:01:53 EDT 2022" starttimestamp="1651614162506" timestamp="4751436" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4389" _type="PauseCommand" date="Tue May 03 19:02:51 EDT 2022" range="30s-1m" starttimestamp="1651614162506" timestamp="4808585">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[57149]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4388" _type="ShellCommand" date="Tue May 03 19:02:51 EDT 2022" starttimestamp="1651614162506" timestamp="4808585" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4391" _type="PauseCommand" date="Tue May 03 19:02:55 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4812692">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4107]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4390" _type="ShellCommand" date="Tue May 03 19:02:55 EDT 2022" starttimestamp="1651614162506" timestamp="4812692" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4393" _type="PauseCommand" date="Tue May 03 19:03:13 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4831493">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18801]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4392" _type="ConsoleOutput" date="Tue May 03 19:03:13 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4831493" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112579
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112579¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4395" _type="PauseCommand" date="Tue May 03 19:03:30 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4848045">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16552]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4394" _type="ShellCommand" date="Tue May 03 19:03:30 EDT 2022" starttimestamp="1651614162506" timestamp="4848045" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4397" _type="PauseCommand" date="Tue May 03 19:03:32 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4850037">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1992]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4396" _type="ShellCommand" date="Tue May 03 19:03:32 EDT 2022" starttimestamp="1651614162506" timestamp="4850037" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4399" _type="PauseCommand" date="Tue May 03 19:03:36 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4854069">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4032]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4398" _type="ConsoleOutput" date="Tue May 03 19:03:36 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4854069" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22573
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"257"), Diff(DELETE,"9¶Number of traces > 800  turning tracing off"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4401" _type="PauseCommand" date="Tue May 03 19:03:40 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4857703">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3634]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4400" _type="ShellCommand" date="Tue May 03 19:03:40 EDT 2022" starttimestamp="1651614162506" timestamp="4857703" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4403" _type="PauseCommand" date="Tue May 03 19:03:41 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="4858894">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1191]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4402" _type="ShellCommand" date="Tue May 03 19:03:41 EDT 2022" starttimestamp="1651614162506" timestamp="4858894" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4405" _type="PauseCommand" date="Tue May 03 19:04:22 EDT 2022" range="30s-1m" starttimestamp="1651614162506" timestamp="4899886">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[40992]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4404" _type="ShellCommand" date="Tue May 03 19:04:22 EDT 2022" starttimestamp="1651614162506" timestamp="4899886" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4407" _type="PauseCommand" date="Tue May 03 19:04:24 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4901951">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2065]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4406" _type="ShellCommand" date="Tue May 03 19:04:24 EDT 2022" starttimestamp="1651614162506" timestamp="4901951" type="ECLIPSE_MINIMIZED" />
  <Command __id="4408" _type="ShellCommand" date="Tue May 03 19:04:24 EDT 2022" starttimestamp="1651614162506" timestamp="4901967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4410" _type="PauseCommand" date="Tue May 03 19:05:29 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="4966599">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[64632]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4409" _type="ConsoleOutput" date="Tue May 03 19:05:29 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4966599" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i rmi' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i gipc' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification%0.0

Number of traces > 800  turning tracing off
Test execution time (ms):112577
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOClientMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Number of traces > 800  turning tracing off¶"), Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"11"), Diff(EQUAL,"257"), Diff(DELETE,"3"), Diff(INSERT,"7¶Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4412" _type="PauseCommand" date="Tue May 03 19:05:33 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4971113">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4514]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4411" _type="ConsoleOutput" date="Tue May 03 19:05:33 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4971113" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOClientMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Client 0: Server did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Number of traces > 800  turning tracing off¶Test execution time (ms):112577¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4414" _type="PauseCommand" date="Tue May 03 19:05:51 EDT 2022" range="10s-20s" starttimestamp="1651614162506" timestamp="4989177">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[18064]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4413" _type="ConsoleOutput" date="Tue May 03 19:05:51 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4989177" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22575
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):22575¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4416" _type="PauseCommand" date="Tue May 03 19:05:56 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="4993601">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4424]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4415" _type="ConsoleOutput" date="Tue May 03 19:05:56 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="4993601" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22575¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="4418" _type="PauseCommand" date="Tue May 03 19:07:44 EDT 2022" range="1m-2m" starttimestamp="1651614162506" timestamp="5101749">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[108148]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="4417" _type="ConsoleOutput" date="Tue May 03 19:07:44 EDT 2022" overflow="false" starttimestamp="1651614162506" timestamp="5101749" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;
When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0

Test execution time (ms):112569
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 800  turning tracing off"), Diff(INSERT,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:When giving 'i nio' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i rmi' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification;¶When giving 'i gipc' as input to Server: Client 0 did not receive expected notification, Client 1 did not receive expected notification%0.0¶¶Test execution time (ms):112569"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="4422" _type="PauseCommand" date="Tue May 03 19:08:41 EDT 2022" range="5s-10s" starttimestamp="1651614162506" timestamp="5159452">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9087]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="4421" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:08:41 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="5159452" type="Run" />
  <Command __id="4423" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:08:41 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651614162506" timestamp="5159453" type="Run" />
  <Command __id="4425" _type="PauseCommand" date="Tue May 03 19:08:43 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="5160569">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1116]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4424" _type="ShellCommand" date="Tue May 03 19:08:43 EDT 2022" starttimestamp="1651614162506" timestamp="5160569" type="ECLIPSE_MAXIMIZED" />
  <Command __id="4426" _type="ShellCommand" date="Tue May 03 19:08:43 EDT 2022" starttimestamp="1651614162506" timestamp="5160638" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4428" _type="PauseCommand" date="Tue May 03 19:09:07 EDT 2022" range="20s-30s" starttimestamp="1651614162506" timestamp="5184531">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23893]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4427" _type="ShellCommand" date="Tue May 03 19:09:07 EDT 2022" starttimestamp="1651614162506" timestamp="5184531" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4430" _type="PauseCommand" date="Tue May 03 19:09:09 EDT 2022" range="2s-5s" starttimestamp="1651614162506" timestamp="5186697">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2166]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4429" _type="ShellCommand" date="Tue May 03 19:09:09 EDT 2022" starttimestamp="1651614162506" timestamp="5186697" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4431" _type="ShellCommand" date="Tue May 03 19:09:09 EDT 2022" starttimestamp="1651614162506" timestamp="5187184" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="4433" _type="PauseCommand" date="Tue May 03 19:09:11 EDT 2022" range="1s-2s" starttimestamp="1651614162506" timestamp="5188691">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1507]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="4432" _type="ShellCommand" date="Tue May 03 19:09:11 EDT 2022" starttimestamp="1651614162506" timestamp="5188691" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="4434" _type="ShellCommand" date="Tue May 03 19:09:12 EDT 2022" starttimestamp="1651614162506" timestamp="5189594" type="ECLIPSE_LOST_FOCUS" />
