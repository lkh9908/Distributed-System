<Events startTimestamp="1651619386199" logVersion="1.0.0.202108012048">
  <Command __id="41" _type="EclipseCommand" commandID="" date="Tue May 03 19:09:46 EDT 2022" starttimestamp="1651619386199" timestamp="136" />
  <Command __id="43" _type="MoveCaretCommand" caretOffset="383" date="Tue May 03 19:09:47 EDT 2022" docOffset="502" starttimestamp="1651619386199" timestamp="1722" />
  <Command __id="44" _type="MoveCaretCommand" caretOffset="540" date="Tue May 03 19:09:48 EDT 2022" docOffset="659" starttimestamp="1651619386199" timestamp="2267" />
  <Command __id="46" _type="PauseCommand" date="Tue May 03 19:09:52 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="6667">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4396]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="45" _type="ShellCommand" date="Tue May 03 19:09:52 EDT 2022" starttimestamp="1651619386199" timestamp="6663" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="48" _type="PauseCommand" date="Tue May 03 19:09:54 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="8024">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1361]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="47" _type="ShellCommand" date="Tue May 03 19:09:54 EDT 2022" starttimestamp="1651619386199" timestamp="8024" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="49" _type="ShellCommand" date="Tue May 03 19:09:54 EDT 2022" starttimestamp="1651619386199" timestamp="8772" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="51" _type="PauseCommand" date="Tue May 03 19:09:58 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="11922">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3150]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="50" _type="ShellCommand" date="Tue May 03 19:09:58 EDT 2022" starttimestamp="1651619386199" timestamp="11922" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="52" _type="MoveCaretCommand" caretOffset="599" date="Tue May 03 19:09:58 EDT 2022" docOffset="718" starttimestamp="1651619386199" timestamp="11987" />
  <Command __id="142" _type="PauseCommand" date="Tue May 03 19:16:26 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="400241">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5862]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="143" _type="MoveCaretCommand" caretOffset="230" date="Tue May 03 19:16:26 EDT 2022" docOffset="298" starttimestamp="1651619386199" timestamp="400564" />
  <Command __id="145" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:16:27 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="401019" />
  <Command __id="157" _type="PauseCommand" date="Tue May 03 19:17:13 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="447716">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8513]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="158" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:17:14 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="447863" />
  <Command __id="160" _type="PauseCommand" date="Tue May 03 19:17:22 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="456277">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8414]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="161" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:17:22 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="456471" />
  <Command __id="163" _type="PauseCommand" date="Tue May 03 19:17:29 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="463723">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7252]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="162" _type="MoveCaretCommand" caretOffset="5097" date="Tue May 03 19:17:29 EDT 2022" docOffset="6788" starttimestamp="1651619386199" timestamp="463723" />
  <Command __id="164" _type="SelectTextCommand" caretOffset="5105" date="Tue May 03 19:17:30 EDT 2022" end="5105" start="5087" starttimestamp="1651619386199" timestamp="463853" />
  <Command __id="166" _type="PauseCommand" date="Tue May 03 19:17:38 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="472338">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[8485]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="167" _type="PasteCommand" date="Tue May 03 19:17:38 EDT 2022" starttimestamp="1651619386199" timestamp="472363" />
  <Command __id="169" _type="PauseCommand" date="Tue May 03 19:17:41 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="475021">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2658]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="170" _type="UndoCommand" date="Tue May 03 19:17:41 EDT 2022" starttimestamp="1651619386199" timestamp="475039" />
  <Command __id="172" _type="PauseCommand" date="Tue May 03 19:17:44 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="478341">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[3302]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="173" _type="PasteCommand" date="Tue May 03 19:17:44 EDT 2022" starttimestamp="1651619386199" timestamp="478356" />
  <Command __id="175" _type="PauseCommand" date="Tue May 03 19:17:45 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="479429">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1073]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="174" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:17:45 EDT 2022" starttimestamp="1651619386199" timestamp="479429" />
  <Command __id="176" _type="EclipseCommand" commandID="" date="Tue May 03 19:17:45 EDT 2022" starttimestamp="1651619386199" timestamp="479569" />
  <Command __id="177" _type="EclipseCommand" commandID="" date="Tue May 03 19:17:45 EDT 2022" starttimestamp="1651619386199" timestamp="479632" />
  <Command __id="178" _type="MoveCaretCommand" caretOffset="5073" date="Tue May 03 19:17:46 EDT 2022" docOffset="6764" starttimestamp="1651619386199" timestamp="479994" />
  <Command __id="183" _type="PauseCommand" date="Tue May 03 19:17:53 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="487432">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2071]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="182" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:17:53 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="487432" type="Run" />
  <Command __id="184" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:17:53 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="487432" type="Run" />
  <Command __id="186" _type="PauseCommand" date="Tue May 03 19:17:56 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="489964">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2532]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="185" _type="ShellCommand" date="Tue May 03 19:17:56 EDT 2022" starttimestamp="1651619386199" timestamp="489964" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="187" _type="ShellCommand" date="Tue May 03 19:17:56 EDT 2022" starttimestamp="1651619386199" timestamp="490028" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="189" _type="PauseCommand" date="Tue May 03 19:17:58 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="491872">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1844]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="188" _type="ShellCommand" date="Tue May 03 19:17:58 EDT 2022" starttimestamp="1651619386199" timestamp="491872" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="191" _type="PauseCommand" date="Tue May 03 19:19:07 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="560971">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[69099]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="190" _type="ConsoleOutput" date="Tue May 03 19:19:07 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="560971" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67634
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"22578"), Diff(INSERT,"67634"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="193" _type="PauseCommand" date="Tue May 03 19:19:16 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="570778">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9806]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="192" _type="ConsoleOutput" date="Tue May 03 19:19:16 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="570777" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
Number of traces > 800  turning tracing off
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67634"), Diff(INSERT,"Number of traces > 800  turning tracing off¶Number of traces > 800  turning tracing off¶Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="195" _type="PauseCommand" date="Tue May 03 19:19:55 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="609419">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[38642]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="194" _type="ShellCommand" date="Tue May 03 19:19:55 EDT 2022" starttimestamp="1651619386199" timestamp="609419" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="197" _type="PauseCommand" date="Tue May 03 19:19:58 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="611870">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2451]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="196" _type="ShellCommand" date="Tue May 03 19:19:58 EDT 2022" starttimestamp="1651619386199" timestamp="611870" type="ECLIPSE_MINIMIZED" />
  <Command __id="198" _type="ShellCommand" date="Tue May 03 19:19:58 EDT 2022" starttimestamp="1651619386199" timestamp="611888" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="200" _type="PauseCommand" date="Tue May 03 19:20:59 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="673509">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[61621]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="199" _type="ConsoleOutput" date="Tue May 03 19:20:59 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="673509" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112580
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 800  turning tracing off¶Number of traces > 800  turning tracing off"), Diff(INSERT,"Test execution time (ms):112580"), Diff(EQUAL,"¶Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="202" _type="PauseCommand" date="Tue May 03 19:21:22 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="696151">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22641]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="201" _type="ConsoleOutput" date="Tue May 03 19:21:22 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="696150" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22587
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"258"), Diff(DELETE,"0¶Number of traces > 800  turning tracing off"), Diff(INSERT,"7"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="204" _type="PauseCommand" date="Tue May 03 19:21:44 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="718685">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22535]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="203" _type="ConsoleOutput" date="Tue May 03 19:21:44 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="718685" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22580
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2258"), Diff(DELETE,"7"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="206" _type="PauseCommand" date="Tue May 03 19:22:07 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="741281">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22596]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="205" _type="ConsoleOutput" date="Tue May 03 19:22:07 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="741281" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22592
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"80"), Diff(INSERT,"92"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="208" _type="PauseCommand" date="Tue May 03 19:22:30 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="763922">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22641]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="207" _type="ConsoleOutput" date="Tue May 03 19:22:30 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="763922" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22587
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"92"), Diff(INSERT,"87"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="210" _type="PauseCommand" date="Tue May 03 19:23:19 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="813319">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[49397]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="209" _type="ConsoleOutput" date="Tue May 03 19:23:19 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="813319" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22823
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22"), Diff(DELETE,"587"), Diff(INSERT,"823"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="212" _type="PauseCommand" date="Tue May 03 19:23:34 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="828068">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14749]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="211" _type="ConsoleOutput" date="Tue May 03 19:23:34 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="828068" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14694
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"22823"), Diff(INSERT,"14694"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="216" _type="PauseCommand" date="Tue May 03 19:24:09 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="863796">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[20882]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="215" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:24:09 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="863796" type="Run" />
  <Command __id="217" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:24:09 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="863796" type="Run" />
  <Command __id="219" _type="PauseCommand" date="Tue May 03 19:24:15 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="869713">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[5917]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="218" _type="ShellCommand" date="Tue May 03 19:24:15 EDT 2022" starttimestamp="1651619386199" timestamp="869713" type="ECLIPSE_MAXIMIZED" />
  <Command __id="220" _type="ShellCommand" date="Tue May 03 19:24:15 EDT 2022" starttimestamp="1651619386199" timestamp="869787" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="222" _type="PauseCommand" date="Tue May 03 19:24:34 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="888289">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18501]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="223" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:24:34 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="888488" />
  <Command __id="225" _type="PauseCommand" date="Tue May 03 19:24:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="890408">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1920]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="224" _type="ShellCommand" date="Tue May 03 19:24:36 EDT 2022" starttimestamp="1651619386199" timestamp="890408" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="227" _type="PauseCommand" date="Tue May 03 19:24:40 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="894199">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3791]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="226" _type="ShellCommand" date="Tue May 03 19:24:40 EDT 2022" starttimestamp="1651619386199" timestamp="894199" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="228" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:24:40 EDT 2022" starttimestamp="1651619386199" timestamp="894223" />
  <Command __id="230" _type="PauseCommand" date="Tue May 03 19:24:42 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="896766">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2543]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="229" _type="ShellCommand" date="Tue May 03 19:24:42 EDT 2022" starttimestamp="1651619386199" timestamp="896766" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="232" _type="PauseCommand" date="Tue May 03 19:24:46 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="899852">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3086]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="231" _type="ShellCommand" date="Tue May 03 19:24:46 EDT 2022" starttimestamp="1651619386199" timestamp="899852" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="233" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:24:46 EDT 2022" starttimestamp="1651619386199" timestamp="899878" />
  <Command __id="235" _type="PauseCommand" date="Tue May 03 19:24:48 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="901928">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2050]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="236" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:24:48 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="902116" />
  <Command __id="237" _type="MoveCaretCommand" caretOffset="398" date="Tue May 03 19:24:49 EDT 2022" docOffset="433" starttimestamp="1651619386199" timestamp="902885" />
  <Command __id="241" _type="PauseCommand" date="Tue May 03 19:25:02 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="916543">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9324]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="240" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 19:25:02 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="916543" />
  <Command __id="242" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 19:25:02 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="916543" />
  <Command __id="243" _type="ShellCommand" date="Tue May 03 19:25:02 EDT 2022" starttimestamp="1651619386199" timestamp="916683" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="244" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:25:02 EDT 2022" starttimestamp="1651619386199" timestamp="916704" />
  <Command __id="245" _type="EclipseCommand" commandID="" date="Tue May 03 19:25:02 EDT 2022" starttimestamp="1651619386199" timestamp="916711" />
  <Command __id="246" _type="EclipseCommand" commandID="" date="Tue May 03 19:25:02 EDT 2022" starttimestamp="1651619386199" timestamp="916748" />
  <Command __id="248" _type="PauseCommand" date="Tue May 03 19:25:05 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="919248">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2500]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="247" _type="ShellCommand" date="Tue May 03 19:25:05 EDT 2022" starttimestamp="1651619386199" timestamp="919248" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="250" _type="PauseCommand" date="Tue May 03 19:25:13 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="927209">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7961]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[CutCommand]]></next>
  </Command>
  <Command __id="249" _type="CutCommand" date="Tue May 03 19:25:13 EDT 2022" starttimestamp="1651619386199" timestamp="927209" />
  <Command __id="252" _type="PauseCommand" date="Tue May 03 19:25:14 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="928726">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1517]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="251" _type="PasteCommand" date="Tue May 03 19:25:14 EDT 2022" starttimestamp="1651619386199" timestamp="928726" />
  <Command __id="254" _type="PauseCommand" date="Tue May 03 19:25:23 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="937775">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[9049]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="253" _type="ShellCommand" date="Tue May 03 19:25:23 EDT 2022" starttimestamp="1651619386199" timestamp="937775" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="255" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:25:23 EDT 2022" starttimestamp="1651619386199" timestamp="937799" />
  <Command __id="257" _type="PauseCommand" date="Tue May 03 19:25:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="938817">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1018]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="258" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:25:25 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="939185" />
  <Command __id="260" _type="PauseCommand" date="Tue May 03 19:25:26 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="940697">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1512]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="259" _type="MoveCaretCommand" caretOffset="269" date="Tue May 03 19:25:26 EDT 2022" docOffset="2329" starttimestamp="1651619386199" timestamp="940697" />
  <Command __id="261" _type="SelectTextCommand" caretOffset="281" date="Tue May 03 19:25:27 EDT 2022" end="281" start="269" starttimestamp="1651619386199" timestamp="940833" />
  <Command __id="262" _type="MoveCaretCommand" caretOffset="194" date="Tue May 03 19:25:27 EDT 2022" docOffset="2254" starttimestamp="1651619386199" timestamp="941357" />
  <Command __id="263" _type="SelectTextCommand" caretOffset="200" date="Tue May 03 19:25:27 EDT 2022" end="200" start="185" starttimestamp="1651619386199" timestamp="941497" />
  <Command __id="265" _type="PauseCommand" date="Tue May 03 19:25:32 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="946416">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4919]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="264" _type="MoveCaretCommand" caretOffset="97" date="Tue May 03 19:25:32 EDT 2022" docOffset="2157" starttimestamp="1651619386199" timestamp="946416" />
  <Command __id="266" _type="SelectTextCommand" caretOffset="104" date="Tue May 03 19:25:32 EDT 2022" end="104" start="87" starttimestamp="1651619386199" timestamp="946561" />
  <Command __id="268" _type="PauseCommand" date="Tue May 03 19:25:34 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="947807">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1246]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="267" _type="CopyCommand" date="Tue May 03 19:25:34 EDT 2022" starttimestamp="1651619386199" timestamp="947807" />
  <Command __id="270" _type="PauseCommand" date="Tue May 03 19:25:35 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="949672">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1865]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="269" _type="ShellCommand" date="Tue May 03 19:25:35 EDT 2022" starttimestamp="1651619386199" timestamp="949672" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="274" _type="PauseCommand" date="Tue May 03 19:25:49 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="963021">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[12301]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="273" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 19:25:49 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="963021" />
  <Command __id="275" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 19:25:49 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="963021" />
  <Command __id="276" _type="ShellCommand" date="Tue May 03 19:25:49 EDT 2022" starttimestamp="1651619386199" timestamp="963168" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="277" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:25:49 EDT 2022" starttimestamp="1651619386199" timestamp="963189" />
  <Command __id="278" _type="EclipseCommand" commandID="" date="Tue May 03 19:25:49 EDT 2022" starttimestamp="1651619386199" timestamp="963190" />
  <Command __id="279" _type="EclipseCommand" commandID="" date="Tue May 03 19:25:49 EDT 2022" starttimestamp="1651619386199" timestamp="963252" />
  <Command __id="281" _type="PauseCommand" date="Tue May 03 19:25:52 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="966149">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2897]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="280" _type="ShellCommand" date="Tue May 03 19:25:52 EDT 2022" starttimestamp="1651619386199" timestamp="966149" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="283" _type="PauseCommand" date="Tue May 03 19:26:01 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="975563">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9414]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="282" _type="ShellCommand" date="Tue May 03 19:26:01 EDT 2022" starttimestamp="1651619386199" timestamp="975563" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="284" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:26:01 EDT 2022" starttimestamp="1651619386199" timestamp="975586" />
  <Command __id="286" _type="PauseCommand" date="Tue May 03 19:26:05 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="979435">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3848]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="287" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:26:05 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="979609" />
  <Command __id="298" _type="PauseCommand" date="Tue May 03 19:26:29 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1003047">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5259]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="297" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:26:29 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1003047" type="Run" />
  <Command __id="299" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:26:29 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1003047" type="Run" />
  <Command __id="301" _type="PauseCommand" date="Tue May 03 19:26:32 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1005978">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2931]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="300" _type="ShellCommand" date="Tue May 03 19:26:32 EDT 2022" starttimestamp="1651619386199" timestamp="1005978" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="303" _type="PauseCommand" date="Tue May 03 19:26:34 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1008318">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2340]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="302" _type="ShellCommand" date="Tue May 03 19:26:34 EDT 2022" starttimestamp="1651619386199" timestamp="1008318" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="305" _type="PauseCommand" date="Tue May 03 19:26:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1010193">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1875]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="304" _type="ShellCommand" date="Tue May 03 19:26:36 EDT 2022" starttimestamp="1651619386199" timestamp="1010193" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="307" _type="PauseCommand" date="Tue May 03 19:26:38 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1012794">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2601]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="306" _type="ShellCommand" date="Tue May 03 19:26:38 EDT 2022" starttimestamp="1651619386199" timestamp="1012794" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="308" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:26:39 EDT 2022" starttimestamp="1651619386199" timestamp="1012817" />
  <Command __id="310" _type="PauseCommand" date="Tue May 03 19:26:40 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1013896">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1079]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="311" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:26:40 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1014157" />
  <Command __id="313" _type="PauseCommand" date="Tue May 03 19:26:51 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1025221">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[11064]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="312" _type="ShellCommand" date="Tue May 03 19:26:51 EDT 2022" starttimestamp="1651619386199" timestamp="1025221" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="317" _type="PauseCommand" date="Tue May 03 19:27:03 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1037270">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[7431]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="316" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 19:27:03 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="1037270" />
  <Command __id="318" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 19:27:03 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="1037270" />
  <Command __id="319" _type="ShellCommand" date="Tue May 03 19:27:03 EDT 2022" starttimestamp="1651619386199" timestamp="1037407" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="320" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:27:03 EDT 2022" starttimestamp="1651619386199" timestamp="1037437" />
  <Command __id="321" _type="EclipseCommand" commandID="" date="Tue May 03 19:27:03 EDT 2022" starttimestamp="1651619386199" timestamp="1037438" />
  <Command __id="322" _type="EclipseCommand" commandID="" date="Tue May 03 19:27:03 EDT 2022" starttimestamp="1651619386199" timestamp="1037503" />
  <Command __id="324" _type="PauseCommand" date="Tue May 03 19:27:06 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1040737">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3234]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="325" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:27:07 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1040909" />
  <Command __id="327" _type="PauseCommand" date="Tue May 03 19:27:09 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1043379">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2470]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="326" _type="ShellCommand" date="Tue May 03 19:27:09 EDT 2022" starttimestamp="1651619386199" timestamp="1043379" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="329" _type="PauseCommand" date="Tue May 03 19:27:10 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1044687">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1308]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="328" _type="ConsoleOutput" date="Tue May 03 19:27:10 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1044687" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14791
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"22266"), Diff(INSERT,"14791"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="330" _type="ShellCommand" date="Tue May 03 19:27:11 EDT 2022" starttimestamp="1651619386199" timestamp="1045024" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="331" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:27:11 EDT 2022" starttimestamp="1651619386199" timestamp="1045043" />
  <Command __id="335" _type="PauseCommand" date="Tue May 03 19:27:23 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1057666">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11091]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="334" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 19:27:23 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="1057666" />
  <Command __id="336" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 19:27:23 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="1057667" />
  <Command __id="337" _type="ShellCommand" date="Tue May 03 19:27:24 EDT 2022" starttimestamp="1651619386199" timestamp="1057910" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="338" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:27:24 EDT 2022" starttimestamp="1651619386199" timestamp="1057936" />
  <Command __id="339" _type="EclipseCommand" commandID="" date="Tue May 03 19:27:24 EDT 2022" starttimestamp="1651619386199" timestamp="1057936" />
  <Command __id="340" _type="EclipseCommand" commandID="" date="Tue May 03 19:27:24 EDT 2022" starttimestamp="1651619386199" timestamp="1058137" />
  <Command __id="342" _type="PauseCommand" date="Tue May 03 19:27:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1059500">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1362]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="341" _type="ConsoleOutput" date="Tue May 03 19:27:25 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1059499" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14810
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):14"), Diff(DELETE,"791"), Diff(INSERT,"810"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="344" _type="PauseCommand" date="Tue May 03 19:27:26 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1060695">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1196]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="343" _type="ShellCommand" date="Tue May 03 19:27:26 EDT 2022" starttimestamp="1651619386199" timestamp="1060695" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="346" _type="PauseCommand" date="Tue May 03 19:27:29 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1063162">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2467]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="345" _type="ShellCommand" date="Tue May 03 19:27:29 EDT 2022" starttimestamp="1651619386199" timestamp="1063162" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="347" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:27:29 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1063637" type="Run" />
  <Command __id="348" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:27:29 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1063637" type="Run" />
  <Command __id="350" _type="PauseCommand" date="Tue May 03 19:27:33 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1067269">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[3632]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="351" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:27:33 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1067447" />
  <Command __id="353" _type="PauseCommand" date="Tue May 03 19:27:35 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1069227">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1780]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="352" _type="ShellCommand" date="Tue May 03 19:27:35 EDT 2022" starttimestamp="1651619386199" timestamp="1069227" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="355" _type="PauseCommand" date="Tue May 03 19:27:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1070571">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1344]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="354" _type="ShellCommand" date="Tue May 03 19:27:36 EDT 2022" starttimestamp="1651619386199" timestamp="1070571" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="356" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:27:36 EDT 2022" starttimestamp="1651619386199" timestamp="1070595" />
  <Command __id="360" _type="PauseCommand" date="Tue May 03 19:27:50 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1084648">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12665]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="359" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 19:27:50 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="1084648" />
  <Command __id="361" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 19:27:50 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="1084649" />
  <Command __id="362" _type="ShellCommand" date="Tue May 03 19:27:51 EDT 2022" starttimestamp="1651619386199" timestamp="1084806" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="363" _type="EclipseCommand" commandID="" date="Tue May 03 19:27:51 EDT 2022" starttimestamp="1651619386199" timestamp="1084833" />
  <Command __id="364" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:27:51 EDT 2022" starttimestamp="1651619386199" timestamp="1084833" />
  <Command __id="365" _type="EclipseCommand" commandID="" date="Tue May 03 19:27:51 EDT 2022" starttimestamp="1651619386199" timestamp="1084909" />
  <Command __id="367" _type="PauseCommand" date="Tue May 03 19:27:53 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1086866">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1957]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="366" _type="ShellCommand" date="Tue May 03 19:27:53 EDT 2022" starttimestamp="1651619386199" timestamp="1086866" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="369" _type="PauseCommand" date="Tue May 03 19:27:56 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1089934">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3068]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="368" _type="ShellCommand" date="Tue May 03 19:27:56 EDT 2022" starttimestamp="1651619386199" timestamp="1089934" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="370" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:27:56 EDT 2022" starttimestamp="1651619386199" timestamp="1089960" />
  <Command __id="372" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:27:57 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1091079" />
  <Command __id="383" _type="PauseCommand" date="Tue May 03 19:28:13 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1107425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2387]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="382" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:28:13 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1107425" type="Run" />
  <Command __id="384" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:28:13 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1107426" type="Run" />
  <Command __id="386" _type="PauseCommand" date="Tue May 03 19:28:16 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1110349">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2923]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="385" _type="ShellCommand" date="Tue May 03 19:28:16 EDT 2022" starttimestamp="1651619386199" timestamp="1110349" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="388" _type="PauseCommand" date="Tue May 03 19:28:18 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1112059">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1710]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="387" _type="ShellCommand" date="Tue May 03 19:28:18 EDT 2022" starttimestamp="1651619386199" timestamp="1112059" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="390" _type="PauseCommand" date="Tue May 03 19:28:20 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1114035">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1976]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="391" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:28:20 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1114186" />
  <Command __id="393" _type="PauseCommand" date="Tue May 03 19:28:22 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1116307">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2121]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="394" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:28:22 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1116498" />
  <Command __id="396" _type="PauseCommand" date="Tue May 03 19:28:27 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1121351">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4853]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="395" _type="MoveCaretCommand" caretOffset="1265" date="Tue May 03 19:28:27 EDT 2022" docOffset="1695" starttimestamp="1651619386199" timestamp="1121351" />
  <Command __id="42" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:09:47 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1077">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment6.S22Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

//import util.trace.Tracer;
public class RunTests {
	public static final int MAX_PRINTED_TRACES = 800;
	public static final int MAX_TRACES = 2000;
	public static final int TIME_OUT = 5;

	
	public static void main(final String[] args) {
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(TIME_OUT);
		// You need to always call such a method
		S22Assignment6Suite.main(args);

	}
}

]]></snapshot>
  </Command>
  <Command __id="55" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:10:23 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Ass6" starttimestamp="1651619386199" timestamp="37141">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Ass6\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package checks;

import grader.basics.execution.BasicProjectExecution;
import gradingTools.comp533s22.assignment6.S22Assignment6Suite;
import trace.grader.basics.GraderBasicsTraceUtility;

//import util.trace.Tracer;
public class RunTests {
	public static final int MAX_PRINTED_TRACES = 800;
	public static final int MAX_TRACES = 2000;
	public static final int TIME_OUT = 5;

	
	public static void main(final String[] args) {
		// if you set this to false, grader steps will not be traced
		GraderBasicsTraceUtility.setTracerShowInfo(true);	
		// if you set this to false, all grader steps will be traced,
		// not just the ones that failed		
		GraderBasicsTraceUtility.setBufferTracedMessages(true);
		// Change this number if a test trace gets longer than 600 and is clipped
		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);
		// Change this number if all traces together are longer than 2000
		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);
		// Change this number if your process times out prematurely
		BasicProjectExecution.setProcessTimeOut(TIME_OUT);
		// You need to always call such a method
		S22Assignment6Suite.main(args);

	}
}

]]></snapshot>
  </Command>
  <Command __id="141" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:16:26 EDT 2022" docASTNodeCount="53" docActiveCodeLength="356" docExpressionCount="37" docLength="356" projectName="533Assignment5" starttimestamp="1651619386199" timestamp="400241">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\GIPCClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.client;

import java.rmi.RemoteException;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface GIPCClient {
    String CLIENT_NAME="Client ";
    void ReceiveNotification(String name, Object proposal) throws RemoteException;
}
]]></snapshot>
  </Command>
  <Command __id="144" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:16:27 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Ass6" starttimestamp="1651619386199" timestamp="400843">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Ass6\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="146" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:16:52 EDT 2022" docASTNodeCount="101" docActiveCodeLength="689" docExpressionCount="68" docLength="879" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="426032">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\Server.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;

import java.rmi.RemoteException;

import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteObjectNIO;
import server.remote.ServerRemoteObjectRMI;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Server {
	
	
	public static void main(final String[] args) {
		
		//GIPC Server is a subclass of RMI server, so we can just call super.method() on gipc
		//final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectNIO();
		
		try {
			server.start(args);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="149" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:16:53 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Ass6" starttimestamp="1651619386199" timestamp="427189">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Ass6\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="152" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:17:05 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Ass6" starttimestamp="1651619386199" timestamp="439113">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Ass6\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="156" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:17:13 EDT 2022" docASTNodeCount="71" docActiveCodeLength="451" docExpressionCount="43" docLength="541" projectName="533Ass6" starttimestamp="1651619386199" timestamp="447716">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Ass6\src\client\Client.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Client {
	public static void main(final String[] args) {
		try {

			// create client object
			//final ClientRemoteInterfaceRMI client = new ClientRemoteObject();
			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();
			
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="159" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:17:22 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9561" docExpressionCount="920" docLength="10766" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="456277">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientRemoteInterfaceGIPC;
import client.ClientRemoteInterfaceRMI;
import client.ClientRemoteObject;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerRemoteInterfaceGIPC {

	List<ClientRemoteInterfaceGIPC> clientListGIPC = new ArrayList<ClientRemoteInterfaceGIPC>();
	List<ClientRemoteInterfaceGIPC> clientListRMI = new ArrayList<ClientRemoteInterfaceGIPC>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	public static String SERVER_NAME;
	private static int NIO_SERVER_PORT;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		

		// Make sure you set this property when processing args
		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));
		

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);
		// ClientArgsProcessor.getServerHost(args);
		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);
		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);
		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);
		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);
		

	}

	@Override
	public void registerClientGIPC(ClientRemoteInterfaceGIPC aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientRemoteInterfaceGIPC aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber){
		List<ClientRemoteInterfaceGIPC> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientRemoteInterfaceGIPC client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientRemoteInterfaceGIPC originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientRemoteInterfaceGIPC> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			System.out.println("Broadcasting IPC mechanism: "+mechanism);
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			for (ClientRemoteInterfaceGIPC client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.changeIPCMechanism(mechanism, aProposalNumber);
					System.out.println("SEND NEW MECHANISM TO A CLIENT FROM SERVER");
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerRemoteInterfaceRMI) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientRemoteInterfaceRMI client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientRemoteInterfaceGIPC client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerRemoteInterfaceRMI server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
		System.out.println("ADDED CONNECTION LISTENER");
	}

	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			int aProposalNumber = -1;
			ClientRemoteInterfaceGIPC fake = new ClientRemoteObject();
			broadcastIPCMechanism(mechanism, fake, aProposalNumber , this.broadcastMetaState);
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="165" _type="Replace" date="Tue May 03 19:17:38 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9557" docExpressionCount="920" docLength="10762" endLine="205" insertionLength="14" int_docASTNodeCount="1308" int_docActiveCodeLength="9543" int_docExpressionCount="918" int_docLength="10748" length="18" offset="6778" startLine="205" starttimestamp="1651619386199" timestamp="472338">
    <deletedText><![CDATA[changeIPCMechanism]]></deletedText>
    <insertedText><![CDATA[makeChangeIpcm]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="168" _type="Replace" date="Tue May 03 19:17:41 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9561" docExpressionCount="920" docLength="10766" endLine="205" insertionLength="18" int_docASTNodeCount="1308" int_docActiveCodeLength="9543" int_docExpressionCount="918" int_docLength="10748" length="14" offset="6778" startLine="205" starttimestamp="1651619386199" timestamp="475021">
    <deletedText><![CDATA[makeChangeIpcm]]></deletedText>
    <insertedText><![CDATA[changeIPCMechanism]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="171" _type="Replace" date="Tue May 03 19:17:44 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9557" docExpressionCount="920" docLength="10762" endLine="205" insertionLength="14" int_docASTNodeCount="1308" int_docActiveCodeLength="9543" int_docExpressionCount="918" int_docLength="10748" length="18" offset="6778" startLine="205" starttimestamp="1651619386199" timestamp="478341">
    <deletedText><![CDATA[changeIPCMechanism]]></deletedText>
    <insertedText><![CDATA[makeChangeIpcm]]></insertedText>
  </DocumentChange>
  <Command __id="179" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:17:51 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="484973">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="221" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:24:34 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1186" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="888288">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientRemoteInterfaceGIPC  extends Remote{
//
//	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;
//
//	void start(String[] args) throws RemoteException;
//	
	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;
	

	void argumentProcessor(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;



	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;
}
]]></snapshot>
  </Command>
  <Command __id="234" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:24:48 EDT 2022" docASTNodeCount="71" docActiveCodeLength="473" docExpressionCount="43" docLength="1073" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="901928">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\Client.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class Client {

//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	public static void main(final String[] args) {
		try {
			final ClientRemoteInterfaceRMI client = new ClientRemoteObjectNIO();
			// started!!!
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="256" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:25:25 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12593" docExpressionCount="1106" docLength="15230" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="938817">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigure.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigure  extends ClientRemoteObject implements ClientRemoteInterfaceNIO {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

//	public void RMIAndGIPCClient() {
//  new int i = 1+1;
//}
	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientRemoteInterfaceGIPC) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientRemoteInterfaceGIPC) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientRemoteInterfaceGIPC) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <Command __id="285" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:26:05 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1045" docExpressionCount="87" docLength="1186" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="979434">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientRemoteInterfaceGIPC  extends Remote{¶//¶//	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶//¶//	void start(String[] args) throws RemoteException;¶//	¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶	¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
  </Command>
  <Command __id="309" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:26:40 EDT 2022" docASTNodeCount="101" docActiveCodeLength="809" docExpressionCount="69" docLength="809" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1013896">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientRemoteInterfaceNIO extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{


	HalloweenCommandProcessor getCommandProcessor();
	void simulateCommand(String aCommand);
	void nioInit(String[] args);

	void setFactories();
	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	
	
}
]]></snapshot>
  </Command>
  <Command __id="323" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:27:06 EDT 2022" docASTNodeCount="120" docActiveCodeLength="918" docExpressionCount="81" docLength="952" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1040737">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientRemoteInterfaceRMI  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="349" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:27:33 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9062" docExpressionCount="812" docLength="9806" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1067269">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRemoteObject extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
	
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		

	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override

	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}











}
]]></snapshot>
  </Command>
  <Command __id="371" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:27:57 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5582" docExpressionCount="567" docLength="6871" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1090903">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRemoteObjectNIO extends ClientRmiGipc implements ClientInterfaceNio{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
		
		//String aNextLine = "a new client has been initialized";
		// wrap writes to the buffer and then flips it
		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
		//nioManager.write(socketChannel, aWriteMessage, this);
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

//	@Override
//	public void argumentProcessor(String aCommand) {
//		// TODO Auto-generated method stub
//		
//	}

	@Override
	public void nioInit(String[] args) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void simulateCommand(String aCommand) {
		// TODO Auto-generated method stub
		
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="389" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:28:20 EDT 2022" docASTNodeCount="120" docActiveCodeLength="912" docExpressionCount="81" docLength="946" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1114035">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceRmi.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ClientInterfaceRmi  extends Remote{

	//void processArgs(String[] args);
	
	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;

	void processArgs(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;

	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

}
]]></snapshot>
  </Command>
  <Command __id="392" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:28:22 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1799" docExpressionCount="152" docLength="1799" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1116307">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientOutCoupler implements PropertyChangeListener{
	String oldName;
	
	ServerRemoteInterfaceGIPC watcherServer;
	ClientInterfaceGipc thatClient;

	
	int aProposalNumber = 0;
	boolean nio = false;
	@Override
	public void propertyChange(final PropertyChangeEvent anEvent) {
	
		if (!anEvent.getPropertyName().equals("InputString")) {
			return;
		}
		
		final String thisCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, thisCommand);
		if (nio) {
			return;
		}
		
		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();
		placeHolder.getIPCMechanism();
		
		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);
		try {
			
			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}
	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean nio) {
		watcherServer = anwatcherServer;
		thatClient = aClient;
		oldName = aClientName;
		
		
	}
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="401" _type="Insert" date="Tue May 03 19:28:31 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1803" docExpressionCount="152" docLength="1803" length="4" offset="1681" repeat="4" starttimestamp="1651619386199" timestamp="1125664" timestamp2="1125928">
    <text><![CDATA[this]]></text>
  </DocumentChange>
  <Command __id="398" _type="PauseCommand" date="Tue May 03 19:28:30 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1124203">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2852]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="397" _type="MoveCaretCommand" caretOffset="1293" date="Tue May 03 19:28:30 EDT 2022" docOffset="1723" starttimestamp="1651619386199" timestamp="1124203" />
  <Command __id="399" _type="MoveCaretCommand" caretOffset="1252" date="Tue May 03 19:28:30 EDT 2022" docOffset="1682" starttimestamp="1651619386199" timestamp="1124557" />
  <Command __id="400" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Tue May 03 19:28:31 EDT 2022" starttimestamp="1651619386199" timestamp="1125329" />
  <Command __id="402" _type="InsertStringCommand" date="Tue May 03 19:28:31 EDT 2022" starttimestamp="1651619386199" timestamp="1125671" timestamp2="1125671">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="404" _type="InsertStringCommand" date="Tue May 03 19:28:31 EDT 2022" starttimestamp="1651619386199" timestamp="1125733" timestamp2="1125733">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="406" _type="InsertStringCommand" date="Tue May 03 19:28:32 EDT 2022" starttimestamp="1651619386199" timestamp="1125815" timestamp2="1125815">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="408" _type="InsertStringCommand" date="Tue May 03 19:28:32 EDT 2022" starttimestamp="1651619386199" timestamp="1125934" timestamp2="1125934">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="409" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue May 03 19:28:32 EDT 2022" starttimestamp="1651619386199" timestamp="1126426" />
  <Command __id="411" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:28:32 EDT 2022" starttimestamp="1651619386199" timestamp="1126711" />
  <Command __id="413" _type="InsertStringCommand" date="Tue May 03 19:28:33 EDT 2022" starttimestamp="1651619386199" timestamp="1127324" timestamp2="1127324">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="415" _type="PauseCommand" date="Tue May 03 19:28:34 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1128631">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1307]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="414" _type="MoveCaretCommand" caretOffset="1253" date="Tue May 03 19:28:34 EDT 2022" docOffset="1683" starttimestamp="1651619386199" timestamp="1128631" />
  <Command __id="416" _type="SelectTextCommand" caretOffset="1258" date="Tue May 03 19:28:34 EDT 2022" end="1258" start="1251" starttimestamp="1651619386199" timestamp="1128753" />
  <Command __id="417" _type="CopyCommand" date="Tue May 03 19:28:35 EDT 2022" starttimestamp="1651619386199" timestamp="1129365" />
  <Command __id="419" _type="PauseCommand" date="Tue May 03 19:28:42 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1136238">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[6873]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="418" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:28:42 EDT 2022" starttimestamp="1651619386199" timestamp="1136238" />
  <Command __id="420" _type="EclipseCommand" commandID="" date="Tue May 03 19:28:42 EDT 2022" starttimestamp="1651619386199" timestamp="1136327" />
  <Command __id="421" _type="EclipseCommand" commandID="" date="Tue May 03 19:28:42 EDT 2022" starttimestamp="1651619386199" timestamp="1136343" />
  <Command __id="423" _type="PauseCommand" date="Tue May 03 19:28:52 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1146446">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10103]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="424" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:28:52 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1146614" />
  <Command __id="426" _type="PauseCommand" date="Tue May 03 19:28:56 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1150432">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3818]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="425" _type="SelectTextCommand" caretOffset="173" date="Tue May 03 19:28:56 EDT 2022" end="322" start="173" starttimestamp="1651619386199" timestamp="1150432" />
  <Command __id="428" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:28:57 EDT 2022" starttimestamp="1651619386199" timestamp="1151014" />
  <Command __id="429" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:28:58 EDT 2022" starttimestamp="1651619386199" timestamp="1151850" />
  <Command __id="430" _type="EclipseCommand" commandID="" date="Tue May 03 19:28:58 EDT 2022" starttimestamp="1651619386199" timestamp="1152154" />
  <Command __id="431" _type="EclipseCommand" commandID="" date="Tue May 03 19:28:58 EDT 2022" starttimestamp="1651619386199" timestamp="1152173" />
  <Command __id="433" _type="PauseCommand" date="Tue May 03 19:29:00 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1154060">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1887]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="434" _type="SelectTextCommand" caretOffset="104" date="Tue May 03 19:29:00 EDT 2022" end="104" start="87" starttimestamp="1651619386199" timestamp="1154332" />
  <Command __id="436" _type="PauseCommand" date="Tue May 03 19:29:03 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1157101">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2769]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="435" _type="SelectTextCommand" caretOffset="1427" date="Tue May 03 19:29:03 EDT 2022" end="1489" start="1427" starttimestamp="1651619386199" timestamp="1157101" />
  <Command __id="438" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:03 EDT 2022" starttimestamp="1651619386199" timestamp="1157724" />
  <Command __id="440" _type="PauseCommand" date="Tue May 03 19:29:10 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1163957">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6233]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="439" _type="SelectTextCommand" caretOffset="2602" date="Tue May 03 19:29:10 EDT 2022" end="2602" start="2200" starttimestamp="1651619386199" timestamp="1163957" />
  <Command __id="441" _type="CopyCommand" date="Tue May 03 19:29:10 EDT 2022" starttimestamp="1651619386199" timestamp="1164572" />
  <Command __id="443" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:29:11 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1165607" />
  <Command __id="445" _type="PauseCommand" date="Tue May 03 19:29:12 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1166744">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1137]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="446" _type="SelectTextCommand" caretOffset="1258" date="Tue May 03 19:29:13 EDT 2022" end="1258" start="1251" starttimestamp="1651619386199" timestamp="1167092" />
  <Command __id="447" _type="MoveCaretCommand" caretOffset="1356" date="Tue May 03 19:29:13 EDT 2022" docOffset="1786" starttimestamp="1651619386199" timestamp="1167617" />
  <Command __id="449" _type="PasteCommand" date="Tue May 03 19:29:14 EDT 2022" starttimestamp="1651619386199" timestamp="1168535" />
  <Command __id="450" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:29:15 EDT 2022" starttimestamp="1651619386199" timestamp="1169240" />
  <Command __id="451" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:15 EDT 2022" starttimestamp="1651619386199" timestamp="1169376" />
  <Command __id="452" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:15 EDT 2022" starttimestamp="1651619386199" timestamp="1169403" />
  <Command __id="454" _type="PauseCommand" date="Tue May 03 19:29:17 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1171791">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2388]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="453" _type="MoveCaretCommand" caretOffset="1457" date="Tue May 03 19:29:17 EDT 2022" docOffset="1887" starttimestamp="1651619386199" timestamp="1171791" />
  <Command __id="456" _type="PauseCommand" date="Tue May 03 19:29:19 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1173269">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1478]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="455" _type="SelectTextCommand" caretOffset="1354" date="Tue May 03 19:29:19 EDT 2022" end="1426" start="1354" starttimestamp="1651619386199" timestamp="1173269" />
  <Command __id="458" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:19 EDT 2022" starttimestamp="1651619386199" timestamp="1173791" />
  <Command __id="460" _type="PauseCommand" date="Tue May 03 19:29:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1174967">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1176]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="459" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:29:21 EDT 2022" starttimestamp="1651619386199" timestamp="1174967" />
  <Command __id="461" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:21 EDT 2022" starttimestamp="1651619386199" timestamp="1175057" />
  <Command __id="462" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:21 EDT 2022" starttimestamp="1651619386199" timestamp="1175074" />
  <Command __id="464" _type="PauseCommand" date="Tue May 03 19:29:23 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1177379">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2305]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="465" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:29:23 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1177613" />
  <Command __id="467" _type="PauseCommand" date="Tue May 03 19:29:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1179584">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1971]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="466" _type="SelectTextCommand" caretOffset="795" date="Tue May 03 19:29:25 EDT 2022" end="800" start="795" starttimestamp="1651619386199" timestamp="1179584" />
  <Command __id="469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:26 EDT 2022" starttimestamp="1651619386199" timestamp="1180078" />
  <Command __id="471" _type="PauseCommand" date="Tue May 03 19:29:27 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1181599">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1521]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="470" _type="SelectTextCommand" caretOffset="976" date="Tue May 03 19:29:27 EDT 2022" end="1009" start="976" starttimestamp="1651619386199" timestamp="1181599" />
  <Command __id="473" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:27 EDT 2022" starttimestamp="1651619386199" timestamp="1181667" />
  <Command __id="475" _type="PauseCommand" date="Tue May 03 19:29:31 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1184887">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3220]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="474" _type="SelectTextCommand" caretOffset="1403" date="Tue May 03 19:29:31 EDT 2022" end="1403" start="1057" starttimestamp="1651619386199" timestamp="1184887" />
  <Command __id="477" _type="CutCommand" date="Tue May 03 19:29:31 EDT 2022" starttimestamp="1651619386199" timestamp="1185610" />
  <Command __id="479" _type="PauseCommand" date="Tue May 03 19:29:36 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1190228">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[4618]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="478" _type="MoveCaretCommand" caretOffset="4814" date="Tue May 03 19:29:36 EDT 2022" docOffset="6489" starttimestamp="1651619386199" timestamp="1190228" />
  <Command __id="481" _type="PauseCommand" date="Tue May 03 19:29:37 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1191347">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1119]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="482" _type="InsertStringCommand" date="Tue May 03 19:29:37 EDT 2022" starttimestamp="1651619386199" timestamp="1191354" timestamp2="1191354">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="484" _type="InsertStringCommand" date="Tue May 03 19:29:37 EDT 2022" starttimestamp="1651619386199" timestamp="1191449" timestamp2="1191449">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="486" _type="PasteCommand" date="Tue May 03 19:29:37 EDT 2022" starttimestamp="1651619386199" timestamp="1191718" />
  <Command __id="487" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:29:38 EDT 2022" starttimestamp="1651619386199" timestamp="1192357" />
  <Command __id="488" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:38 EDT 2022" starttimestamp="1651619386199" timestamp="1192495" />
  <Command __id="489" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:38 EDT 2022" starttimestamp="1651619386199" timestamp="1192521" />
  <Command __id="491" _type="PauseCommand" date="Tue May 03 19:29:40 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1194589">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2068]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="492" _type="SelectTextCommand" caretOffset="2602" date="Tue May 03 19:29:40 EDT 2022" end="2602" start="2200" starttimestamp="1651619386199" timestamp="1194675" />
  <Command __id="493" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:29:41 EDT 2022" starttimestamp="1651619386199" timestamp="1194989" />
  <Command __id="494" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:41 EDT 2022" starttimestamp="1651619386199" timestamp="1195127" />
  <Command __id="495" _type="EclipseCommand" commandID="" date="Tue May 03 19:29:41 EDT 2022" starttimestamp="1651619386199" timestamp="1195154" />
  <Command __id="497" _type="MoveCaretCommand" caretOffset="5166" date="Tue May 03 19:29:41 EDT 2022" docOffset="6841" starttimestamp="1651619386199" timestamp="1195752" />
  <Command __id="499" _type="PauseCommand" date="Tue May 03 19:29:44 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1198245">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2493]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="498" _type="MoveCaretCommand" caretOffset="6068" date="Tue May 03 19:29:44 EDT 2022" docOffset="7743" starttimestamp="1651619386199" timestamp="1198245" />
  <Command __id="500" _type="SelectTextCommand" caretOffset="6076" date="Tue May 03 19:29:44 EDT 2022" end="6076" start="6067" starttimestamp="1651619386199" timestamp="1198377" />
  <Command __id="501" _type="SelectTextCommand" caretOffset="6085" date="Tue May 03 19:29:44 EDT 2022" end="6085" start="6059" starttimestamp="1651619386199" timestamp="1198480" />
  <Command __id="503" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:45 EDT 2022" starttimestamp="1651619386199" timestamp="1199179" />
  <Command __id="505" _type="PauseCommand" date="Tue May 03 19:29:46 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1200294">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1115]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="504" _type="MoveCaretCommand" caretOffset="6287" date="Tue May 03 19:29:46 EDT 2022" docOffset="7962" starttimestamp="1651619386199" timestamp="1200294" />
  <Command __id="506" _type="SelectTextCommand" caretOffset="6293" date="Tue May 03 19:29:46 EDT 2022" end="6293" start="6284" starttimestamp="1651619386199" timestamp="1200436" />
  <Command __id="507" _type="SelectTextCommand" caretOffset="6307" date="Tue May 03 19:29:46 EDT 2022" end="6307" start="6268" starttimestamp="1651619386199" timestamp="1200566" />
  <Command __id="509" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:47 EDT 2022" starttimestamp="1651619386199" timestamp="1200902" />
  <Command __id="510" _type="MoveCaretCommand" caretOffset="6468" date="Tue May 03 19:29:47 EDT 2022" docOffset="8143" starttimestamp="1651619386199" timestamp="1201648" />
  <Command __id="511" _type="SelectTextCommand" caretOffset="6478" date="Tue May 03 19:29:47 EDT 2022" end="6478" start="6464" starttimestamp="1651619386199" timestamp="1201781" />
  <Command __id="512" _type="SelectTextCommand" caretOffset="6489" date="Tue May 03 19:29:48 EDT 2022" end="6489" start="6443" starttimestamp="1651619386199" timestamp="1201918" />
  <Command __id="514" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:48 EDT 2022" starttimestamp="1651619386199" timestamp="1202115" />
  <Command __id="516" _type="PauseCommand" date="Tue May 03 19:29:49 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1203506">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1391]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="515" _type="SelectTextCommand" caretOffset="6389" date="Tue May 03 19:29:49 EDT 2022" end="6389" start="6343" starttimestamp="1651619386199" timestamp="1203506" />
  <Command __id="518" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:49 EDT 2022" starttimestamp="1651619386199" timestamp="1203565" />
  <Command __id="520" _type="PauseCommand" date="Tue May 03 19:29:53 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1207171">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3606]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="519" _type="SelectTextCommand" caretOffset="7740" date="Tue May 03 19:29:53 EDT 2022" end="7740" start="7706" starttimestamp="1651619386199" timestamp="1207171" />
  <Command __id="522" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:53 EDT 2022" starttimestamp="1651619386199" timestamp="1207245" />
  <Command __id="524" _type="PauseCommand" date="Tue May 03 19:29:54 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1208492">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1247]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="523" _type="SelectTextCommand" caretOffset="7868" date="Tue May 03 19:29:54 EDT 2022" end="7868" start="7834" starttimestamp="1651619386199" timestamp="1208492" />
  <Command __id="526" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:29:54 EDT 2022" starttimestamp="1651619386199" timestamp="1208528" />
  <Command __id="528" _type="PauseCommand" date="Tue May 03 19:29:58 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1211841">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3313]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="527" _type="SelectTextCommand" caretOffset="7269" date="Tue May 03 19:29:58 EDT 2022" end="7269" start="6741" starttimestamp="1651619386199" timestamp="1211841" />
  <DocumentChange __id="410" _type="Delete" date="Tue May 03 19:28:32 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1802" docExpressionCount="152" docLength="1802" endLine="51" length="1" offset="1685" startLine="51" starttimestamp="1651619386199" timestamp="1126705">
    <text><![CDATA[n]]></text>
  </DocumentChange>
  <DocumentChange __id="412" _type="Insert" date="Tue May 03 19:28:33 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1803" docExpressionCount="152" docLength="1803" length="1" offset="1685" starttimestamp="1651619386199" timestamp="1127317">
    <text><![CDATA[N]]></text>
  </DocumentChange>
  <Command __id="422" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:28:52 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1039" docExpressionCount="87" docLength="1180" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1146446">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceGipc.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientInterfaceGipc  extends Remote{
//
//	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;
//
//	void start(String[] args) throws RemoteException;
//	
	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;
	

	void argumentProcessor(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;



	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;
}
]]></snapshot>
  </Command>
  <DocumentChange __id="427" _type="Delete" date="Tue May 03 19:28:57 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1031" docExpressionCount="87" docLength="1031" endLine="19" length="149" offset="522" startLine="15" starttimestamp="1651619386199" timestamp="1151006">
    <text><![CDATA[//
//	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;
//
//	void start(String[] args) throws RemoteException;
//	]]></text>
  </DocumentChange>
  <Command __id="432" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:29:00 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12547" docExpressionCount="1106" docLength="15184" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1154060">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigurer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

//	public void RMIAndGIPCClient() {
//  new int i = 1+1;
//}
	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="437" _type="Delete" date="Tue May 03 19:29:03 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12543" docExpressionCount="1106" docLength="15122" endLine="90" length="62" offset="3487" startLine="88" starttimestamp="1651619386199" timestamp="1157715">
    <text><![CDATA[//	public void RMIAndGIPCClient() {
//  new int i = 1+1;
//}]]></text>
  </DocumentChange>
  <Command __id="442" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:29:11 EDT 2022" docASTNodeCount="120" docActiveCodeLength="912" docExpressionCount="81" docLength="946" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1165438">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceRmi.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientInterfaceRmi  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="444" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:29:12 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1803" docExpressionCount="152" docLength="1803" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1166744">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientInterfaceGipc thatClient;¶¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean "), Diff(DELETE,"n"), Diff(INSERT,"thisN"), Diff(EQUAL,"io) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶		¶	}¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientOutCoupler implements PropertyChangeListener{
	String oldName;
	
	ServerRemoteInterfaceGIPC watcherServer;
	ClientInterfaceGipc thatClient;

	
	int aProposalNumber = 0;
	boolean nio = false;
	@Override
	public void propertyChange(final PropertyChangeEvent anEvent) {
	
		if (!anEvent.getPropertyName().equals("InputString")) {
			return;
		}
		
		final String thisCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, thisCommand);
		if (nio) {
			return;
		}
		
		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();
		placeHolder.getIPCMechanism();
		
		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);
		try {
			
			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}
	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean thisNio) {
		watcherServer = anwatcherServer;
		thatClient = aClient;
		oldName = aClientName;
		
		
	}
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="448" _type="Replace" date="Tue May 03 19:29:14 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1822" docExpressionCount="152" docLength="2214" endLine="56" insertionLength="413" int_docASTNodeCount="234" int_docActiveCodeLength="1801" int_docExpressionCount="152" int_docLength="1801" length="2" offset="1784" startLine="56" starttimestamp="1651619386199" timestamp="1168522">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[//	    @Override
//	    protected void init(final String[] arguments) {
//	        this.setTracing();
//	        super.init(arguments);
//	        
//	        String hostName = ClientArgsProcessor.getServerHost(arguments);
//	        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//	        
//	        this.locateGIPCRegistry(port, hostName);
//	        this.lookupGIPCServerProxy();
	//]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="457" _type="Delete" date="Tue May 03 19:29:19 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1820" docExpressionCount="152" docLength="2142" endLine="57" length="72" offset="1784" startLine="56" starttimestamp="1651619386199" timestamp="1173781">
    <text><![CDATA[//	    @Override
//	    protected void init(final String[] arguments) {]]></text>
  </DocumentChange>
  <Command __id="463" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:29:23 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9057" docExpressionCount="812" docLength="9801" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1177379">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipc.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRmiGipc extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;
	//protected int aProposalNumber;
	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}

	@Override
	public void argumentProcessor(String[] args) {
	
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		

	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override

	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}











}
]]></snapshot>
  </Command>
  <DocumentChange __id="468" _type="Delete" date="Tue May 03 19:29:26 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9056" docExpressionCount="812" docLength="9796" endLine="60" length="5" offset="2470" startLine="60" starttimestamp="1651619386199" timestamp="1180063">
    <text><![CDATA[	//A5]]></text>
  </DocumentChange>
  <DocumentChange __id="472" _type="Delete" date="Tue May 03 19:29:27 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9055" docExpressionCount="812" docLength="9763" endLine="65" length="33" offset="2651" startLine="65" starttimestamp="1651619386199" timestamp="1181661">
    <text><![CDATA[	//protected int aProposalNumber;]]></text>
  </DocumentChange>
  <DocumentChange __id="476" _type="Delete" date="Tue May 03 19:29:31 EDT 2022" docASTNodeCount="1127" docActiveCodeLength="8709" docExpressionCount="784" docLength="9417" endLine="75" length="346" offset="2732" startLine="70" starttimestamp="1651619386199" timestamp="1185588">
    <text><![CDATA[@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="480" _type="Insert" date="Tue May 03 19:29:37 EDT 2022" docASTNodeCount="1127" docActiveCodeLength="8715" docExpressionCount="784" docLength="9423" length="6" offset="6489" repeat="2" starttimestamp="1651619386199" timestamp="1191347" timestamp2="1191442">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="485" _type="Replace" date="Tue May 03 19:29:37 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9061" docExpressionCount="812" docLength="9769" endLine="190" insertionLength="347" int_docASTNodeCount="1127" int_docActiveCodeLength="8714" int_docExpressionCount="784" int_docLength="9422" length="1" offset="6494" startLine="190" starttimestamp="1651619386199" timestamp="1191709">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}]]></insertedText>
  </DocumentChange>
  <Command __id="490" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:29:40 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12543" docExpressionCount="1106" docLength="15122" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1194589">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigurer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶"), Diff(DELETE,"//	public void RMIAndGIPCClient() {¶//  new int i = 1+1;¶//}"), Diff(EQUAL,"¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}


	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <Command __id="496" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:29:41 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9061" docExpressionCount="812" docLength="9769" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1195624">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipc.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRmiGipc extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶"), Diff(DELETE,"	//A5"), Diff(EQUAL,"¶"), Diff(INSERT,""), Diff(EQUAL,"	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶"), Diff(DELETE,"	//protected int aProposalNumber;"), Diff(EQUAL,"¶"), Diff(INSERT,""), Diff(EQUAL,"	public int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶"), Diff(INSERT,""), Diff(EQUAL,"	"), Diff(DELETE,"@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}"), Diff(EQUAL,"¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		//ServerArgsProcessor.ge;¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		//A5¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		// Ideally the prefixes should be main args¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		//Locate GIPC Server¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		//Get GIPC server here¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		//Register Client with GIPC Proxy¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		¶		¶		// Locate RMI Server¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		// Get RMI server here¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			// TODO Auto-generated catch block¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		// export client to create proxy¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		// have the server register the exported client¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);¶		// Add propertyChangeListener¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶	@Override"), Diff(INSERT,"¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶	¶	@Override"), Diff(EQUAL,"¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		//IPC Mechanism Change¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		//commandProcessor.setInputString("quit");¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//aProposalNumber++;¶		¶	}¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void processArgs(String[] args) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		// TODO Auto-generated method stub¶		¶	}¶¶¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRmiGipc extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	

	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;

	public int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	

	@Override
	public void argumentProcessor(String[] args) {
	
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		//ServerArgsProcessor.ge;
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		//A5
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		

	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		// Ideally the prefixes should be main args
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		//Locate GIPC Server
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		//Get GIPC server here
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		//Register Client with GIPC Proxy
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// Locate RMI Server
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		// Get RMI server here
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			// TODO Auto-generated catch block
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		// export client to create proxy
		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		// have the server register the exported client
		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	
	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}
	
	@Override

	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		//IPC Mechanism Change
		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(int aCode) {
		//commandProcessor.setInputString("quit");
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void processArgs(String[] args) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		// TODO Auto-generated method stub
		
	}











}
]]></snapshot>
  </Command>
  <DocumentChange __id="502" _type="Delete" date="Tue May 03 19:29:45 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9057" docExpressionCount="812" docLength="9743" endLine="221" length="26" offset="7734" startLine="220" starttimestamp="1651619386199" timestamp="1199170">
    <text><![CDATA[		//IPC Mechanism Change
]]></text>
  </DocumentChange>
  <DocumentChange __id="508" _type="Delete" date="Tue May 03 19:29:47 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9052" docExpressionCount="812" docLength="9704" endLine="225" length="39" offset="7943" startLine="224" starttimestamp="1651619386199" timestamp="1200895">
    <text><![CDATA[			// TODO Auto-generated catch block
]]></text>
  </DocumentChange>
  <DocumentChange __id="513" _type="Delete" date="Tue May 03 19:29:48 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9048" docExpressionCount="812" docLength="9658" endLine="232" length="46" offset="8118" startLine="231" starttimestamp="1651619386199" timestamp="1202109">
    <text><![CDATA[		//commandProcessor.setInputString("quit");
]]></text>
  </DocumentChange>
  <DocumentChange __id="517" _type="Delete" date="Tue May 03 19:29:49 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9048" docExpressionCount="812" docLength="9612" endLine="226" length="46" offset="8018" startLine="226" starttimestamp="1651619386199" timestamp="1203560">
    <text><![CDATA[// all commands go to the first command window]]></text>
  </DocumentChange>
  <DocumentChange __id="521" _type="Delete" date="Tue May 03 19:29:53 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9048" docExpressionCount="812" docLength="9578" endLine="280" length="34" offset="9381" startLine="280" starttimestamp="1651619386199" timestamp="1207240">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <DocumentChange __id="525" _type="Delete" date="Tue May 03 19:29:54 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9048" docExpressionCount="812" docLength="9544" endLine="286" length="34" offset="9509" startLine="286" starttimestamp="1651619386199" timestamp="1208523">
    <text><![CDATA[// TODO Auto-generated method stub]]></text>
  </DocumentChange>
  <Command __id="530" _type="PauseCommand" date="Tue May 03 19:30:00 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1213941">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2100]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="531" _type="CutCommand" date="Tue May 03 19:30:00 EDT 2022" starttimestamp="1651619386199" timestamp="1213958" />
  <Command __id="533" _type="PauseCommand" date="Tue May 03 19:30:01 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1215049">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1091]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="532" _type="MoveCaretCommand" caretOffset="7316" date="Tue May 03 19:30:01 EDT 2022" docOffset="8991" starttimestamp="1651619386199" timestamp="1215049" />
  <Command __id="535" _type="InsertStringCommand" date="Tue May 03 19:30:01 EDT 2022" starttimestamp="1651619386199" timestamp="1215798" timestamp2="1215798">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="537" _type="PasteCommand" date="Tue May 03 19:30:02 EDT 2022" starttimestamp="1651619386199" timestamp="1216126" />
  <Command __id="538" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:30:02 EDT 2022" starttimestamp="1651619386199" timestamp="1216727" />
  <Command __id="539" _type="EclipseCommand" commandID="" date="Tue May 03 19:30:03 EDT 2022" starttimestamp="1651619386199" timestamp="1217646" />
  <Command __id="540" _type="EclipseCommand" commandID="" date="Tue May 03 19:30:03 EDT 2022" starttimestamp="1651619386199" timestamp="1217668" />
  <Command __id="542" _type="PauseCommand" date="Tue May 03 19:30:06 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1220601">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2933]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="541" _type="SelectTextCommand" caretOffset="4819" date="Tue May 03 19:30:06 EDT 2022" end="5169" start="4819" starttimestamp="1651619386199" timestamp="1220601" />
  <Command __id="544" _type="CutCommand" date="Tue May 03 19:30:07 EDT 2022" starttimestamp="1651619386199" timestamp="1221596" />
  <Command __id="546" _type="PauseCommand" date="Tue May 03 19:30:08 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1222722">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1126]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="545" _type="MoveCaretCommand" caretOffset="4333" date="Tue May 03 19:30:08 EDT 2022" docOffset="6008" starttimestamp="1651619386199" timestamp="1222722" />
  <Command __id="548" _type="InsertStringCommand" date="Tue May 03 19:30:09 EDT 2022" starttimestamp="1651619386199" timestamp="1223528" timestamp2="1223528">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="550" _type="PasteCommand" date="Tue May 03 19:30:09 EDT 2022" starttimestamp="1651619386199" timestamp="1223795" />
  <Command __id="552" _type="PauseCommand" date="Tue May 03 19:30:13 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1226900">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3105]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="551" _type="SelectTextCommand" caretOffset="4073" date="Tue May 03 19:30:13 EDT 2022" end="4179" start="4073" starttimestamp="1651619386199" timestamp="1226900" />
  <Command __id="554" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:13 EDT 2022" starttimestamp="1651619386199" timestamp="1227403" />
  <Command __id="556" _type="PauseCommand" date="Tue May 03 19:30:15 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1229734">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2331]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="555" _type="MoveCaretCommand" caretOffset="2025" date="Tue May 03 19:30:15 EDT 2022" docOffset="3700" starttimestamp="1651619386199" timestamp="1229734" />
  <Command __id="557" _type="SelectTextCommand" caretOffset="2031" date="Tue May 03 19:30:16 EDT 2022" end="2031" start="2024" starttimestamp="1651619386199" timestamp="1229867" />
  <Command __id="558" _type="SelectTextCommand" caretOffset="2066" date="Tue May 03 19:30:16 EDT 2022" end="2066" start="2019" starttimestamp="1651619386199" timestamp="1229968" />
  <Command __id="560" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:17 EDT 2022" starttimestamp="1651619386199" timestamp="1230875" />
  <Command __id="561" _type="MoveCaretCommand" caretOffset="2105" date="Tue May 03 19:30:17 EDT 2022" docOffset="3780" starttimestamp="1651619386199" timestamp="1231389" />
  <Command __id="562" _type="SelectTextCommand" caretOffset="2105" date="Tue May 03 19:30:17 EDT 2022" end="2105" start="2099" starttimestamp="1651619386199" timestamp="1231526" />
  <Command __id="563" _type="SelectTextCommand" caretOffset="2119" date="Tue May 03 19:30:17 EDT 2022" end="2119" start="2095" starttimestamp="1651619386199" timestamp="1231645" />
  <Command __id="565" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:18 EDT 2022" starttimestamp="1651619386199" timestamp="1231839" />
  <Command __id="566" _type="MoveCaretCommand" caretOffset="2297" date="Tue May 03 19:30:18 EDT 2022" docOffset="3972" starttimestamp="1651619386199" timestamp="1232359" />
  <Command __id="567" _type="SelectTextCommand" caretOffset="2297" date="Tue May 03 19:30:18 EDT 2022" end="2297" start="2293" starttimestamp="1651619386199" timestamp="1232498" />
  <Command __id="568" _type="SelectTextCommand" caretOffset="2311" date="Tue May 03 19:30:18 EDT 2022" end="2311" start="2285" starttimestamp="1651619386199" timestamp="1232761" />
  <Command __id="570" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:19 EDT 2022" starttimestamp="1651619386199" timestamp="1232946" />
  <Command __id="571" _type="MoveCaretCommand" caretOffset="2517" date="Tue May 03 19:30:19 EDT 2022" docOffset="4192" starttimestamp="1651619386199" timestamp="1233496" />
  <Command __id="572" _type="SelectTextCommand" caretOffset="2522" date="Tue May 03 19:30:19 EDT 2022" end="2522" start="2516" starttimestamp="1651619386199" timestamp="1233633" />
  <Command __id="573" _type="SelectTextCommand" caretOffset="2540" date="Tue May 03 19:30:19 EDT 2022" end="2540" start="2503" starttimestamp="1651619386199" timestamp="1233755" />
  <Command __id="575" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:20 EDT 2022" starttimestamp="1651619386199" timestamp="1233860" />
  <Command __id="577" _type="PauseCommand" date="Tue May 03 19:30:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1235106">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1246]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="576" _type="MoveCaretCommand" caretOffset="2600" date="Tue May 03 19:30:21 EDT 2022" docOffset="4275" starttimestamp="1651619386199" timestamp="1235106" />
  <Command __id="578" _type="SelectTextCommand" caretOffset="2601" date="Tue May 03 19:30:21 EDT 2022" end="2601" start="2597" starttimestamp="1651619386199" timestamp="1235249" />
  <Command __id="579" _type="SelectTextCommand" caretOffset="2625" date="Tue May 03 19:30:21 EDT 2022" end="2625" start="2586" starttimestamp="1651619386199" timestamp="1235366" />
  <Command __id="581" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:21 EDT 2022" starttimestamp="1651619386199" timestamp="1235496" />
  <Command __id="582" _type="MoveCaretCommand" caretOffset="2637" date="Tue May 03 19:30:22 EDT 2022" docOffset="4312" starttimestamp="1651619386199" timestamp="1236341" />
  <Command __id="583" _type="SelectTextCommand" caretOffset="2639" date="Tue May 03 19:30:22 EDT 2022" end="2639" start="2636" starttimestamp="1651619386199" timestamp="1236489" />
  <Command __id="584" _type="SelectTextCommand" caretOffset="2648" date="Tue May 03 19:30:22 EDT 2022" end="2648" start="2624" starttimestamp="1651619386199" timestamp="1236624" />
  <Command __id="586" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:23 EDT 2022" starttimestamp="1651619386199" timestamp="1236866" />
  <Command __id="588" _type="PauseCommand" date="Tue May 03 19:30:24 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1237965">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1099]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="587" _type="MoveCaretCommand" caretOffset="2916" date="Tue May 03 19:30:24 EDT 2022" docOffset="4591" starttimestamp="1651619386199" timestamp="1237965" />
  <Command __id="589" _type="SelectTextCommand" caretOffset="2905" date="Tue May 03 19:30:24 EDT 2022" end="2917" start="2905" starttimestamp="1651619386199" timestamp="1238111" />
  <Command __id="590" _type="SelectTextCommand" caretOffset="2905" date="Tue May 03 19:30:24 EDT 2022" end="2905" start="2900" starttimestamp="1651619386199" timestamp="1238231" />
  <Command __id="592" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:24 EDT 2022" starttimestamp="1651619386199" timestamp="1238339" />
  <Command __id="594" _type="PauseCommand" date="Tue May 03 19:30:27 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1241207">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2868]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="595" _type="UndoCommand" date="Tue May 03 19:30:27 EDT 2022" starttimestamp="1651619386199" timestamp="1241211" />
  <Command __id="596" _type="MoveCaretCommand" caretOffset="2920" date="Tue May 03 19:30:28 EDT 2022" docOffset="4595" starttimestamp="1651619386199" timestamp="1241805" />
  <Command __id="597" _type="SelectTextCommand" caretOffset="2924" date="Tue May 03 19:30:28 EDT 2022" end="2924" start="2918" starttimestamp="1651619386199" timestamp="1241957" />
  <Command __id="598" _type="SelectTextCommand" caretOffset="2931" date="Tue May 03 19:30:28 EDT 2022" end="2931" start="2905" starttimestamp="1651619386199" timestamp="1242077" />
  <Command __id="600" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:29 EDT 2022" starttimestamp="1651619386199" timestamp="1242961" />
  <Command __id="602" _type="PauseCommand" date="Tue May 03 19:30:31 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1244851">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1890]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="601" _type="MoveCaretCommand" caretOffset="3255" date="Tue May 03 19:30:31 EDT 2022" docOffset="4930" starttimestamp="1651619386199" timestamp="1244851" />
  <Command __id="603" _type="SelectTextCommand" caretOffset="3258" date="Tue May 03 19:30:31 EDT 2022" end="3258" start="3254" starttimestamp="1651619386199" timestamp="1245001" />
  <Command __id="604" _type="SelectTextCommand" caretOffset="3287" date="Tue May 03 19:30:31 EDT 2022" end="3287" start="3248" starttimestamp="1651619386199" timestamp="1245110" />
  <Command __id="606" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:31 EDT 2022" starttimestamp="1651619386199" timestamp="1245309" />
  <Command __id="607" _type="MoveCaretCommand" caretOffset="3416" date="Tue May 03 19:30:32 EDT 2022" docOffset="5091" starttimestamp="1651619386199" timestamp="1246190" />
  <Command __id="608" _type="SelectTextCommand" caretOffset="3416" date="Tue May 03 19:30:32 EDT 2022" end="3416" start="3410" starttimestamp="1651619386199" timestamp="1246338" />
  <Command __id="609" _type="SelectTextCommand" caretOffset="3441" date="Tue May 03 19:30:32 EDT 2022" end="3441" start="3405" starttimestamp="1651619386199" timestamp="1246463" />
  <Command __id="611" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:33 EDT 2022" starttimestamp="1651619386199" timestamp="1246801" />
  <Command __id="613" _type="PauseCommand" date="Tue May 03 19:30:34 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1248091">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1290]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="612" _type="MoveCaretCommand" caretOffset="3557" date="Tue May 03 19:30:34 EDT 2022" docOffset="5232" starttimestamp="1651619386199" timestamp="1248091" />
  <Command __id="614" _type="SelectTextCommand" caretOffset="3557" date="Tue May 03 19:30:34 EDT 2022" end="3557" start="3549" starttimestamp="1651619386199" timestamp="1248253" />
  <Command __id="615" _type="SelectTextCommand" caretOffset="3579" date="Tue May 03 19:30:34 EDT 2022" end="3579" start="3528" starttimestamp="1651619386199" timestamp="1248411" />
  <Command __id="617" _type="PauseCommand" date="Tue May 03 19:30:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1250004">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1593]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="618" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:30:36 EDT 2022" starttimestamp="1651619386199" timestamp="1250011" />
  <Command __id="620" _type="PauseCommand" date="Tue May 03 19:30:39 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1252980">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2969]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="619" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:30:39 EDT 2022" starttimestamp="1651619386199" timestamp="1252980" />
  <Command __id="621" _type="EclipseCommand" commandID="" date="Tue May 03 19:30:39 EDT 2022" starttimestamp="1651619386199" timestamp="1253068" />
  <Command __id="622" _type="EclipseCommand" commandID="" date="Tue May 03 19:30:39 EDT 2022" starttimestamp="1651619386199" timestamp="1253088" />
  <Command __id="624" _type="PauseCommand" date="Tue May 03 19:30:42 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1255875">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2787]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="623" _type="MoveCaretCommand" caretOffset="640" date="Tue May 03 19:30:42 EDT 2022" docOffset="2315" starttimestamp="1651619386199" timestamp="1255875" />
  <Command __id="626" _type="PauseCommand" date="Tue May 03 19:30:44 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1258053">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2178]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="625" _type="SelectTextCommand" caretOffset="493" date="Tue May 03 19:30:44 EDT 2022" end="635" start="493" starttimestamp="1651619386199" timestamp="1258053" />
  <Command __id="628" _type="CutCommand" date="Tue May 03 19:30:44 EDT 2022" starttimestamp="1651619386199" timestamp="1258406" />
  <Command __id="630" _type="PauseCommand" date="Tue May 03 19:30:45 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1259704">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1297]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="629" _type="MoveCaretCommand" caretOffset="651" date="Tue May 03 19:30:45 EDT 2022" docOffset="2326" starttimestamp="1651619386199" timestamp="1259703" />
  <Command __id="632" _type="InsertStringCommand" date="Tue May 03 19:30:46 EDT 2022" starttimestamp="1651619386199" timestamp="1260436" timestamp2="1260436">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="634" _type="PasteCommand" date="Tue May 03 19:30:46 EDT 2022" starttimestamp="1651619386199" timestamp="1260732" />
  <Command __id="636" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.delete.line" date="Tue May 03 19:30:47 EDT 2022" starttimestamp="1651619386199" timestamp="1261214" />
  <Command __id="638" _type="PauseCommand" date="Tue May 03 19:30:48 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1262696">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1482]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="639" _type="UndoCommand" date="Tue May 03 19:30:48 EDT 2022" starttimestamp="1651619386199" timestamp="1262703" />
  <DocumentChange __id="529" _type="Delete" date="Tue May 03 19:30:00 EDT 2022" docASTNodeCount="1101" docActiveCodeLength="8540" docExpressionCount="771" docLength="9016" endLine="262" length="528" offset="8416" startLine="247" starttimestamp="1651619386199" timestamp="1213941">
    <text><![CDATA[@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="534" _type="Insert" date="Tue May 03 19:30:01 EDT 2022" docASTNodeCount="1101" docActiveCodeLength="8543" docExpressionCount="771" docLength="9019" length="3" offset="8991" starttimestamp="1651619386199" timestamp="1215793">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="536" _type="Replace" date="Tue May 03 19:30:02 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9051" docExpressionCount="812" docLength="9547" endLine="275" insertionLength="529" int_docASTNodeCount="1101" int_docActiveCodeLength="8542" int_docExpressionCount="771" int_docLength="9018" length="1" offset="8993" startLine="275" starttimestamp="1651619386199" timestamp="1216114">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//aProposalNumber++;
		
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="543" _type="Delete" date="Tue May 03 19:30:07 EDT 2022" docASTNodeCount="1127" docActiveCodeLength="8701" docExpressionCount="784" docLength="9197" endLine="196" length="350" offset="6494" startLine="190" starttimestamp="1651619386199" timestamp="1221580">
    <text><![CDATA[	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}
	]]></text>
  </DocumentChange>
  <DocumentChange __id="547" _type="Insert" date="Tue May 03 19:30:09 EDT 2022" docASTNodeCount="1127" docActiveCodeLength="8704" docExpressionCount="784" docLength="9200" length="3" offset="6008" starttimestamp="1651619386199" timestamp="1223522">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="549" _type="Replace" date="Tue May 03 19:30:09 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9053" docExpressionCount="812" docLength="9549" endLine="179" insertionLength="350" int_docASTNodeCount="1127" int_docActiveCodeLength="8703" int_docExpressionCount="784" int_docLength="9199" length="1" offset="6010" startLine="179" starttimestamp="1651619386199" timestamp="1223786">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}
	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="553" _type="Delete" date="Tue May 03 19:30:13 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9049" docExpressionCount="812" docLength="9443" endLine="173" length="106" offset="5748" startLine="172" starttimestamp="1651619386199" timestamp="1227397">
    <text><![CDATA[//clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME);
		// Add propertyChangeListener]]></text>
  </DocumentChange>
  <DocumentChange __id="559" _type="Delete" date="Tue May 03 19:30:17 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9045" docExpressionCount="812" docLength="9396" endLine="112" length="47" offset="3694" startLine="111" starttimestamp="1651619386199" timestamp="1230867">
    <text><![CDATA[		// Ideally the prefixes should be main args
]]></text>
  </DocumentChange>
  <DocumentChange __id="564" _type="Delete" date="Tue May 03 19:30:18 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9041" docExpressionCount="812" docLength="9372" endLine="114" length="24" offset="3770" startLine="113" starttimestamp="1651619386199" timestamp="1231832">
    <text><![CDATA[		//Locate GIPC Server
]]></text>
  </DocumentChange>
  <DocumentChange __id="569" _type="Delete" date="Tue May 03 19:30:19 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9037" docExpressionCount="812" docLength="9346" endLine="117" length="26" offset="3960" startLine="116" starttimestamp="1651619386199" timestamp="1232940">
    <text><![CDATA[		//Get GIPC server here
]]></text>
  </DocumentChange>
  <DocumentChange __id="574" _type="Delete" date="Tue May 03 19:30:20 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9033" docExpressionCount="812" docLength="9309" endLine="120" length="37" offset="4178" startLine="119" starttimestamp="1651619386199" timestamp="1233853">
    <text><![CDATA[		//Register Client with GIPC Proxy
]]></text>
  </DocumentChange>
  <DocumentChange __id="580" _type="Delete" date="Tue May 03 19:30:21 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9028" docExpressionCount="812" docLength="9270" endLine="123" length="39" offset="4261" startLine="122" starttimestamp="1651619386199" timestamp="1235487">
    <text><![CDATA[			// TODO Auto-generated catch block
]]></text>
  </DocumentChange>
  <DocumentChange __id="585" _type="Delete" date="Tue May 03 19:30:23 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9024" docExpressionCount="812" docLength="9246" endLine="127" length="24" offset="4299" startLine="126" starttimestamp="1651619386199" timestamp="1236860">
    <text><![CDATA[		// Locate RMI Server
]]></text>
  </DocumentChange>
  <DocumentChange __id="591" _type="Delete" date="Tue May 03 19:30:24 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9019" docExpressionCount="812" docLength="9241" endLine="133" length="5" offset="4575" startLine="132" starttimestamp="1651619386199" timestamp="1238333">
    <text><![CDATA[		}
]]></text>
  </DocumentChange>
  <DocumentChange __id="593" _type="Insert" date="Tue May 03 19:30:27 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9024" docExpressionCount="812" docLength="9246" length="5" offset="4575" starttimestamp="1651619386199" timestamp="1241207">
    <text><![CDATA[		}
]]></text>
  </DocumentChange>
  <DocumentChange __id="599" _type="Delete" date="Tue May 03 19:30:29 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9020" docExpressionCount="812" docLength="9220" endLine="134" length="26" offset="4580" startLine="133" starttimestamp="1651619386199" timestamp="1242955">
    <text><![CDATA[		// Get RMI server here
]]></text>
  </DocumentChange>
  <DocumentChange __id="605" _type="Delete" date="Tue May 03 19:30:31 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9015" docExpressionCount="812" docLength="9181" endLine="141" length="39" offset="4923" startLine="140" starttimestamp="1651619386199" timestamp="1245302">
    <text><![CDATA[			// TODO Auto-generated catch block
]]></text>
  </DocumentChange>
  <DocumentChange __id="610" _type="Delete" date="Tue May 03 19:30:32 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9011" docExpressionCount="812" docLength="9145" endLine="149" length="36" offset="5080" startLine="148" starttimestamp="1651619386199" timestamp="1246795">
    <text><![CDATA[		// export client to create proxy
]]></text>
  </DocumentChange>
  <DocumentChange __id="616" _type="Delete" date="Tue May 03 19:30:36 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9007" docExpressionCount="812" docLength="9094" endLine="155" length="51" offset="5203" startLine="154" starttimestamp="1651619386199" timestamp="1250004">
    <text><![CDATA[		// have the server register the exported client
]]></text>
  </DocumentChange>
  <DocumentChange __id="627" _type="Delete" date="Tue May 03 19:30:44 EDT 2022" docASTNodeCount="1144" docActiveCodeLength="8865" docExpressionCount="804" docLength="8952" endLine="52" length="142" offset="2168" startLine="50" starttimestamp="1651619386199" timestamp="1258389">
    <text><![CDATA[	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;]]></text>
  </DocumentChange>
  <DocumentChange __id="631" _type="Insert" date="Tue May 03 19:30:46 EDT 2022" docASTNodeCount="1144" docActiveCodeLength="8868" docExpressionCount="804" docLength="8955" length="3" offset="2326" starttimestamp="1651619386199" timestamp="1260430">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="633" _type="Replace" date="Tue May 03 19:30:46 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9009" docExpressionCount="812" docLength="9096" endLine="58" insertionLength="142" int_docASTNodeCount="1144" int_docActiveCodeLength="8867" int_docExpressionCount="804" int_docLength="8954" length="1" offset="2328" startLine="58" starttimestamp="1651619386199" timestamp="1260724">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="635" _type="Delete" date="Tue May 03 19:30:47 EDT 2022" docASTNodeCount="1156" docActiveCodeLength="8962" docExpressionCount="809" docLength="9049" endLine="61" length="47" offset="2425" startLine="60" starttimestamp="1651619386199" timestamp="1261212">
    <text><![CDATA[	ServerRemoteInterfaceGIPC serverGIPC = null;
]]></text>
  </DocumentChange>
  <DocumentChange __id="637" _type="Insert" date="Tue May 03 19:30:48 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9009" docExpressionCount="812" docLength="9096" length="47" offset="2425" starttimestamp="1651619386199" timestamp="1262696">
    <text><![CDATA[	ServerRemoteInterfaceGIPC serverGIPC = null;
]]></text>
  </DocumentChange>
  <Command __id="641" _type="PauseCommand" date="Tue May 03 19:30:50 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1264443">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1739]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="640" _type="Replace" date="Tue May 03 19:30:50 EDT 2022" docASTNodeCount="1144" docActiveCodeLength="8868" docExpressionCount="804" docLength="8955" endLine="60" insertionLength="1" int_docASTNodeCount="1144" int_docActiveCodeLength="8867" int_docExpressionCount="804" int_docLength="8954" length="142" offset="2328" startLine="58" starttimestamp="1651619386199" timestamp="1264442">
    <deletedText><![CDATA[	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <Command __id="642" _type="UndoCommand" date="Tue May 03 19:30:50 EDT 2022" starttimestamp="1651619386199" timestamp="1264460" />
  <DocumentChange __id="643" _type="Delete" date="Tue May 03 19:30:51 EDT 2022" docASTNodeCount="1144" docActiveCodeLength="8865" docExpressionCount="804" docLength="8952" endLine="58" length="3" offset="2326" startLine="57" starttimestamp="1651619386199" timestamp="1265285">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="644" _type="UndoCommand" date="Tue May 03 19:30:51 EDT 2022" starttimestamp="1651619386199" timestamp="1265292" />
  <Command __id="646" _type="UndoCommand" date="Tue May 03 19:30:52 EDT 2022" starttimestamp="1651619386199" timestamp="1265934" />
  <Command __id="648" _type="PauseCommand" date="Tue May 03 19:30:53 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1266979">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1045]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="649" _type="CutCommand" date="Tue May 03 19:30:53 EDT 2022" starttimestamp="1651619386199" timestamp="1266993" />
  <Command __id="651" _type="PauseCommand" date="Tue May 03 19:30:54 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1268098">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1105]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="650" _type="MoveCaretCommand" caretOffset="661" date="Tue May 03 19:30:54 EDT 2022" docOffset="2336" starttimestamp="1651619386199" timestamp="1268098" />
  <Command __id="652" _type="MoveCaretCommand" caretOffset="701" date="Tue May 03 19:30:54 EDT 2022" docOffset="2376" starttimestamp="1651619386199" timestamp="1268474" />
  <Command __id="653" _type="MoveCaretCommand" caretOffset="653" date="Tue May 03 19:30:55 EDT 2022" docOffset="2328" starttimestamp="1651619386199" timestamp="1269356" />
  <Command __id="655" _type="PasteCommand" date="Tue May 03 19:30:56 EDT 2022" starttimestamp="1651619386199" timestamp="1270002" />
  <Command __id="657" _type="InsertStringCommand" date="Tue May 03 19:30:56 EDT 2022" starttimestamp="1651619386199" timestamp="1270431" timestamp2="1270431">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="658" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:30:57 EDT 2022" starttimestamp="1651619386199" timestamp="1271044" />
  <Command __id="659" _type="EclipseCommand" commandID="" date="Tue May 03 19:30:57 EDT 2022" starttimestamp="1651619386199" timestamp="1271183" />
  <Command __id="660" _type="EclipseCommand" commandID="" date="Tue May 03 19:30:57 EDT 2022" starttimestamp="1651619386199" timestamp="1271203" />
  <Command __id="662" _type="PauseCommand" date="Tue May 03 19:30:59 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1273064">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1861]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="661" _type="ShellCommand" date="Tue May 03 19:30:59 EDT 2022" starttimestamp="1651619386199" timestamp="1273064" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="663" _type="ShellCommand" date="Tue May 03 19:30:59 EDT 2022" starttimestamp="1651619386199" timestamp="1273784" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="665" _type="PauseCommand" date="Tue May 03 19:31:02 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1276260">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2476]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="664" _type="MoveCaretCommand" caretOffset="406" date="Tue May 03 19:31:02 EDT 2022" docOffset="2081" starttimestamp="1651619386199" timestamp="1276260" />
  <Command __id="666" _type="SelectTextCommand" caretOffset="416" date="Tue May 03 19:31:02 EDT 2022" end="416" start="396" starttimestamp="1651619386199" timestamp="1276400" />
  <Command __id="668" _type="PauseCommand" date="Tue May 03 19:31:04 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1278253">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1853]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="667" _type="CopyCommand" date="Tue May 03 19:31:04 EDT 2022" starttimestamp="1651619386199" timestamp="1278253" />
  <Command __id="670" _type="ShellCommand" date="Tue May 03 19:31:04 EDT 2022" starttimestamp="1651619386199" timestamp="1278538" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="671" _type="PasteCommand" date="Tue May 03 19:31:04 EDT 2022" starttimestamp="1651619386199" timestamp="1278723" />
  <Command __id="673" _type="PauseCommand" date="Tue May 03 19:31:17 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1290869">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[12146]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="674" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:31:17 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1291558" wrapSearch="false">
    <searchString><![CDATA[EXPERIMENT_COMMAND_1]]></searchString>
    <replaceString><![CDATA[CustomCommandMove]]></replaceString>
  </Command>
  <Command __id="676" _type="PauseCommand" date="Tue May 03 19:31:21 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1295074">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3516]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="675" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:31:21 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1295074" wrapSearch="false">
    <searchString><![CDATA[EXPERIMENT_COMMAND_1]]></searchString>
    <replaceString><![CDATA[CustomCommandMove]]></replaceString>
  </Command>
  <Command __id="677" _type="ShellCommand" date="Tue May 03 19:31:21 EDT 2022" starttimestamp="1651619386199" timestamp="1295623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="678" _type="MoveCaretCommand" caretOffset="472" date="Tue May 03 19:31:22 EDT 2022" docOffset="2147" starttimestamp="1651619386199" timestamp="1296608" />
  <Command __id="679" _type="SelectTextCommand" caretOffset="478" date="Tue May 03 19:31:22 EDT 2022" end="478" start="458" starttimestamp="1651619386199" timestamp="1296755" />
  <Command __id="681" _type="PauseCommand" date="Tue May 03 19:31:24 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1298063">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1308]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="680" _type="CopyCommand" date="Tue May 03 19:31:24 EDT 2022" starttimestamp="1651619386199" timestamp="1298063" />
  <Command __id="683" _type="InsertStringCommand" date="Tue May 03 19:31:24 EDT 2022" starttimestamp="1651619386199" timestamp="1298369" timestamp2="1298369">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="685" _type="InsertStringCommand" date="Tue May 03 19:31:24 EDT 2022" starttimestamp="1651619386199" timestamp="1298578" timestamp2="1298578">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="687" _type="PauseCommand" date="Tue May 03 19:31:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1299614">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="688" _type="UndoCommand" date="Tue May 03 19:31:25 EDT 2022" starttimestamp="1651619386199" timestamp="1299620" />
  <Command __id="690" _type="UndoCommand" date="Tue May 03 19:31:26 EDT 2022" starttimestamp="1651619386199" timestamp="1299913" />
  <Command __id="691" _type="CopyCommand" date="Tue May 03 19:31:26 EDT 2022" starttimestamp="1651619386199" timestamp="1300732" />
  <Command __id="693" _type="ShellCommand" date="Tue May 03 19:31:27 EDT 2022" starttimestamp="1651619386199" timestamp="1301028" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="694" _type="PasteCommand" date="Tue May 03 19:31:27 EDT 2022" starttimestamp="1651619386199" timestamp="1301206" />
  <Command __id="696" _type="PauseCommand" date="Tue May 03 19:31:38 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1311844">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[10638]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="695" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:31:38 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1311844" wrapSearch="false">
    <searchString><![CDATA[EXPERIMENT_COMMAND_2]]></searchString>
    <replaceString><![CDATA[customCommandUndo]]></replaceString>
  </Command>
  <Command __id="698" _type="PauseCommand" date="Tue May 03 19:31:39 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1313188">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1343]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="699" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:31:39 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1313671" wrapSearch="false">
    <searchString><![CDATA[EXPERIMENT_COMMAND_2]]></searchString>
    <replaceString><![CDATA[customCommandUndo]]></replaceString>
  </Command>
  <Command __id="700" _type="ShellCommand" date="Tue May 03 19:31:40 EDT 2022" starttimestamp="1651619386199" timestamp="1314567" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="701" _type="MoveCaretCommand" caretOffset="642" date="Tue May 03 19:31:41 EDT 2022" docOffset="2317" starttimestamp="1651619386199" timestamp="1314955" />
  <Command __id="702" _type="MoveCaretCommand" caretOffset="402" date="Tue May 03 19:31:41 EDT 2022" docOffset="2077" starttimestamp="1651619386199" timestamp="1315566" />
  <Command __id="703" _type="MoveCaretCommand" caretOffset="398" date="Tue May 03 19:31:42 EDT 2022" docOffset="2073" starttimestamp="1651619386199" timestamp="1316241" />
  <Command __id="704" _type="SelectTextCommand" caretOffset="413" date="Tue May 03 19:31:42 EDT 2022" end="413" start="396" starttimestamp="1651619386199" timestamp="1316374" />
  <Command __id="705" _type="CopyCommand" date="Tue May 03 19:31:43 EDT 2022" starttimestamp="1651619386199" timestamp="1316984" />
  <Command __id="707" _type="ShellCommand" date="Tue May 03 19:31:43 EDT 2022" starttimestamp="1651619386199" timestamp="1317293" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="708" _type="PasteCommand" date="Tue May 03 19:31:43 EDT 2022" starttimestamp="1651619386199" timestamp="1317444" />
  <Command __id="710" _type="PauseCommand" date="Tue May 03 19:31:45 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1319127">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1683]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="709" _type="PasteCommand" date="Tue May 03 19:31:45 EDT 2022" starttimestamp="1651619386199" timestamp="1319127" />
  <Command __id="712" _type="PauseCommand" date="Tue May 03 19:31:48 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1322591">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3464]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="713" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:31:49 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1323292" wrapSearch="false">
    <searchString><![CDATA[CustomCommandMove]]></searchString>
    <replaceString><![CDATA[customCommandMove]]></replaceString>
  </Command>
  <Command __id="715" _type="PauseCommand" date="Tue May 03 19:31:52 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1325870">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2578]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="714" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:31:52 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1325870" wrapSearch="false">
    <searchString><![CDATA[CustomCommandMove]]></searchString>
    <replaceString><![CDATA[customCommandMove]]></replaceString>
  </Command>
  <Command __id="716" _type="ShellCommand" date="Tue May 03 19:31:52 EDT 2022" starttimestamp="1651619386199" timestamp="1326601" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="717" _type="ShellCommand" date="Tue May 03 19:31:53 EDT 2022" starttimestamp="1651619386199" timestamp="1327431" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="718" _type="ShellCommand" date="Tue May 03 19:31:54 EDT 2022" starttimestamp="1651619386199" timestamp="1327930" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="720" _type="PauseCommand" date="Tue May 03 19:31:55 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1329774">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1844]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="719" _type="ShellCommand" date="Tue May 03 19:31:55 EDT 2022" starttimestamp="1651619386199" timestamp="1329774" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="722" _type="PauseCommand" date="Tue May 03 19:31:59 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1333509">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3735]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="721" _type="ShellCommand" date="Tue May 03 19:31:59 EDT 2022" starttimestamp="1651619386199" timestamp="1333509" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="723" _type="MoveCaretCommand" caretOffset="516" date="Tue May 03 19:31:59 EDT 2022" docOffset="2191" starttimestamp="1651619386199" timestamp="1333568" />
  <Command __id="724" _type="MoveCaretCommand" caretOffset="525" date="Tue May 03 19:32:00 EDT 2022" docOffset="2200" starttimestamp="1651619386199" timestamp="1334382" />
  <Command __id="725" _type="SelectTextCommand" caretOffset="537" date="Tue May 03 19:32:00 EDT 2022" end="537" start="517" starttimestamp="1651619386199" timestamp="1334522" />
  <Command __id="727" _type="PauseCommand" date="Tue May 03 19:32:02 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1336694">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2172]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="726" _type="CopyCommand" date="Tue May 03 19:32:02 EDT 2022" starttimestamp="1651619386199" timestamp="1336694" />
  <Command __id="729" _type="ShellCommand" date="Tue May 03 19:32:03 EDT 2022" starttimestamp="1651619386199" timestamp="1336958" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="730" _type="PasteCommand" date="Tue May 03 19:32:03 EDT 2022" starttimestamp="1651619386199" timestamp="1337094" />
  <Command __id="732" _type="PauseCommand" date="Tue May 03 19:32:10 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1343927">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[6833]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="734" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:32:10 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1344554" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_HOST_NAME]]></searchString>
    <replaceString><![CDATA[serverHost]]></replaceString>
  </Command>
  <Command __id="736" _type="PauseCommand" date="Tue May 03 19:32:12 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1346133">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1579]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="738" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:32:13 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1346999" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_HOST_NAME]]></searchString>
    <replaceString><![CDATA[serverHost]]></replaceString>
  </Command>
  <Command __id="739" _type="ShellCommand" date="Tue May 03 19:32:13 EDT 2022" starttimestamp="1651619386199" timestamp="1347608" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="740" _type="MoveCaretCommand" caretOffset="556" date="Tue May 03 19:32:14 EDT 2022" docOffset="2231" starttimestamp="1651619386199" timestamp="1348312" />
  <Command __id="741" _type="SelectTextCommand" caretOffset="565" date="Tue May 03 19:32:14 EDT 2022" end="565" start="550" starttimestamp="1651619386199" timestamp="1348432" />
  <Command __id="743" _type="PauseCommand" date="Tue May 03 19:32:16 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1349847">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1415]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="742" _type="CopyCommand" date="Tue May 03 19:32:16 EDT 2022" starttimestamp="1651619386199" timestamp="1349847" />
  <Command __id="745" _type="ShellCommand" date="Tue May 03 19:32:16 EDT 2022" starttimestamp="1651619386199" timestamp="1350128" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="746" _type="PasteCommand" date="Tue May 03 19:32:16 EDT 2022" starttimestamp="1651619386199" timestamp="1350257" />
  <Command __id="748" _type="PauseCommand" date="Tue May 03 19:32:20 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1354712">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[4455]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="750" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:32:21 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1355459" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_PORT]]></searchString>
    <replaceString><![CDATA[serverPort]]></replaceString>
  </Command>
  <Command __id="752" _type="PauseCommand" date="Tue May 03 19:32:23 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1356819">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1360]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="754" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:32:23 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1357398" wrapSearch="false">
    <searchString><![CDATA[RMI_SERVER_PORT]]></searchString>
    <replaceString><![CDATA[serverPort]]></replaceString>
  </Command>
  <Command __id="755" _type="ShellCommand" date="Tue May 03 19:32:24 EDT 2022" starttimestamp="1651619386199" timestamp="1357920" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="756" _type="MoveCaretCommand" caretOffset="2840" date="Tue May 03 19:32:24 EDT 2022" docOffset="4515" starttimestamp="1651619386199" timestamp="1358383" />
  <Command __id="758" _type="PauseCommand" date="Tue May 03 19:32:31 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1364871">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6488]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="757" _type="MoveCaretCommand" caretOffset="592" date="Tue May 03 19:32:31 EDT 2022" docOffset="2267" starttimestamp="1651619386199" timestamp="1364871" />
  <Command __id="759" _type="SelectTextCommand" caretOffset="597" date="Tue May 03 19:32:31 EDT 2022" end="597" start="586" starttimestamp="1651619386199" timestamp="1365005" />
  <Command __id="761" _type="PauseCommand" date="Tue May 03 19:32:34 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1368456">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3451]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="760" _type="MoveCaretCommand" caretOffset="801" date="Tue May 03 19:32:34 EDT 2022" docOffset="2476" starttimestamp="1651619386199" timestamp="1368456" />
  <Command __id="762" _type="SelectTextCommand" caretOffset="815" date="Tue May 03 19:32:34 EDT 2022" end="815" start="799" starttimestamp="1651619386199" timestamp="1368590" />
  <Command __id="763" _type="CopyCommand" date="Tue May 03 19:32:35 EDT 2022" starttimestamp="1651619386199" timestamp="1369163" />
  <Command __id="765" _type="ShellCommand" date="Tue May 03 19:32:35 EDT 2022" starttimestamp="1651619386199" timestamp="1369462" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="766" _type="PasteCommand" date="Tue May 03 19:32:35 EDT 2022" starttimestamp="1651619386199" timestamp="1369603" />
  <Command __id="768" _type="PauseCommand" date="Tue May 03 19:32:38 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1372581">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2978]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="767" _type="ShellCommand" date="Tue May 03 19:32:38 EDT 2022" starttimestamp="1651619386199" timestamp="1372581" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="770" _type="PauseCommand" date="Tue May 03 19:32:40 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1373952">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1371]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="769" _type="MoveCaretCommand" caretOffset="808" date="Tue May 03 19:32:40 EDT 2022" docOffset="2483" starttimestamp="1651619386199" timestamp="1373952" />
  <Command __id="771" _type="SelectTextCommand" caretOffset="815" date="Tue May 03 19:32:40 EDT 2022" end="815" start="799" starttimestamp="1651619386199" timestamp="1374097" />
  <Command __id="773" _type="PauseCommand" date="Tue May 03 19:32:42 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1376110">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2013]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="772" _type="MoveCaretCommand" caretOffset="981" date="Tue May 03 19:32:42 EDT 2022" docOffset="2656" starttimestamp="1651619386199" timestamp="1376110" />
  <Command __id="774" _type="SelectTextCommand" caretOffset="987" date="Tue May 03 19:32:42 EDT 2022" end="987" start="972" starttimestamp="1651619386199" timestamp="1376247" />
  <Command __id="775" _type="CopyCommand" date="Tue May 03 19:32:43 EDT 2022" starttimestamp="1651619386199" timestamp="1376952" />
  <Command __id="777" _type="ShellCommand" date="Tue May 03 19:32:43 EDT 2022" starttimestamp="1651619386199" timestamp="1377222" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="778" _type="PasteCommand" date="Tue May 03 19:32:43 EDT 2022" starttimestamp="1651619386199" timestamp="1377391" />
  <Command __id="780" _type="PauseCommand" date="Tue May 03 19:32:51 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1384817">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7426]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="784" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:32:51 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1385634" wrapSearch="false">
    <searchString><![CDATA[aProposalNumber]]></searchString>
    <replaceString><![CDATA[thisProposalNumber]]></replaceString>
  </Command>
  <Command __id="786" _type="PauseCommand" date="Tue May 03 19:32:52 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1386747">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1113]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="787" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:32:53 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1387309" wrapSearch="false">
    <searchString><![CDATA[aProposalNumber]]></searchString>
    <replaceString><![CDATA[thisProposalNumber]]></replaceString>
  </Command>
  <Command __id="788" _type="ShellCommand" date="Tue May 03 19:32:54 EDT 2022" starttimestamp="1651619386199" timestamp="1387935" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="790" _type="PauseCommand" date="Tue May 03 19:32:56 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1389834">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1899]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="789" _type="MoveCaretCommand" caretOffset="1044" date="Tue May 03 19:32:56 EDT 2022" docOffset="2719" starttimestamp="1651619386199" timestamp="1389834" />
  <Command __id="792" _type="PauseCommand" date="Tue May 03 19:33:03 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1397496">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7661]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="791" _type="ShellCommand" date="Tue May 03 19:33:03 EDT 2022" starttimestamp="1651619386199" timestamp="1397495" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="793" _type="ShellCommand" date="Tue May 03 19:33:04 EDT 2022" starttimestamp="1651619386199" timestamp="1398064" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="794" _type="ShellCommand" date="Tue May 03 19:33:05 EDT 2022" starttimestamp="1651619386199" timestamp="1398955" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="795" _type="ConsoleOutput" date="Tue May 03 19:33:05 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1399507" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67626
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14810"), Diff(INSERT,"67626"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="797" _type="PauseCommand" date="Tue May 03 19:33:06 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1400620">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1113]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="796" _type="ShellCommand" date="Tue May 03 19:33:06 EDT 2022" starttimestamp="1651619386199" timestamp="1400620" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="798" _type="MoveCaretCommand" caretOffset="1129" date="Tue May 03 19:33:06 EDT 2022" docOffset="2804" starttimestamp="1651619386199" timestamp="1400676" />
  <Command __id="800" _type="PauseCommand" date="Tue May 03 19:33:08 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1401820">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1144]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="799" _type="MoveCaretCommand" caretOffset="1108" date="Tue May 03 19:33:08 EDT 2022" docOffset="2783" starttimestamp="1651619386199" timestamp="1401820" />
  <Command __id="802" _type="PauseCommand" date="Tue May 03 19:33:09 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1403760">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1939]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="801" _type="MoveCaretCommand" caretOffset="1362" date="Tue May 03 19:33:09 EDT 2022" docOffset="3037" starttimestamp="1651619386199" timestamp="1403759" />
  <Command __id="803" _type="SelectTextCommand" caretOffset="1367" date="Tue May 03 19:33:10 EDT 2022" end="1367" start="1348" starttimestamp="1651619386199" timestamp="1403902" />
  <Command __id="804" _type="SelectTextCommand" caretOffset="1373" date="Tue May 03 19:33:10 EDT 2022" end="1373" start="1344" starttimestamp="1651619386199" timestamp="1404196" />
  <Command __id="806" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:33:11 EDT 2022" starttimestamp="1651619386199" timestamp="1404928" />
  <Command __id="808" _type="PauseCommand" date="Tue May 03 19:33:13 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1407123">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2195]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="807" _type="SelectTextCommand" caretOffset="1406" date="Tue May 03 19:33:13 EDT 2022" end="1412" start="1406" starttimestamp="1651619386199" timestamp="1407123" />
  <DocumentChange __id="645" _type="Insert" date="Tue May 03 19:30:52 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9007" docExpressionCount="812" docLength="9094" length="142" offset="2168" starttimestamp="1651619386199" timestamp="1265927">
    <text><![CDATA[	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;]]></text>
  </DocumentChange>
  <DocumentChange __id="647" _type="Delete" date="Tue May 03 19:30:53 EDT 2022" docASTNodeCount="1144" docActiveCodeLength="8865" docExpressionCount="804" docLength="8952" endLine="52" length="142" offset="2168" startLine="50" starttimestamp="1651619386199" timestamp="1266979">
    <text><![CDATA[	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;]]></text>
  </DocumentChange>
  <DocumentChange __id="654" _type="Insert" date="Tue May 03 19:30:56 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9010" docExpressionCount="812" docLength="9097" length="145" offset="2328" repeat="2" starttimestamp="1651619386199" timestamp="1269995" timestamp2="1270424">
    <text><![CDATA[	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	]]></text>
  </DocumentChange>
  <DocumentChange __id="672" _type="Replace" date="Tue May 03 19:31:17 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9007" docExpressionCount="812" docLength="9094" endLine="48" insertionLength="17" int_docASTNodeCount="1153" int_docActiveCodeLength="8990" int_docExpressionCount="809" int_docLength="9077" length="20" offset="2071" startLine="48" starttimestamp="1651619386199" timestamp="1290869">
    <deletedText><![CDATA[EXPERIMENT_COMMAND_1]]></deletedText>
    <insertedText><![CDATA[CustomCommandMove]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="682" _type="Replace" date="Tue May 03 19:31:24 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8988" docExpressionCount="812" docLength="9075" endLine="49" insertionLength="1" int_docASTNodeCount="1153" int_docActiveCodeLength="8987" int_docExpressionCount="809" int_docLength="9074" length="20" offset="2133" startLine="49" starttimestamp="1651619386199" timestamp="1298363">
    <deletedText><![CDATA[EXPERIMENT_COMMAND_2]]></deletedText>
    <insertedText><![CDATA[f]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="684" _type="Insert" date="Tue May 03 19:31:24 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8989" docExpressionCount="812" docLength="9076" length="1" offset="2134" starttimestamp="1651619386199" timestamp="1298573">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="686" _type="Delete" date="Tue May 03 19:31:25 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8988" docExpressionCount="812" docLength="9075" endLine="49" length="1" offset="2134" startLine="49" starttimestamp="1651619386199" timestamp="1299614">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="689" _type="Replace" date="Tue May 03 19:31:26 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9007" docExpressionCount="812" docLength="9094" endLine="49" insertionLength="20" int_docASTNodeCount="1153" int_docActiveCodeLength="8987" int_docExpressionCount="809" int_docLength="9074" length="1" offset="2133" startLine="49" starttimestamp="1651619386199" timestamp="1299907">
    <deletedText><![CDATA[f]]></deletedText>
    <insertedText><![CDATA[EXPERIMENT_COMMAND_2]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="697" _type="Replace" date="Tue May 03 19:31:39 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9004" docExpressionCount="812" docLength="9091" endLine="49" insertionLength="17" int_docASTNodeCount="1153" int_docActiveCodeLength="8987" int_docExpressionCount="809" int_docLength="9074" length="20" offset="2133" startLine="49" starttimestamp="1651619386199" timestamp="1313187">
    <deletedText><![CDATA[EXPERIMENT_COMMAND_2]]></deletedText>
    <insertedText><![CDATA[customCommandUndo]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="711" _type="Replace" date="Tue May 03 19:31:48 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="9004" docExpressionCount="812" docLength="9091" endLine="48" insertionLength="17" int_docASTNodeCount="1153" int_docActiveCodeLength="8987" int_docExpressionCount="809" int_docLength="9074" length="17" offset="2071" startLine="48" starttimestamp="1651619386199" timestamp="1322591">
    <deletedText><![CDATA[CustomCommandMove]]></deletedText>
    <insertedText><![CDATA[customCommandMove]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="731" _type="Replace" date="Tue May 03 19:32:10 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8994" docExpressionCount="812" docLength="9081" endLine="129" insertionLength="10" int_docASTNodeCount="1161" int_docActiveCodeLength="8984" int_docExpressionCount="811" int_docLength="9071" length="20" offset="4381" startLine="129" starttimestamp="1651619386199" timestamp="1343927">
    <deletedText><![CDATA[RMI_SERVER_HOST_NAME]]></deletedText>
    <insertedText><![CDATA[serverHost]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="733" _type="Replace" date="Tue May 03 19:32:10 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8984" docExpressionCount="812" docLength="9071" endLine="130" insertionLength="10" int_docASTNodeCount="1161" int_docActiveCodeLength="8974" int_docExpressionCount="811" int_docLength="9061" length="20" offset="4448" startLine="130" starttimestamp="1651619386199" timestamp="1343947">
    <deletedText><![CDATA[RMI_SERVER_HOST_NAME]]></deletedText>
    <insertedText><![CDATA[serverHost]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="735" _type="Replace" date="Tue May 03 19:32:12 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8974" docExpressionCount="812" docLength="9061" endLine="78" insertionLength="10" int_docASTNodeCount="1160" int_docActiveCodeLength="8964" int_docExpressionCount="810" int_docLength="9051" length="20" offset="2884" startLine="78" starttimestamp="1651619386199" timestamp="1346133">
    <deletedText><![CDATA[RMI_SERVER_HOST_NAME]]></deletedText>
    <insertedText><![CDATA[serverHost]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="737" _type="Replace" date="Tue May 03 19:32:12 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8964" docExpressionCount="812" docLength="9051" endLine="53" insertionLength="10" int_docASTNodeCount="1155" int_docActiveCodeLength="8954" int_docExpressionCount="810" int_docLength="9041" length="20" offset="2192" startLine="53" starttimestamp="1651619386199" timestamp="1346149">
    <deletedText><![CDATA[RMI_SERVER_HOST_NAME]]></deletedText>
    <insertedText><![CDATA[serverHost]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="747" _type="Replace" date="Tue May 03 19:32:20 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8959" docExpressionCount="812" docLength="9046" endLine="79" insertionLength="10" int_docASTNodeCount="1160" int_docActiveCodeLength="8949" int_docExpressionCount="810" int_docLength="9036" length="15" offset="2933" startLine="79" starttimestamp="1651619386199" timestamp="1354712">
    <deletedText><![CDATA[RMI_SERVER_PORT]]></deletedText>
    <insertedText><![CDATA[serverPort]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="749" _type="Replace" date="Tue May 03 19:32:20 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8954" docExpressionCount="812" docLength="9041" endLine="54" insertionLength="10" int_docASTNodeCount="1156" int_docActiveCodeLength="8944" int_docExpressionCount="811" int_docLength="9031" length="15" offset="2225" startLine="54" starttimestamp="1651619386199" timestamp="1354729">
    <deletedText><![CDATA[RMI_SERVER_PORT]]></deletedText>
    <insertedText><![CDATA[serverPort]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="751" _type="Replace" date="Tue May 03 19:32:23 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8949" docExpressionCount="812" docLength="9036" endLine="129" insertionLength="10" int_docASTNodeCount="1162" int_docActiveCodeLength="8939" int_docExpressionCount="812" int_docLength="9026" length="15" offset="4363" startLine="129" starttimestamp="1651619386199" timestamp="1356819">
    <deletedText><![CDATA[RMI_SERVER_PORT]]></deletedText>
    <insertedText><![CDATA[serverPort]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="753" _type="Replace" date="Tue May 03 19:32:23 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8944" docExpressionCount="812" docLength="9031" endLine="130" insertionLength="10" int_docASTNodeCount="1161" int_docActiveCodeLength="8934" int_docExpressionCount="811" int_docLength="9021" length="15" offset="4425" startLine="130" starttimestamp="1651619386199" timestamp="1356838">
    <deletedText><![CDATA[RMI_SERVER_PORT]]></deletedText>
    <insertedText><![CDATA[serverPort]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="779" _type="Replace" date="Tue May 03 19:32:51 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8947" docExpressionCount="812" docLength="9034" endLine="211" insertionLength="18" int_docASTNodeCount="1161" int_docActiveCodeLength="8929" int_docExpressionCount="811" int_docLength="9016" length="15" offset="7264" startLine="211" starttimestamp="1651619386199" timestamp="1384817">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[thisProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="781" _type="Replace" date="Tue May 03 19:32:51 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8950" docExpressionCount="812" docLength="9037" endLine="213" insertionLength="18" int_docASTNodeCount="1161" int_docActiveCodeLength="8932" int_docExpressionCount="811" int_docLength="9019" length="15" offset="7355" startLine="213" starttimestamp="1651619386199" timestamp="1384833">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[thisProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="782" _type="Replace" date="Tue May 03 19:32:51 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8953" docExpressionCount="812" docLength="9040" endLine="246" insertionLength="18" int_docASTNodeCount="1161" int_docActiveCodeLength="8935" int_docExpressionCount="811" int_docLength="9022" length="15" offset="8104" startLine="246" starttimestamp="1651619386199" timestamp="1384848">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[thisProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="783" _type="Replace" date="Tue May 03 19:32:51 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8953" docExpressionCount="812" docLength="9043" endLine="279" insertionLength="18" int_docASTNodeCount="1162" int_docActiveCodeLength="8953" int_docExpressionCount="812" int_docLength="9025" length="15" offset="8989" startLine="279" starttimestamp="1651619386199" timestamp="1384864">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[thisProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="785" _type="Replace" date="Tue May 03 19:32:52 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8956" docExpressionCount="812" docLength="9046" endLine="67" insertionLength="18" int_docASTNodeCount="1157" int_docActiveCodeLength="8938" int_docExpressionCount="811" int_docLength="9028" length="15" offset="2647" startLine="67" starttimestamp="1651619386199" timestamp="1386747">
    <deletedText><![CDATA[aProposalNumber]]></deletedText>
    <insertedText><![CDATA[thisProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="805" _type="Delete" date="Tue May 03 19:33:11 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8952" docExpressionCount="812" docLength="9017" endLine="83" length="29" offset="3019" startLine="82" starttimestamp="1651619386199" timestamp="1404923">
    <text><![CDATA[		//ServerArgsProcessor.ge;
]]></text>
  </DocumentChange>
  <Command __id="810" _type="PauseCommand" date="Tue May 03 19:33:14 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1408129">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1006]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <DocumentChange __id="809" _type="Delete" date="Tue May 03 19:33:14 EDT 2022" docASTNodeCount="1162" docActiveCodeLength="8950" docExpressionCount="812" docLength="9011" endLine="85" length="6" offset="3081" startLine="85" starttimestamp="1651619386199" timestamp="1408129">
    <text><![CDATA[		//A5]]></text>
  </DocumentChange>
  <Command __id="811" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:33:14 EDT 2022" starttimestamp="1651619386199" timestamp="1408134" />
  <Command __id="812" _type="SelectTextCommand" caretOffset="1588" date="Tue May 03 19:33:15 EDT 2022" end="1593" start="1588" starttimestamp="1651619386199" timestamp="1409123" />
  <Command __id="824" _type="PauseCommand" date="Tue May 03 19:33:41 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1434869">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1083]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="823" _type="CopyCommand" date="Tue May 03 19:33:41 EDT 2022" starttimestamp="1651619386199" timestamp="1434869" />
  <Command __id="826" _type="PauseCommand" date="Tue May 03 19:33:44 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1437913">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3044]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="827" _type="MoveCaretCommand" caretOffset="1588" date="Tue May 03 19:33:44 EDT 2022" docOffset="3263" starttimestamp="1651619386199" timestamp="1438044" />
  <Command __id="829" _type="PauseCommand" date="Tue May 03 19:33:45 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1439049">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1005]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="828" _type="MoveCaretCommand" caretOffset="4614" date="Tue May 03 19:33:45 EDT 2022" docOffset="6289" starttimestamp="1651619386199" timestamp="1439049" />
  <Command __id="831" _type="PauseCommand" date="Tue May 03 19:33:46 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1440532">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1483]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="830" _type="MoveCaretCommand" caretOffset="4607" date="Tue May 03 19:33:46 EDT 2022" docOffset="6282" starttimestamp="1651619386199" timestamp="1440532" />
  <Command __id="833" _type="PauseCommand" date="Tue May 03 19:33:48 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1441893">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1361]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="832" _type="MoveCaretCommand" caretOffset="4208" date="Tue May 03 19:33:48 EDT 2022" docOffset="5883" starttimestamp="1651619386199" timestamp="1441893" />
  <Command __id="834" _type="InsertStringCommand" date="Tue May 03 19:33:48 EDT 2022" starttimestamp="1651619386199" timestamp="1442683" timestamp2="1442683">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="838" _type="PauseCommand" date="Tue May 03 19:33:53 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1447306">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1091]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="837" _type="EclipseCommand" commandID="" date="Tue May 03 19:33:53 EDT 2022" starttimestamp="1651619386199" timestamp="1447306" />
  <Command __id="839" _type="EclipseCommand" commandID="" date="Tue May 03 19:33:53 EDT 2022" starttimestamp="1651619386199" timestamp="1447366" />
  <Command __id="840" _type="MoveCaretCommand" caretOffset="4483" date="Tue May 03 19:33:54 EDT 2022" docOffset="6333" starttimestamp="1651619386199" timestamp="1448106" />
  <Command __id="842" _type="PauseCommand" date="Tue May 03 19:33:56 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1450637">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2531]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="841" _type="ShellCommand" date="Tue May 03 19:33:56 EDT 2022" starttimestamp="1651619386199" timestamp="1450637" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="843" _type="ShellCommand" date="Tue May 03 19:33:57 EDT 2022" starttimestamp="1651619386199" timestamp="1451476" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="845" _type="MoveCaretCommand" caretOffset="5507" date="Tue May 03 19:33:57 EDT 2022" docOffset="7357" starttimestamp="1651619386199" timestamp="1451552" />
  <Command __id="846" _type="MoveCaretCommand" caretOffset="5507" date="Tue May 03 19:33:57 EDT 2022" docOffset="7357" starttimestamp="1651619386199" timestamp="1451578" />
  <Command __id="847" _type="MoveCaretCommand" caretOffset="5510" date="Tue May 03 19:33:58 EDT 2022" docOffset="7360" starttimestamp="1651619386199" timestamp="1451997" />
  <Command __id="848" _type="MoveCaretCommand" caretOffset="5510" date="Tue May 03 19:33:58 EDT 2022" docOffset="7360" starttimestamp="1651619386199" timestamp="1451997" />
  <Command __id="849" _type="MoveCaretCommand" caretOffset="5509" date="Tue May 03 19:33:59 EDT 2022" docOffset="7359" starttimestamp="1651619386199" timestamp="1452979" />
  <Command __id="850" _type="MoveCaretCommand" caretOffset="5509" date="Tue May 03 19:33:59 EDT 2022" docOffset="7359" starttimestamp="1651619386199" timestamp="1452979" />
  <Command __id="852" _type="PauseCommand" date="Tue May 03 19:34:05 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1459758">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6779]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="851" _type="MoveCaretCommand" caretOffset="596" date="Tue May 03 19:34:05 EDT 2022" docOffset="596" starttimestamp="1651619386199" timestamp="1459758" />
  <Command __id="853" _type="MoveCaretCommand" caretOffset="596" date="Tue May 03 19:34:05 EDT 2022" docOffset="596" starttimestamp="1651619386199" timestamp="1459758" />
  <Command __id="854" _type="SelectTextCommand" caretOffset="606" date="Tue May 03 19:34:06 EDT 2022" end="606" start="596" starttimestamp="1651619386199" timestamp="1459997" />
  <Command __id="855" _type="SelectTextCommand" caretOffset="606" date="Tue May 03 19:34:06 EDT 2022" end="606" start="596" starttimestamp="1651619386199" timestamp="1459997" />
  <Command __id="856" _type="SelectTextCommand" caretOffset="609" date="Tue May 03 19:34:06 EDT 2022" end="609" start="574" starttimestamp="1651619386199" timestamp="1460148" />
  <Command __id="857" _type="SelectTextCommand" caretOffset="609" date="Tue May 03 19:34:06 EDT 2022" end="609" start="574" starttimestamp="1651619386199" timestamp="1460148" />
  <Command __id="859" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 19:34:07 EDT 2022" starttimestamp="1651619386199" timestamp="1460998" />
  <Command __id="860" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:34:07 EDT 2022" starttimestamp="1651619386199" timestamp="1461756" />
  <Command __id="861" _type="EclipseCommand" commandID="" date="Tue May 03 19:34:08 EDT 2022" starttimestamp="1651619386199" timestamp="1461844" />
  <Command __id="862" _type="EclipseCommand" commandID="" date="Tue May 03 19:34:08 EDT 2022" starttimestamp="1651619386199" timestamp="1461866" />
  <Command __id="864" _type="PauseCommand" date="Tue May 03 19:34:10 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1464226">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2360]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="865" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:34:10 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1464314" />
  <Command __id="867" _type="PauseCommand" date="Tue May 03 19:34:15 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1469586">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5272]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="866" _type="MoveCaretCommand" caretOffset="3827" date="Tue May 03 19:34:15 EDT 2022" docOffset="5313" starttimestamp="1651619386199" timestamp="1469586" />
  <Command __id="868" _type="SelectTextCommand" caretOffset="3833" date="Tue May 03 19:34:15 EDT 2022" end="3833" start="3818" starttimestamp="1651619386199" timestamp="1469715" />
  <Command __id="870" _type="PauseCommand" date="Tue May 03 19:34:19 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1473523">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[3808]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="871" _type="InsertStringCommand" date="Tue May 03 19:34:19 EDT 2022" starttimestamp="1651619386199" timestamp="1473540" timestamp2="1473540">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="873" _type="InsertStringCommand" date="Tue May 03 19:34:20 EDT 2022" starttimestamp="1651619386199" timestamp="1473970" timestamp2="1473970">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="875" _type="InsertStringCommand" date="Tue May 03 19:34:20 EDT 2022" starttimestamp="1651619386199" timestamp="1474030" timestamp2="1474030">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="877" _type="InsertStringCommand" date="Tue May 03 19:34:20 EDT 2022" starttimestamp="1651619386199" timestamp="1474153" timestamp2="1474153">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="879" _type="InsertStringCommand" date="Tue May 03 19:34:21 EDT 2022" starttimestamp="1651619386199" timestamp="1474932" timestamp2="1474932">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="881" _type="InsertStringCommand" date="Tue May 03 19:34:21 EDT 2022" starttimestamp="1651619386199" timestamp="1475122" timestamp2="1475122">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="883" _type="InsertStringCommand" date="Tue May 03 19:34:21 EDT 2022" starttimestamp="1651619386199" timestamp="1475239" timestamp2="1475239">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="885" _type="InsertStringCommand" date="Tue May 03 19:34:21 EDT 2022" starttimestamp="1651619386199" timestamp="1475432" timestamp2="1475432">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="887" _type="InsertStringCommand" date="Tue May 03 19:34:21 EDT 2022" starttimestamp="1651619386199" timestamp="1475599" timestamp2="1475599">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="889" _type="InsertStringCommand" date="Tue May 03 19:34:21 EDT 2022" starttimestamp="1651619386199" timestamp="1475763" timestamp2="1475763">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="891" _type="InsertStringCommand" date="Tue May 03 19:34:22 EDT 2022" starttimestamp="1651619386199" timestamp="1475884" timestamp2="1475884">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="893" _type="InsertStringCommand" date="Tue May 03 19:34:22 EDT 2022" starttimestamp="1651619386199" timestamp="1476043" timestamp2="1476043">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="895" _type="InsertStringCommand" date="Tue May 03 19:34:23 EDT 2022" starttimestamp="1651619386199" timestamp="1476835" timestamp2="1476835">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="897" _type="InsertStringCommand" date="Tue May 03 19:34:23 EDT 2022" starttimestamp="1651619386199" timestamp="1477046" timestamp2="1477046">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="899" _type="InsertStringCommand" date="Tue May 03 19:34:23 EDT 2022" starttimestamp="1651619386199" timestamp="1477346" timestamp2="1477346">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="901" _type="InsertStringCommand" date="Tue May 03 19:34:23 EDT 2022" starttimestamp="1651619386199" timestamp="1477607" timestamp2="1477607">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="903" _type="InsertStringCommand" date="Tue May 03 19:34:23 EDT 2022" starttimestamp="1651619386199" timestamp="1477666" timestamp2="1477666">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="905" _type="InsertStringCommand" date="Tue May 03 19:34:23 EDT 2022" starttimestamp="1651619386199" timestamp="1477747" timestamp2="1477747">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="907" _type="PauseCommand" date="Tue May 03 19:34:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1479256">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1509]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="906" _type="MoveCaretCommand" caretOffset="3826" date="Tue May 03 19:34:25 EDT 2022" docOffset="5312" starttimestamp="1651619386199" timestamp="1479256" />
  <Command __id="908" _type="SelectTextCommand" caretOffset="3836" date="Tue May 03 19:34:25 EDT 2022" end="3836" start="3818" starttimestamp="1651619386199" timestamp="1479377" />
  <Command __id="909" _type="CopyCommand" date="Tue May 03 19:34:26 EDT 2022" starttimestamp="1651619386199" timestamp="1479912" />
  <Command __id="910" _type="MoveCaretCommand" caretOffset="3766" date="Tue May 03 19:34:26 EDT 2022" docOffset="5252" starttimestamp="1651619386199" timestamp="1480576" />
  <Command __id="911" _type="SelectTextCommand" caretOffset="3772" date="Tue May 03 19:34:26 EDT 2022" end="3772" start="3757" starttimestamp="1651619386199" timestamp="1480721" />
  <Command __id="913" _type="PasteCommand" date="Tue May 03 19:34:27 EDT 2022" starttimestamp="1651619386199" timestamp="1481687" />
  <Command __id="915" _type="PauseCommand" date="Tue May 03 19:34:28 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1482733">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1046]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="914" _type="MoveCaretCommand" caretOffset="3742" date="Tue May 03 19:34:28 EDT 2022" docOffset="5228" starttimestamp="1651619386199" timestamp="1482733" />
  <Command __id="916" _type="SelectTextCommand" caretOffset="3750" date="Tue May 03 19:34:28 EDT 2022" end="3750" start="3735" starttimestamp="1651619386199" timestamp="1482736" />
  <Command __id="918" _type="PasteCommand" date="Tue May 03 19:34:28 EDT 2022" starttimestamp="1651619386199" timestamp="1482751" />
  <Command __id="919" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:34:29 EDT 2022" starttimestamp="1651619386199" timestamp="1483695" />
  <Command __id="920" _type="EclipseCommand" commandID="" date="Tue May 03 19:34:29 EDT 2022" starttimestamp="1651619386199" timestamp="1483782" />
  <Command __id="921" _type="EclipseCommand" commandID="" date="Tue May 03 19:34:30 EDT 2022" starttimestamp="1651619386199" timestamp="1483804" />
  <Command __id="923" _type="PauseCommand" date="Tue May 03 19:34:32 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1486779">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2975]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="922" _type="MoveCaretCommand" caretOffset="4378" date="Tue May 03 19:34:32 EDT 2022" docOffset="5864" starttimestamp="1651619386199" timestamp="1486779" />
  <Command __id="924" _type="SelectTextCommand" caretOffset="4383" date="Tue May 03 19:34:33 EDT 2022" end="4383" start="4368" starttimestamp="1651619386199" timestamp="1486911" />
  <Command __id="926" _type="PasteCommand" date="Tue May 03 19:34:33 EDT 2022" starttimestamp="1651619386199" timestamp="1487504" />
  <Command __id="927" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:34:34 EDT 2022" starttimestamp="1651619386199" timestamp="1488040" />
  <Command __id="928" _type="EclipseCommand" commandID="" date="Tue May 03 19:34:34 EDT 2022" starttimestamp="1651619386199" timestamp="1488128" />
  <Command __id="929" _type="EclipseCommand" commandID="" date="Tue May 03 19:34:34 EDT 2022" starttimestamp="1651619386199" timestamp="1488151" />
  <Command __id="931" _type="PauseCommand" date="Tue May 03 19:34:41 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1495242">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7091]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="930" _type="SelectTextCommand" caretOffset="5054" date="Tue May 03 19:34:41 EDT 2022" end="5171" start="5054" starttimestamp="1651619386199" timestamp="1495242" />
  <Command __id="933" _type="PauseCommand" date="Tue May 03 19:34:43 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1497353">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2111]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="932" _type="MoveCaretCommand" caretOffset="5237" date="Tue May 03 19:34:43 EDT 2022" docOffset="6723" starttimestamp="1651619386199" timestamp="1497353" />
  <Command __id="934" _type="SelectTextCommand" caretOffset="5240" date="Tue May 03 19:34:43 EDT 2022" end="5240" start="5236" starttimestamp="1651619386199" timestamp="1497550" />
  <Command __id="935" _type="SelectTextCommand" caretOffset="5264" date="Tue May 03 19:34:43 EDT 2022" end="5264" start="5226" starttimestamp="1651619386199" timestamp="1497704" />
  <Command __id="937" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:34:44 EDT 2022" starttimestamp="1651619386199" timestamp="1498362" />
  <Command __id="939" _type="PauseCommand" date="Tue May 03 19:34:56 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1510002">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11640]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="938" _type="SelectTextCommand" caretOffset="5171" date="Tue May 03 19:34:56 EDT 2022" end="5171" start="5054" starttimestamp="1651619386199" timestamp="1510002" />
  <Command __id="941" _type="PauseCommand" date="Tue May 03 19:34:57 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1511013">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="940" _type="MoveCaretCommand" caretOffset="5165" date="Tue May 03 19:34:57 EDT 2022" docOffset="6651" starttimestamp="1651619386199" timestamp="1511013" />
  <Command __id="943" _type="PauseCommand" date="Tue May 03 19:34:58 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1512134">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1121]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="942" _type="ConsoleOutput" date="Tue May 03 19:34:58 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1512134" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112571
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 800  turning tracing off¶Number of traces > 800  turning tracing off"), Diff(INSERT,"Test execution time (ms):112571"), Diff(EQUAL,"¶Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="945" _type="PauseCommand" date="Tue May 03 19:35:00 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1513904">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1770]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="944" _type="ShellCommand" date="Tue May 03 19:35:00 EDT 2022" starttimestamp="1651619386199" timestamp="1513904" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="946" _type="ShellCommand" date="Tue May 03 19:35:01 EDT 2022" starttimestamp="1651619386199" timestamp="1514820" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="948" _type="PauseCommand" date="Tue May 03 19:35:04 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1517869">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3049]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="947" _type="SelectTextCommand" caretOffset="5333" date="Tue May 03 19:35:04 EDT 2022" end="5333" start="5299" starttimestamp="1651619386199" timestamp="1517869" />
  <Command __id="950" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:35:04 EDT 2022" starttimestamp="1651619386199" timestamp="1518392" />
  <Command __id="952" _type="PauseCommand" date="Tue May 03 19:35:11 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1525390">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6998]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="951" _type="SelectTextCommand" caretOffset="1362" date="Tue May 03 19:35:11 EDT 2022" end="1601" start="1362" starttimestamp="1651619386199" timestamp="1525390" />
  <Command __id="954" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:35:12 EDT 2022" starttimestamp="1651619386199" timestamp="1525993" />
  <Command __id="956" _type="PauseCommand" date="Tue May 03 19:35:13 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1527401">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1408]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="955" _type="SelectTextCommand" caretOffset="1298" date="Tue May 03 19:35:13 EDT 2022" end="1333" start="1298" starttimestamp="1651619386199" timestamp="1527401" />
  <Command __id="958" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:35:13 EDT 2022" starttimestamp="1651619386199" timestamp="1527484" />
  <Command __id="960" _type="PauseCommand" date="Tue May 03 19:35:14 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1528759">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1275]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="959" _type="SelectTextCommand" caretOffset="1222" date="Tue May 03 19:35:14 EDT 2022" end="1254" start="1222" starttimestamp="1651619386199" timestamp="1528759" />
  <Command __id="962" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:35:15 EDT 2022" starttimestamp="1651619386199" timestamp="1528841" />
  <Command __id="964" _type="PauseCommand" date="Tue May 03 19:35:17 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1531128">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2287]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="963" _type="SelectTextCommand" caretOffset="1144" date="Tue May 03 19:35:17 EDT 2022" end="1179" start="1144" starttimestamp="1651619386199" timestamp="1531128" />
  <Command __id="966" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:35:17 EDT 2022" starttimestamp="1651619386199" timestamp="1531191" />
  <Command __id="972" _type="PauseCommand" date="Tue May 03 19:35:20 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1534620">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2199]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="973" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:35:20 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1534782" />
  <Command __id="974" _type="ConsoleOutput" date="Tue May 03 19:35:20 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1534783" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22567
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"112571¶Number of traces > 800  turning tracing off"), Diff(INSERT,"22567"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="976" _type="PauseCommand" date="Tue May 03 19:35:24 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1538686">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3903]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="977" _type="SelectTextCommand" caretOffset="2602" date="Tue May 03 19:35:25 EDT 2022" end="2602" start="2200" starttimestamp="1651619386199" timestamp="1538863" />
  <Command __id="978" _type="MoveCaretCommand" caretOffset="2403" date="Tue May 03 19:35:25 EDT 2022" docOffset="4463" starttimestamp="1651619386199" timestamp="1539528" />
  <Command __id="980" _type="PauseCommand" date="Tue May 03 19:35:34 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1547817">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8289]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="979" _type="MoveCaretCommand" caretOffset="12461" date="Tue May 03 19:35:34 EDT 2022" docOffset="12461" starttimestamp="1651619386199" timestamp="1547817" />
  <Command __id="981" _type="SelectTextCommand" caretOffset="12471" date="Tue May 03 19:35:34 EDT 2022" end="12471" start="12456" starttimestamp="1651619386199" timestamp="1547949" />
  <Command __id="983" _type="InsertStringCommand" date="Tue May 03 19:35:34 EDT 2022" starttimestamp="1651619386199" timestamp="1548733" timestamp2="1548733">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="985" _type="InsertStringCommand" date="Tue May 03 19:35:35 EDT 2022" starttimestamp="1651619386199" timestamp="1548866" timestamp2="1548866">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="987" _type="InsertStringCommand" date="Tue May 03 19:35:35 EDT 2022" starttimestamp="1651619386199" timestamp="1548937" timestamp2="1548937">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="989" _type="InsertStringCommand" date="Tue May 03 19:35:35 EDT 2022" starttimestamp="1651619386199" timestamp="1549506" timestamp2="1549506">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="991" _type="InsertStringCommand" date="Tue May 03 19:35:36 EDT 2022" starttimestamp="1651619386199" timestamp="1550109" timestamp2="1550109">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="993" _type="InsertStringCommand" date="Tue May 03 19:35:36 EDT 2022" starttimestamp="1651619386199" timestamp="1550289" timestamp2="1550289">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="995" _type="InsertStringCommand" date="Tue May 03 19:35:36 EDT 2022" starttimestamp="1651619386199" timestamp="1550386" timestamp2="1550386">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="997" _type="InsertStringCommand" date="Tue May 03 19:35:36 EDT 2022" starttimestamp="1651619386199" timestamp="1550560" timestamp2="1550560">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="999" _type="InsertStringCommand" date="Tue May 03 19:35:36 EDT 2022" starttimestamp="1651619386199" timestamp="1550770" timestamp2="1550770">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1001" _type="InsertStringCommand" date="Tue May 03 19:35:37 EDT 2022" starttimestamp="1651619386199" timestamp="1550941" timestamp2="1550941">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1003" _type="InsertStringCommand" date="Tue May 03 19:35:37 EDT 2022" starttimestamp="1651619386199" timestamp="1551035" timestamp2="1551035">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1005" _type="InsertStringCommand" date="Tue May 03 19:35:37 EDT 2022" starttimestamp="1651619386199" timestamp="1551145" timestamp2="1551145">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1007" _type="InsertStringCommand" date="Tue May 03 19:35:37 EDT 2022" starttimestamp="1651619386199" timestamp="1551738" timestamp2="1551738">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1009" _type="InsertStringCommand" date="Tue May 03 19:35:38 EDT 2022" starttimestamp="1651619386199" timestamp="1551927" timestamp2="1551927">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1011" _type="InsertStringCommand" date="Tue May 03 19:35:38 EDT 2022" starttimestamp="1651619386199" timestamp="1552118" timestamp2="1552118">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1013" _type="InsertStringCommand" date="Tue May 03 19:35:38 EDT 2022" starttimestamp="1651619386199" timestamp="1552368" timestamp2="1552368">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="1015" _type="InsertStringCommand" date="Tue May 03 19:35:38 EDT 2022" starttimestamp="1651619386199" timestamp="1552430" timestamp2="1552430">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1017" _type="InsertStringCommand" date="Tue May 03 19:35:38 EDT 2022" starttimestamp="1651619386199" timestamp="1552529" timestamp2="1552529">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1018" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:35:39 EDT 2022" starttimestamp="1651619386199" timestamp="1553465" />
  <Command __id="1019" _type="EclipseCommand" commandID="" date="Tue May 03 19:35:39 EDT 2022" starttimestamp="1651619386199" timestamp="1553553" />
  <Command __id="1020" _type="EclipseCommand" commandID="" date="Tue May 03 19:35:39 EDT 2022" starttimestamp="1651619386199" timestamp="1553577" />
  <Command __id="1026" _type="PauseCommand" date="Tue May 03 19:35:51 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1564934">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[6920]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1025" _type="SelectTextCommand" caretOffset="406" date="Tue May 03 19:35:51 EDT 2022" end="406" start="264" starttimestamp="1651619386199" timestamp="1564934" />
  <Command __id="1030" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 19:35:52 EDT 2022" starttimestamp="1651619386199" timestamp="1565814" />
  <Command __id="1031" _type="CopyCommand" date="Tue May 03 19:35:52 EDT 2022" starttimestamp="1651619386199" timestamp="1566606" />
  <Command __id="1035" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 19:35:52 EDT 2022" starttimestamp="1651619386199" timestamp="1566632" />
  <Command __id="1036" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:35:53 EDT 2022" starttimestamp="1651619386199" timestamp="1567244" />
  <Command __id="1037" _type="EclipseCommand" commandID="" date="Tue May 03 19:35:53 EDT 2022" starttimestamp="1651619386199" timestamp="1567331" />
  <Command __id="1038" _type="EclipseCommand" commandID="" date="Tue May 03 19:35:53 EDT 2022" starttimestamp="1651619386199" timestamp="1567354" />
  <Command __id="1040" _type="PauseCommand" date="Tue May 03 19:35:54 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1568584">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1230]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1041" _type="MoveCaretCommand" caretOffset="12474" date="Tue May 03 19:35:54 EDT 2022" docOffset="12474" starttimestamp="1651619386199" timestamp="1568745" />
  <Command __id="1043" _type="PauseCommand" date="Tue May 03 19:35:57 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1571353">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2608]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1044" _type="MoveCaretCommand" caretOffset="1354" date="Tue May 03 19:35:57 EDT 2022" docOffset="1784" starttimestamp="1651619386199" timestamp="1571595" />
  <Command __id="1046" _type="PauseCommand" date="Tue May 03 19:36:03 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1576857">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5262]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1045" _type="MoveCaretCommand" caretOffset="688" date="Tue May 03 19:36:03 EDT 2022" docOffset="1118" starttimestamp="1651619386199" timestamp="1576857" />
  <Command __id="1048" _type="PasteCommand" date="Tue May 03 19:36:04 EDT 2022" starttimestamp="1651619386199" timestamp="1577847" />
  <Command __id="1049" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:36:04 EDT 2022" starttimestamp="1651619386199" timestamp="1578743" />
  <Command __id="1050" _type="EclipseCommand" commandID="" date="Tue May 03 19:36:05 EDT 2022" starttimestamp="1651619386199" timestamp="1578833" />
  <Command __id="1051" _type="EclipseCommand" commandID="" date="Tue May 03 19:36:05 EDT 2022" starttimestamp="1651619386199" timestamp="1578848" />
  <Command __id="1053" _type="UndoCommand" date="Tue May 03 19:36:05 EDT 2022" starttimestamp="1651619386199" timestamp="1579695" />
  <Command __id="1054" _type="ConsoleOutput" date="Tue May 03 19:36:06 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1579848" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22565
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2256"), Diff(DELETE,"9"), Diff(INSERT,"5"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1056" _type="PauseCommand" date="Tue May 03 19:36:07 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1581409">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1561]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1055" _type="MoveCaretCommand" caretOffset="325" date="Tue May 03 19:36:07 EDT 2022" docOffset="755" starttimestamp="1651619386199" timestamp="1581409" />
  <Command __id="1058" _type="PasteCommand" date="Tue May 03 19:36:08 EDT 2022" starttimestamp="1651619386199" timestamp="1582014" />
  <Command __id="1059" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:36:08 EDT 2022" starttimestamp="1651619386199" timestamp="1582659" />
  <Command __id="1060" _type="EclipseCommand" commandID="" date="Tue May 03 19:36:08 EDT 2022" starttimestamp="1651619386199" timestamp="1582746" />
  <Command __id="1061" _type="EclipseCommand" commandID="" date="Tue May 03 19:36:09 EDT 2022" starttimestamp="1651619386199" timestamp="1582827" />
  <Command __id="1063" _type="PauseCommand" date="Tue May 03 19:36:17 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1591621">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[8794]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1064" _type="UndoCommand" date="Tue May 03 19:36:17 EDT 2022" starttimestamp="1651619386199" timestamp="1591632" />
  <Command __id="1066" _type="PauseCommand" date="Tue May 03 19:36:19 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1593533">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1901]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1067" _type="PasteCommand" date="Tue May 03 19:36:19 EDT 2022" starttimestamp="1651619386199" timestamp="1593541" />
  <Command __id="1069" _type="PauseCommand" date="Tue May 03 19:36:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1594927">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1386]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1068" _type="SelectTextCommand" caretOffset="325" date="Tue May 03 19:36:21 EDT 2022" end="468" start="325" starttimestamp="1651619386199" timestamp="1594927" />
  <Command __id="1073" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 19:36:21 EDT 2022" starttimestamp="1651619386199" timestamp="1595477" />
  <Command __id="1074" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:36:22 EDT 2022" starttimestamp="1651619386199" timestamp="1596058" />
  <Command __id="1075" _type="EclipseCommand" commandID="" date="Tue May 03 19:36:22 EDT 2022" starttimestamp="1651619386199" timestamp="1596196" />
  <Command __id="1076" _type="EclipseCommand" commandID="" date="Tue May 03 19:36:22 EDT 2022" starttimestamp="1651619386199" timestamp="1596244" />
  <Command __id="1077" _type="MoveCaretCommand" caretOffset="425" date="Tue May 03 19:36:22 EDT 2022" docOffset="855" starttimestamp="1651619386199" timestamp="1596759" />
  <Command __id="1079" _type="PauseCommand" date="Tue May 03 19:36:31 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1604823">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[8064]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1078" _type="ShellCommand" date="Tue May 03 19:36:31 EDT 2022" starttimestamp="1651619386199" timestamp="1604823" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1080" _type="ShellCommand" date="Tue May 03 19:36:32 EDT 2022" starttimestamp="1651619386199" timestamp="1605812" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1082" _type="PauseCommand" date="Tue May 03 19:36:50 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1624585">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[18773]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1081" _type="ShellCommand" date="Tue May 03 19:36:50 EDT 2022" starttimestamp="1651619386199" timestamp="1624585" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1084" _type="PauseCommand" date="Tue May 03 19:37:08 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1641895">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[17310]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1083" _type="ShellCommand" date="Tue May 03 19:37:08 EDT 2022" starttimestamp="1651619386199" timestamp="1641895" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1086" _type="PauseCommand" date="Tue May 03 19:37:11 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1645183">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3288]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1085" _type="ShellCommand" date="Tue May 03 19:37:11 EDT 2022" starttimestamp="1651619386199" timestamp="1645183" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1088" _type="PauseCommand" date="Tue May 03 19:37:33 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="1667430">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[22247]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1087" _type="ShellCommand" date="Tue May 03 19:37:33 EDT 2022" starttimestamp="1651619386199" timestamp="1667430" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1090" _type="PauseCommand" date="Tue May 03 19:37:35 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1669050">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1620]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1089" _type="ShellCommand" date="Tue May 03 19:37:35 EDT 2022" starttimestamp="1651619386199" timestamp="1669050" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1092" _type="PauseCommand" date="Tue May 03 19:37:58 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="1692429">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23379]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1091" _type="ConsoleOutput" date="Tue May 03 19:37:58 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1692429" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Client 0 connecting with NIO, no line found matching regex: .*?(\{main\}.*?AddedPropertyChangeListener.*?@|\{.*?[sS][eE][lL][eE][cC][tT].*?\}.*?AddedPropertyChangeListener.*?@).*%0.0

Test execution time (ms):112573
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22565"), Diff(INSERT,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Client 0 connecting with NIO, no line found matching regex: .*?(\{main\}.*?AddedPropertyChangeListener.*?@|\{.*?[sS][eE][lL][eE][cC][tT].*?\}.*?AddedPropertyChangeListener.*?@).*%0.0¶¶Test execution time (ms):112573¶Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1094" _type="PauseCommand" date="Tue May 03 19:39:19 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="1773215">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[80786]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1093" _type="ConsoleOutput" date="Tue May 03 19:39:19 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="1773215" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@2f51ed99 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Client 0 connecting with NIO, no line found matching regex: .*?(\{main\}.*?AddedPropertyChangeListener.*?@|\{.*?[sS][eE][lL][eE][cC][tT].*?\}.*?AddedPropertyChangeListener.*?@).*%0.0¶¶Test execution time (ms):112573¶Number of traces > 800  turning tracing off"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@2f51ed99 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1096" _type="PauseCommand" date="Tue May 03 19:39:28 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1782516">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[9301]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1095" _type="ShellCommand" date="Tue May 03 19:39:28 EDT 2022" starttimestamp="1651619386199" timestamp="1782516" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1098" _type="PauseCommand" date="Tue May 03 19:39:31 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1784951">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2435]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1097" _type="ShellCommand" date="Tue May 03 19:39:31 EDT 2022" starttimestamp="1651619386199" timestamp="1784951" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1100" _type="PauseCommand" date="Tue May 03 19:39:43 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1797720">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12769]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1099" _type="ShellCommand" date="Tue May 03 19:39:43 EDT 2022" starttimestamp="1651619386199" timestamp="1797720" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1101" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:39:44 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1797859" type="Run" />
  <Command __id="1102" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:39:44 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1797859" type="Run" />
  <Command __id="1104" _type="PauseCommand" date="Tue May 03 19:40:06 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="1820799">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[22940]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1103" _type="MoveCaretCommand" caretOffset="598" date="Tue May 03 19:40:06 EDT 2022" docOffset="1028" starttimestamp="1651619386199" timestamp="1820799" />
  <Command __id="1105" _type="SelectTextCommand" caretOffset="602" date="Tue May 03 19:40:07 EDT 2022" end="602" start="595" starttimestamp="1651619386199" timestamp="1820939" />
  <Command __id="1107" _type="PauseCommand" date="Tue May 03 19:40:13 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1827578">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[6639]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1108" _type="MoveCaretCommand" caretOffset="1144" date="Tue May 03 19:40:13 EDT 2022" docOffset="2630" starttimestamp="1651619386199" timestamp="1827687" />
  <Command __id="1110" _type="PauseCommand" date="Tue May 03 19:40:19 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1832801">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[5114]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1111" _type="SelectTextCommand" caretOffset="602" date="Tue May 03 19:40:19 EDT 2022" end="602" start="595" starttimestamp="1651619386199" timestamp="1833066" />
  <Command __id="1113" _type="PauseCommand" date="Tue May 03 19:40:24 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1838395">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5329]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1112" _type="MoveCaretCommand" caretOffset="1068" date="Tue May 03 19:40:24 EDT 2022" docOffset="1498" starttimestamp="1651619386199" timestamp="1838395" />
  <Command __id="1114" _type="SelectTextCommand" caretOffset="1075" date="Tue May 03 19:40:24 EDT 2022" end="1075" start="1064" starttimestamp="1651619386199" timestamp="1838479" />
  <Command __id="1116" _type="PauseCommand" date="Tue May 03 19:40:30 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1844326">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[5847]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1115" _type="MoveCaretCommand" caretOffset="1152" date="Tue May 03 19:40:30 EDT 2022" docOffset="1582" starttimestamp="1651619386199" timestamp="1844326" />
  <Command __id="1117" _type="SelectTextCommand" caretOffset="1160" date="Tue May 03 19:40:30 EDT 2022" end="1160" start="1145" starttimestamp="1651619386199" timestamp="1844470" />
  <Command __id="1119" _type="PauseCommand" date="Tue May 03 19:40:40 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1854255">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[9785]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1118" _type="CopyCommand" date="Tue May 03 19:40:40 EDT 2022" starttimestamp="1651619386199" timestamp="1854255" />
  <Command __id="1121" _type="PauseCommand" date="Tue May 03 19:40:41 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1855580">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1325]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1122" _type="MoveCaretCommand" caretOffset="403" date="Tue May 03 19:40:41 EDT 2022" docOffset="438" starttimestamp="1651619386199" timestamp="1855743" />
  <Command __id="1124" _type="ShellCommand" date="Tue May 03 19:40:42 EDT 2022" starttimestamp="1651619386199" timestamp="1856725" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1126" _type="PauseCommand" date="Tue May 03 19:40:49 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1862834">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6109]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1125" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:40:49 EDT 2022" forward="false" matchWord="false" offset="438" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1862834" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1128" _type="PauseCommand" date="Tue May 03 19:40:51 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1864868">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2034]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1127" _type="CopyCommand" date="Tue May 03 19:40:51 EDT 2022" starttimestamp="1651619386199" timestamp="1864868" />
  <Command __id="1130" _type="PauseCommand" date="Tue May 03 19:40:52 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1866392">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[1524]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1129" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:40:52 EDT 2022" forward="true" matchWord="false" offset="438" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1866392" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1131" _type="ShellCommand" date="Tue May 03 19:40:53 EDT 2022" starttimestamp="1651619386199" timestamp="1867165" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1133" _type="MoveCaretCommand" caretOffset="12474" date="Tue May 03 19:40:54 EDT 2022" docOffset="12474" starttimestamp="1651619386199" timestamp="1868201" />
  <Command __id="1135" _type="ShellCommand" date="Tue May 03 19:40:54 EDT 2022" starttimestamp="1651619386199" timestamp="1868477" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1136" _type="PasteCommand" date="Tue May 03 19:40:54 EDT 2022" starttimestamp="1651619386199" timestamp="1868674" />
  <Command __id="1137" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:40:55 EDT 2022" forward="true" matchWord="false" offset="12474" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1869464" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1138" _type="ShellCommand" date="Tue May 03 19:40:56 EDT 2022" starttimestamp="1651619386199" timestamp="1870326" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1140" _type="PauseCommand" date="Tue May 03 19:40:57 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1871388">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1062]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1141" _type="MoveCaretCommand" caretOffset="173" date="Tue May 03 19:40:57 EDT 2022" docOffset="522" starttimestamp="1651619386199" timestamp="1871561" />
  <Command __id="1143" _type="ShellCommand" date="Tue May 03 19:40:58 EDT 2022" starttimestamp="1651619386199" timestamp="1871850" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1144" _type="PasteCommand" date="Tue May 03 19:40:58 EDT 2022" starttimestamp="1651619386199" timestamp="1872058" />
  <Command __id="1145" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:40:59 EDT 2022" forward="true" matchWord="false" offset="522" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1872958" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1147" _type="PauseCommand" date="Tue May 03 19:41:00 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1874210">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1251]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1146" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:00 EDT 2022" forward="false" matchWord="false" offset="522" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1874209" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1148" _type="ShellCommand" date="Tue May 03 19:41:01 EDT 2022" starttimestamp="1651619386199" timestamp="1874819" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1150" _type="PauseCommand" date="Tue May 03 19:41:02 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1876121">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1302]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1149" _type="MoveCaretCommand" caretOffset="336" date="Tue May 03 19:41:02 EDT 2022" docOffset="685" starttimestamp="1651619386199" timestamp="1876121" />
  <Command __id="1152" _type="ShellCommand" date="Tue May 03 19:41:02 EDT 2022" starttimestamp="1651619386199" timestamp="1876445" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1154" _type="PauseCommand" date="Tue May 03 19:41:03 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1877682">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1237]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="1153" _type="PasteCommand" date="Tue May 03 19:41:03 EDT 2022" starttimestamp="1651619386199" timestamp="1877682" />
  <Command __id="1156" _type="PauseCommand" date="Tue May 03 19:41:05 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1879111">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1429]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1155" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:05 EDT 2022" forward="true" matchWord="false" offset="685" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1879111" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1157" _type="ShellCommand" date="Tue May 03 19:41:05 EDT 2022" starttimestamp="1651619386199" timestamp="1879752" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1159" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:41:07 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1880945" />
  <Command __id="1161" _type="ShellCommand" date="Tue May 03 19:41:07 EDT 2022" starttimestamp="1651619386199" timestamp="1881451" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1162" _type="PasteCommand" date="Tue May 03 19:41:07 EDT 2022" starttimestamp="1651619386199" timestamp="1881615" />
  <Command __id="1164" _type="PauseCommand" date="Tue May 03 19:41:08 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1882647">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1032]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1163" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:08 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1882647" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1165" _type="ShellCommand" date="Tue May 03 19:41:09 EDT 2022" starttimestamp="1651619386199" timestamp="1883408" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1167" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:41:10 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="1884587" />
  <Command __id="1169" _type="ShellCommand" date="Tue May 03 19:41:11 EDT 2022" starttimestamp="1651619386199" timestamp="1884942" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1170" _type="PasteCommand" date="Tue May 03 19:41:11 EDT 2022" starttimestamp="1651619386199" timestamp="1885139" />
  <Command __id="1171" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:12 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1885948" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1172" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:13 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1886936" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1173" _type="ShellCommand" date="Tue May 03 19:41:13 EDT 2022" starttimestamp="1651619386199" timestamp="1887620" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1175" _type="SelectTextCommand" caretOffset="1160" date="Tue May 03 19:41:14 EDT 2022" end="1160" start="1145" starttimestamp="1651619386199" timestamp="1888700" />
  <Command __id="1177" _type="ShellCommand" date="Tue May 03 19:41:15 EDT 2022" starttimestamp="1651619386199" timestamp="1888963" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1178" _type="PasteCommand" date="Tue May 03 19:41:15 EDT 2022" starttimestamp="1651619386199" timestamp="1889122" />
  <Command __id="1180" _type="PauseCommand" date="Tue May 03 19:41:16 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1890199">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1077]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1179" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:16 EDT 2022" forward="false" matchWord="false" offset="1590" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1890199" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1182" _type="PauseCommand" date="Tue May 03 19:41:18 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1892568">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2369]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="1181" _type="PasteCommand" date="Tue May 03 19:41:18 EDT 2022" starttimestamp="1651619386199" timestamp="1892568" />
  <Command __id="1184" _type="PauseCommand" date="Tue May 03 19:41:21 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1894997">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2428]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1183" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:21 EDT 2022" forward="true" matchWord="false" offset="1590" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1894996" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[thisProposalNumber]]></replaceString>
  </Command>
  <Command __id="1185" _type="ShellCommand" date="Tue May 03 19:41:21 EDT 2022" starttimestamp="1651619386199" timestamp="1895729" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1187" _type="SelectTextCommand" caretOffset="611" date="Tue May 03 19:41:22 EDT 2022" end="611" start="574" starttimestamp="1651619386199" timestamp="1896719" />
  <Command __id="1189" _type="PasteCommand" date="Tue May 03 19:41:23 EDT 2022" starttimestamp="1651619386199" timestamp="1897546" />
  <Command __id="1191" _type="PauseCommand" date="Tue May 03 19:41:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1899052">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1506]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1192" _type="UndoCommand" date="Tue May 03 19:41:25 EDT 2022" starttimestamp="1651619386199" timestamp="1899077" />
  <Command __id="1195" _type="PauseCommand" date="Tue May 03 19:41:27 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1901242">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2165]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1194" _type="ShellCommand" date="Tue May 03 19:41:27 EDT 2022" starttimestamp="1651619386199" timestamp="1901242" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1197" _type="PauseCommand" date="Tue May 03 19:41:29 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1903148">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1906]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="1196" _type="PasteCommand" date="Tue May 03 19:41:29 EDT 2022" starttimestamp="1651619386199" timestamp="1903148" />
  <Command __id="1199" _type="PauseCommand" date="Tue May 03 19:41:30 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1904274">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1126]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1198" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:30 EDT 2022" forward="true" matchWord="false" offset="574" regexp="false" replaceAll="false" selection="Find" selectionScope="true" starttimestamp="1651619386199" timestamp="1904274" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1201" _type="PauseCommand" date="Tue May 03 19:41:31 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1905514">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1240]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1200" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:31 EDT 2022" forward="false" matchWord="false" offset="574" regexp="false" replaceAll="false" selection="Find" selectionScope="true" starttimestamp="1651619386199" timestamp="1905514" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1202" _type="ShellCommand" date="Tue May 03 19:41:32 EDT 2022" starttimestamp="1651619386199" timestamp="1906227" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1204" _type="MoveCaretCommand" caretOffset="1144" date="Tue May 03 19:41:33 EDT 2022" docOffset="2630" starttimestamp="1651619386199" timestamp="1907501" />
  <Command __id="1206" _type="ShellCommand" date="Tue May 03 19:41:34 EDT 2022" starttimestamp="1651619386199" timestamp="1908163" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1207" _type="PasteCommand" date="Tue May 03 19:41:34 EDT 2022" starttimestamp="1651619386199" timestamp="1908521" />
  <Command __id="1209" _type="PauseCommand" date="Tue May 03 19:41:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1909854">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1332]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1208" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:36 EDT 2022" forward="false" matchWord="false" offset="2630" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1909853" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1211" _type="PauseCommand" date="Tue May 03 19:41:37 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1911538">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1685]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1210" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:37 EDT 2022" forward="true" matchWord="false" offset="2630" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1911538" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1213" _type="PauseCommand" date="Tue May 03 19:41:40 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1913977">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2439]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1212" _type="ShellCommand" date="Tue May 03 19:41:40 EDT 2022" starttimestamp="1651619386199" timestamp="1913977" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1215" _type="PauseCommand" date="Tue May 03 19:41:41 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1915385">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1408]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1214" _type="MoveCaretCommand" caretOffset="3402" date="Tue May 03 19:41:41 EDT 2022" docOffset="4888" starttimestamp="1651619386199" timestamp="1915385" />
  <Command __id="1216" _type="SelectTextCommand" caretOffset="3412" date="Tue May 03 19:41:41 EDT 2022" end="3412" start="3394" starttimestamp="1651619386199" timestamp="1915521" />
  <Command __id="1217" _type="CopyCommand" date="Tue May 03 19:41:42 EDT 2022" starttimestamp="1651619386199" timestamp="1916382" />
  <Command __id="1219" _type="ShellCommand" date="Tue May 03 19:41:42 EDT 2022" starttimestamp="1651619386199" timestamp="1916642" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1221" _type="PauseCommand" date="Tue May 03 19:41:50 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1924504">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7862]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1220" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:50 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1924504" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[aProposalNumber]]></replaceString>
  </Command>
  <DocumentChange __id="1029" _type="Insert" date="Tue May 03 19:35:52 EDT 2022" docASTNodeCount="723" docActiveCodeLength="5284" docExpressionCount="548" docLength="5686" length="2" offset="1703" starttimestamp="1651619386199" timestamp="1565805">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1032" _type="Delete" date="Tue May 03 19:35:52 EDT 2022" docASTNodeCount="733" docActiveCodeLength="5352" docExpressionCount="552" docLength="5684" endLine="38" length="2" offset="1590" startLine="38" starttimestamp="1651619386199" timestamp="1566616">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1033" _type="Delete" date="Tue May 03 19:35:52 EDT 2022" docASTNodeCount="742" docActiveCodeLength="5389" docExpressionCount="555" docLength="5682" endLine="39" length="2" offset="1660" startLine="39" starttimestamp="1651619386199" timestamp="1566619">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <DocumentChange __id="1034" _type="Delete" date="Tue May 03 19:35:52 EDT 2022" docASTNodeCount="748" docActiveCodeLength="5423" docExpressionCount="557" docLength="5680" endLine="40" length="2" offset="1699" startLine="40" starttimestamp="1651619386199" timestamp="1566620">
    <text><![CDATA[//]]></text>
  </DocumentChange>
  <Command __id="1039" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:35:54 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12546" docExpressionCount="1106" docLength="15125" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1568584">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigurer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super."), Diff(DELETE,"a"), Diff(INSERT,"this"), Diff(EQUAL,"ProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}


	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.thisProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <Command __id="1042" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:35:57 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1820" docExpressionCount="152" docLength="2142" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1571353">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientInterfaceGipc thatClient;¶¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean thisNio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶"), Diff(DELETE,"		"), Diff(INSERT,"¶//	        this.setTracing();¶//	        super.init(arguments);¶//	        ¶//	        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//	        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//	        ¶//	        this.locateGIPCRegistry(port, hostName);¶//	        this.lookupGIPCServerProxy();¶	//"), Diff(EQUAL,"¶	}¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientOutCoupler implements PropertyChangeListener{
	String oldName;
	
	ServerRemoteInterfaceGIPC watcherServer;
	ClientInterfaceGipc thatClient;

	
	int aProposalNumber = 0;
	boolean nio = false;
	@Override
	public void propertyChange(final PropertyChangeEvent anEvent) {
	
		if (!anEvent.getPropertyName().equals("InputString")) {
			return;
		}
		
		final String thisCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, thisCommand);
		if (nio) {
			return;
		}
		
		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();
		placeHolder.getIPCMechanism();
		
		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);
		try {
			
			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}
	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean thisNio) {
		watcherServer = anwatcherServer;
		thatClient = aClient;
		oldName = aClientName;
		

//	        this.setTracing();
//	        super.init(arguments);
//	        
//	        String hostName = ClientArgsProcessor.getServerHost(arguments);
//	        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//	        
//	        this.locateGIPCRegistry(port, hostName);
//	        this.lookupGIPCServerProxy();
	//
	}
	
	

}
]]></snapshot>
  </Command>
  <DocumentChange __id="1047" _type="Replace" date="Tue May 03 19:36:04 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1891" docExpressionCount="156" docLength="2290" endLine="37" insertionLength="150" int_docASTNodeCount="234" int_docActiveCodeLength="1818" int_docExpressionCount="152" int_docLength="2140" length="2" offset="1116" startLine="37" starttimestamp="1651619386199" timestamp="1577838">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		private static ServerInterface thisServer = new RMIAndGIPCServer();
//	    private List<GIPCClient> clients;
//	    private GIPCRegistry registry;]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1052" _type="Replace" date="Tue May 03 19:36:05 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1820" docExpressionCount="152" docLength="2142" endLine="39" insertionLength="2" int_docASTNodeCount="234" int_docActiveCodeLength="1818" int_docExpressionCount="152" int_docLength="2140" length="150" offset="1116" startLine="37" starttimestamp="1651619386199" timestamp="1579683">
    <deletedText><![CDATA[		private static ServerInterface thisServer = new RMIAndGIPCServer();
//	    private List<GIPCClient> clients;
//	    private GIPCRegistry registry;]]></deletedText>
    <insertedText><![CDATA[		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1057" _type="Insert" date="Tue May 03 19:36:08 EDT 2022" docASTNodeCount="244" docActiveCodeLength="1892" docExpressionCount="156" docLength="2285" length="143" offset="755" starttimestamp="1651619386199" timestamp="1582006">
    <text><![CDATA[	private static ServerInterface thisServer = new RMIAndGIPCServer();
//  private List<GIPCClient> clients;
//  private GIPCRegistry registry;]]></text>
  </DocumentChange>
  <DocumentChange __id="1062" _type="Delete" date="Tue May 03 19:36:17 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1820" docExpressionCount="152" docLength="2142" endLine="23" length="143" offset="755" startLine="21" starttimestamp="1651619386199" timestamp="1591621">
    <text><![CDATA[	private static ServerInterface thisServer = new RMIAndGIPCServer();
//  private List<GIPCClient> clients;
//  private GIPCRegistry registry;]]></text>
  </DocumentChange>
  <DocumentChange __id="1065" _type="Insert" date="Tue May 03 19:36:19 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1824" docExpressionCount="152" docLength="2291" length="149" offset="755" repeat="4" starttimestamp="1651619386199" timestamp="1593533" timestamp2="1595468">
    <text><![CDATA[//	private static ServerInterface thisServer = new RMIAndGIPCServer();
////  private List<GIPCClient> clients;
////  private GIPCRegistry registry;]]></text>
  </DocumentChange>
  <Command __id="1106" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:40:13 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5558" docExpressionCount="567" docLength="6465" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1827578">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipcNio.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRmiGipcNio extends ClientRmiGipc implements ClientInterfaceNio{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶"), Diff(DELETE,"		//Create new read thread Runnable"), Diff(EQUAL,"¶		reader = new ClientReadThread(this);¶	"), Diff(DELETE,"					¶		//Create new readThread"), Diff(EQUAL,"¶		readThread = new Thread(reader);¶				¶"), Diff(DELETE,"		//Start thread and do some action¶		readThread.start();¶		¶		//String aNextLine = "a new client has been initialized";¶		// wrap writes to the buffer and then flips it¶		//ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶		//nioManager.write(socketChannel, aWriteMessage, this);"), Diff(INSERT,"¶		readThread.start();¶		¶"), Diff(EQUAL,"¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		"), Diff(DELETE,"a"), Diff(INSERT,"this"), Diff(EQUAL,"ProposalNumber = 1 + "), Diff(DELETE,"a"), Diff(INSERT,"this"), Diff(EQUAL,"ProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+"), Diff(DELETE,"a"), Diff(INSERT,"this"), Diff(EQUAL,"ProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf("), Diff(DELETE,"a"), Diff(INSERT,"this"), Diff(EQUAL,"ProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶//	@Override¶//	public void argumentProcessor(String aCommand) {¶//		// TODO Auto-generated method stub¶//		¶//	}¶¶	@Override¶	public void nioInit(String[] args) {¶		"), Diff(DELETE,"// TODO Auto-generated method stub¶		"), Diff(EQUAL,"¶	}¶¶	@Override¶	public void simulateCommand(String aCommand) {¶		"), Diff(DELETE,"// TODO Auto-generated method stub"), Diff(EQUAL,"¶		¶	}¶		¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRmiGipcNio extends ClientRmiGipc implements ClientInterfaceNio{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		

		reader = new ClientReadThread(this);
	
		readThread = new Thread(reader);
				

		readThread.start();
		

		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		thisProposalNumber = 1 + thisProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+thisProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(thisProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

//	@Override
//	public void argumentProcessor(String aCommand) {
//		// TODO Auto-generated method stub
//		
//	}

	@Override
	public void nioInit(String[] args) {
		
	}

	@Override
	public void simulateCommand(String aCommand) {
		
		
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="1109" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:40:19 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1824" docExpressionCount="152" docLength="2291" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1832801">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientInterfaceGipc thatClient;¶"), Diff(INSERT,"//	private static ServerInterface thisServer = new RMIAndGIPCServer();¶////  private List<GIPCClient> clients;¶////  private GIPCRegistry registry;"), Diff(EQUAL,"¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean thisNio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶¶//	        this.setTracing();¶//	        super.init(arguments);¶//	        ¶//	        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//	        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//	        ¶//	        this.locateGIPCRegistry(port, hostName);¶//	        this.lookupGIPCServerProxy();¶	//¶	}¶	¶	¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.trickOrTreat.LocalCommandObserved;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.rmi.RemoteException;

import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteInterfaceRMI;

@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientOutCoupler implements PropertyChangeListener{
	String oldName;
	
	ServerRemoteInterfaceGIPC watcherServer;
	ClientInterfaceGipc thatClient;
//	private static ServerInterface thisServer = new RMIAndGIPCServer();
////  private List<GIPCClient> clients;
////  private GIPCRegistry registry;
	
	int aProposalNumber = 0;
	boolean nio = false;
	@Override
	public void propertyChange(final PropertyChangeEvent anEvent) {
	
		if (!anEvent.getPropertyName().equals("InputString")) {
			return;
		}
		
		final String thisCommand = (String) anEvent.getNewValue();
		LocalCommandObserved.newCase(this, thisCommand);
		if (nio) {
			return;
		}
		
		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();
		placeHolder.getIPCMechanism();
		
		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);
		try {
			
			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		aProposalNumber++;
	
	}
	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean thisNio) {
		watcherServer = anwatcherServer;
		thatClient = aClient;
		oldName = aClientName;
		

//	        this.setTracing();
//	        super.init(arguments);
//	        
//	        String hostName = ClientArgsProcessor.getServerHost(arguments);
//	        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//	        
//	        this.locateGIPCRegistry(port, hostName);
//	        this.lookupGIPCServerProxy();
	//
	}
	
	

}
]]></snapshot>
  </Command>
  <Command __id="1120" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:40:41 EDT 2022" docASTNodeCount="71" docActiveCodeLength="467" docExpressionCount="43" docLength="1067" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1855580">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientClass.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientClass {

//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	public static void main(final String[] args) {
		try {
			final ClientInterfaceRmi client = new ClientRmiGipcNio();
			// started!!!
			client.start(args);

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
]]></snapshot>
  </Command>
  <Command __id="1132" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:40:54 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12546" docExpressionCount="1106" docLength="15125" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1868043">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigurer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.thisProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="1139" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:40:57 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1031" docExpressionCount="87" docLength="1031" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1871388">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceGipc.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientInterfaceGipc  extends Remote{¶"), Diff(DELETE,"//¶//	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶//¶//	void start(String[] args) throws RemoteException;¶//	"), Diff(EQUAL,"¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶	¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.Remote;
import java.rmi.RemoteException;

import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})
public interface ClientInterfaceGipc  extends Remote{

	void broadcastMetaState(boolean broadcast) throws RemoteException;

	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;

	void quit(int i) throws RemoteException;
	

	void argumentProcessor(String[] args) throws RemoteException;

	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;



	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;

	void start(String[] args) throws RemoteException;
}
]]></snapshot>
  </Command>
  <Command __id="1158" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:41:06 EDT 2022" docASTNodeCount="101" docActiveCodeLength="803" docExpressionCount="69" docLength="803" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1880671">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceNio.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import stringProcessors.HalloweenCommandProcessor;

public interface ClientInterfaceNio extends SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener{


	HalloweenCommandProcessor getCommandProcessor();
	void simulateCommand(String aCommand);
	void nioInit(String[] args);

	void setFactories();
	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	
	
}
]]></snapshot>
  </Command>
  <Command __id="1166" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:41:10 EDT 2022" docASTNodeCount="120" docActiveCodeLength="912" docExpressionCount="81" docLength="946" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1884270">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceRmi.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientInterfaceRmi  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1174" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:41:14 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1824" docExpressionCount="152" docLength="2291" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1888417">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientInterfaceGipc thatClient;¶//	private static ServerInterface thisServer = new RMIAndGIPCServer();¶////  private List<GIPCClient> clients;¶////  private GIPCRegistry registry;¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean thisNio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶¶//	        this.setTracing();¶//	        super.init(arguments);¶//	        ¶//	        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//	        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//	        ¶//	        this.locateGIPCRegistry(port, hostName);¶//	        this.lookupGIPCServerProxy();¶	//¶	}¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1186" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:41:22 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9113" docExpressionCount="832" docLength="9782" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1896572">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipc.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶"), Diff(INSERT,"//"), Diff(EQUAL,"import comp533.client.GIPCClient;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRmiGipc extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String customCommandMove = "move 1 -1";¶	public static final String customCommandUndo = "undo";¶¶	¶¶	private static String serverHost;¶	private static int serverPort;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶¶	public int thisProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		serverHost = ClientArgsProcessor.getRegistryHost(args);¶		serverPort = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶	¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(serverHost, serverPort);¶			RMIRegistryLocated.newCase(this, serverHost, serverPort, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶	¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶//		for (GIPCClient otherClientProxy : this.clients) {¶//        	¶//        	System.out.println("?????????????????????????");¶//        	System.out.println(otherClientProxy);¶//        	System.out.println(thisClient);¶//        	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");¶//            if (!otherClientProxy.equals(thisClient)) {¶//                ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);¶//                otherClientProxy.NotificationReceiver(CommunicationStateNames.COMMAND, newCommand);¶//            }¶//        }¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶¶	@Override¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		ProposedStateSet.newCase(this, CLIENT_NAME, thisProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); ¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void processArgs(String[] args) throws RemoteException {¶		¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		¶		¶	}¶¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//thisProposalNumber++;¶		¶	}¶¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import java.beans.PropertyChangeListener;
import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;


import assignments.util.mainArgs.ClientArgsProcessor;
//import comp533.client.GIPCClient;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import server.remote.ServerRemoteInterfaceRMI;
import server.remote.ServerRemoteObjectGIPC;
import server.remote.ServerRemoteInterfaceGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.communication.CommunicationStateNames;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ClientRmiGipc extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {
	HalloweenCommandProcessor commandProcessor;
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	public static final String customCommandMove = "move 1 -1";
	public static final String customCommandUndo = "undo";

	

	private static String serverHost;
	private static int serverPort;
	private static String SERVER_NAME;
	public String CLIENT_NAME;
	
	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	protected boolean broadcastIPCMechanism = false;

	public int thisProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	

	@Override
	public void argumentProcessor(String[] args) {
	
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		serverHost = ClientArgsProcessor.getRegistryHost(args);
		serverPort = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);



		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
	@Override
	protected void setTracing() {
	
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		

	}

	@Override
	public void init(String[] args) {
		setTracing();

		this.argumentProcessor(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		
		try {
			serverGIPC.registerClientGIPC(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(serverHost, serverPort);
			RMIRegistryLocated.newCase(this, serverHost, serverPort, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}
		
		try {
			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			System.out.println("SERVER looked up in RMI registry!!");
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}

		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		try {
			server.registerClientRMI(this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

	@Override
	public HalloweenCommandProcessor createSimulation(String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}
	
	@Override
	public void inCoupler(String aNewCommand, int proposalNumber) {
//		for (GIPCClient otherClientProxy : this.clients) {
//        	
//        	System.out.println("?????????????????????????");
//        	System.out.println(otherClientProxy);
//        	System.out.println(thisClient);
//        	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");
//            if (!otherClientProxy.equals(thisClient)) {
//                ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);
//                otherClientProxy.NotificationReceiver(CommunicationStateNames.COMMAND, newCommand);
//            }
//        }
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);
		
	}
	

	@Override

	public void simulationCommand(String aCommand) {

		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");
		System.out.println(mechanism);
		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using gipc proxy server");
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			System.out.println("using RMI proxy server");
		}
		
		ProposedStateSet.newCase(this, CLIENT_NAME, thisProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); 
	}
	
	@Override	
	public void quit(int aCode) {
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	
	
	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			try {
				server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void processArgs(String[] args) throws RemoteException {
		
		
	}

	@Override
	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {
		
		
	}

	@Override
	public void broadcastMetaState(boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
	
	}
	
	@Override
	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		setIPCMechanism(mechanism);
		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);
		//thisProposalNumber++;
		
	}










}
]]></snapshot>
  </Command>
  <DocumentChange __id="1188" _type="Replace" date="Tue May 03 19:41:23 EDT 2022" docASTNodeCount="1180" docActiveCodeLength="9129" docExpressionCount="829" docLength="9763" endLine="20" insertionLength="18" int_docASTNodeCount="1184" int_docActiveCodeLength="9111" int_docExpressionCount="832" int_docLength="9745" length="37" offset="574" startLine="19" starttimestamp="1651619386199" timestamp="1897534">
    <deletedText><![CDATA[//import comp533.client.GIPCClient;
]]></deletedText>
    <insertedText><![CDATA[thisProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1190" _type="Replace" date="Tue May 03 19:41:25 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9113" docExpressionCount="832" docLength="9782" endLine="19" insertionLength="37" int_docASTNodeCount="1184" int_docActiveCodeLength="9111" int_docExpressionCount="832" int_docLength="9745" length="18" offset="574" startLine="19" starttimestamp="1651619386199" timestamp="1899052">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[//import comp533.client.GIPCClient;
]]></insertedText>
  </DocumentChange>
  <Command __id="1203" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:41:33 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5558" docExpressionCount="567" docLength="6465" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1907190">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipcNio.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRmiGipcNio extends ClientRmiGipc implements ClientInterfaceNio{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶¶		reader = new ClientReadThread(this);¶	¶		readThread = new Thread(reader);¶				¶¶		readThread.start();¶		¶¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		thisProposalNumber = 1 + thisProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+thisProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(thisProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶//	@Override¶//	public void argumentProcessor(String aCommand) {¶//		// TODO Auto-generated method stub¶//		¶//	}¶¶	@Override¶	public void nioInit(String[] args) {¶		¶	}¶¶	@Override¶	public void simulateCommand(String aCommand) {¶		¶		¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1222" _type="Replace" date="Tue May 03 19:41:52 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5555" docExpressionCount="567" docLength="6462" endLine="158" insertionLength="15" int_docASTNodeCount="783" int_docActiveCodeLength="5540" int_docExpressionCount="566" int_docLength="6447" length="18" offset="5513" startLine="158" starttimestamp="1651619386199" timestamp="1926025">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <Command __id="1223" _type="PauseCommand" date="Tue May 03 19:41:52 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1926025">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1521]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1227" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:41:52 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="1926727" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[aProposalNumber]]></replaceString>
  </Command>
  <Command __id="1228" _type="ShellCommand" date="Tue May 03 19:41:53 EDT 2022" starttimestamp="1651619386199" timestamp="1927472" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1230" _type="PauseCommand" date="Tue May 03 19:41:55 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1929544">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2072]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1229" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:41:55 EDT 2022" starttimestamp="1651619386199" timestamp="1929544" />
  <Command __id="1231" _type="EclipseCommand" commandID="" date="Tue May 03 19:41:55 EDT 2022" starttimestamp="1651619386199" timestamp="1929619" />
  <Command __id="1232" _type="EclipseCommand" commandID="" date="Tue May 03 19:41:55 EDT 2022" starttimestamp="1651619386199" timestamp="1929651" />
  <Command __id="1234" _type="PauseCommand" date="Tue May 03 19:42:04 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="1938695">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[9044]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1235" _type="MoveCaretCommand" caretOffset="574" date="Tue May 03 19:42:05 EDT 2022" docOffset="574" starttimestamp="1651619386199" timestamp="1939033" />
  <Command __id="1237" _type="PauseCommand" date="Tue May 03 19:42:06 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1940346">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1313]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1238" _type="SelectTextCommand" caretOffset="3409" date="Tue May 03 19:42:06 EDT 2022" end="3409" start="3394" starttimestamp="1651619386199" timestamp="1940546" />
  <Command __id="1240" _type="PauseCommand" date="Tue May 03 19:42:24 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="1957834">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[17288]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1239" _type="MoveCaretCommand" caretOffset="556" date="Tue May 03 19:42:24 EDT 2022" docOffset="2042" starttimestamp="1651619386199" timestamp="1957834" />
  <Command __id="1243" _type="PauseCommand" date="Tue May 03 19:42:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1959078">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1244]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1242" _type="ShellCommand" date="Tue May 03 19:42:25 EDT 2022" starttimestamp="1651619386199" timestamp="1959078" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1245" _type="PauseCommand" date="Tue May 03 19:42:29 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1963439">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4361]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1244" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:42:29 EDT 2022" forward="false" matchWord="false" offset="2042" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1963439" wrapSearch="false">
    <searchString><![CDATA[proposal]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1247" _type="PauseCommand" date="Tue May 03 19:42:32 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1965821">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2382]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1246" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:42:32 EDT 2022" forward="true" matchWord="false" offset="2042" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1965821" wrapSearch="false">
    <searchString><![CDATA[proposal]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1249" _type="PauseCommand" date="Tue May 03 19:42:35 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1969105">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3284]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1248" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:42:35 EDT 2022" forward="true" matchWord="false" offset="2042" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1969105" wrapSearch="false">
    <searchString><![CDATA[Proposal]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1251" _type="PauseCommand" date="Tue May 03 19:42:39 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1972971">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3866]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1250" _type="ShellCommand" date="Tue May 03 19:42:39 EDT 2022" starttimestamp="1651619386199" timestamp="1972971" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1252" _type="MoveCaretCommand" caretOffset="3019" date="Tue May 03 19:42:39 EDT 2022" docOffset="4505" starttimestamp="1651619386199" timestamp="1973039" />
  <Command __id="1254" _type="PauseCommand" date="Tue May 03 19:42:43 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1977000">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3961]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1253" _type="ShellCommand" date="Tue May 03 19:42:43 EDT 2022" starttimestamp="1651619386199" timestamp="1977000" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1256" _type="PauseCommand" date="Tue May 03 19:42:44 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1978155">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1155]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1255" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:42:44 EDT 2022" forward="true" matchWord="false" offset="4505" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="1978155" wrapSearch="false">
    <searchString><![CDATA[Proposal]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1258" _type="PauseCommand" date="Tue May 03 19:42:46 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="1980082">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1927]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1257" _type="ShellCommand" date="Tue May 03 19:42:46 EDT 2022" starttimestamp="1651619386199" timestamp="1980082" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1260" _type="PauseCommand" date="Tue May 03 19:42:48 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="1982167">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2085]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1259" _type="MoveCaretCommand" caretOffset="2869" date="Tue May 03 19:42:48 EDT 2022" docOffset="4355" starttimestamp="1651619386199" timestamp="1982167" />
  <Command __id="1261" _type="MoveCaretCommand" caretOffset="2869" date="Tue May 03 19:42:48 EDT 2022" docOffset="4355" starttimestamp="1651619386199" timestamp="1982700" />
  <Command __id="1262" _type="SelectTextCommand" caretOffset="2879" date="Tue May 03 19:42:49 EDT 2022" end="2879" start="2864" starttimestamp="1651619386199" timestamp="1982837" />
  <Command __id="1264" _type="PauseCommand" date="Tue May 03 19:43:12 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="2006556">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[23719]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1265" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:43:12 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="2006700" />
  <Command __id="1267" _type="PauseCommand" date="Tue May 03 19:43:23 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="2016948">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[10248]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1266" _type="SelectTextCommand" caretOffset="268" date="Tue May 03 19:43:23 EDT 2022" end="268" start="262" starttimestamp="1651619386199" timestamp="2016948" />
  <Command __id="1268" _type="CopyCommand" date="Tue May 03 19:43:23 EDT 2022" starttimestamp="1651619386199" timestamp="2017534" />
  <Command __id="1270" _type="ShellCommand" date="Tue May 03 19:43:24 EDT 2022" starttimestamp="1651619386199" timestamp="2017819" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1271" _type="PasteCommand" date="Tue May 03 19:43:24 EDT 2022" starttimestamp="1651619386199" timestamp="2017983" />
  <Command __id="1273" _type="PauseCommand" date="Tue May 03 19:43:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2019136">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1153]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1272" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:25 EDT 2022" forward="true" matchWord="false" offset="617" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2019136" wrapSearch="false">
    <searchString><![CDATA[Number]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1275" _type="PauseCommand" date="Tue May 03 19:43:27 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2021014">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1878]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1274" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:27 EDT 2022" forward="true" matchWord="false" offset="617" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2021014" wrapSearch="false">
    <searchString><![CDATA[Number]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1276" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:27 EDT 2022" forward="true" matchWord="false" offset="617" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2021598" wrapSearch="false">
    <searchString><![CDATA[Number]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1278" _type="PauseCommand" date="Tue May 03 19:43:30 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2024498">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2900]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1277" _type="ShellCommand" date="Tue May 03 19:43:30 EDT 2022" starttimestamp="1651619386199" timestamp="2024498" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1280" _type="PauseCommand" date="Tue May 03 19:43:31 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2025509">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1281" _type="MoveCaretCommand" caretOffset="403" date="Tue May 03 19:43:31 EDT 2022" docOffset="438" starttimestamp="1651619386199" timestamp="2025661" />
  <Command __id="1284" _type="PauseCommand" date="Tue May 03 19:43:33 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2026877">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1216]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1283" _type="ShellCommand" date="Tue May 03 19:43:33 EDT 2022" starttimestamp="1651619386199" timestamp="2026877" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1285" _type="PasteCommand" date="Tue May 03 19:43:33 EDT 2022" starttimestamp="1651619386199" timestamp="2027025" />
  <Command __id="1287" _type="PauseCommand" date="Tue May 03 19:43:34 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2028119">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1094]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1286" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:34 EDT 2022" forward="true" matchWord="false" offset="438" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2028119" wrapSearch="false">
    <searchString><![CDATA[Number]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1288" _type="ShellCommand" date="Tue May 03 19:43:35 EDT 2022" starttimestamp="1651619386199" timestamp="2028881" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1290" _type="MoveCaretCommand" caretOffset="12474" date="Tue May 03 19:43:36 EDT 2022" docOffset="12474" starttimestamp="1651619386199" timestamp="2029849" />
  <Command __id="1292" _type="ShellCommand" date="Tue May 03 19:43:36 EDT 2022" starttimestamp="1651619386199" timestamp="2030131" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1293" _type="PasteCommand" date="Tue May 03 19:43:36 EDT 2022" starttimestamp="1651619386199" timestamp="2030281" />
  <Command __id="1295" _type="PauseCommand" date="Tue May 03 19:43:39 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2033333">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3052]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1294" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:39 EDT 2022" forward="false" matchWord="false" offset="12474" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2033333" wrapSearch="false">
    <searchString><![CDATA[Number]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1297" _type="PauseCommand" date="Tue May 03 19:43:43 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2037311">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[3978]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1296" _type="ShellCommand" date="Tue May 03 19:43:43 EDT 2022" starttimestamp="1651619386199" timestamp="2037311" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1298" _type="MoveCaretCommand" caretOffset="12461" date="Tue May 03 19:43:44 EDT 2022" docOffset="12461" starttimestamp="1651619386199" timestamp="2038029" />
  <Command __id="1299" _type="MoveCaretCommand" caretOffset="12461" date="Tue May 03 19:43:44 EDT 2022" docOffset="12461" starttimestamp="1651619386199" timestamp="2038030" />
  <Command __id="1300" _type="SelectTextCommand" caretOffset="12474" date="Tue May 03 19:43:44 EDT 2022" end="12474" start="12456" starttimestamp="1651619386199" timestamp="2038173" />
  <Command __id="1301" _type="SelectTextCommand" caretOffset="12474" date="Tue May 03 19:43:44 EDT 2022" end="12474" start="12456" starttimestamp="1651619386199" timestamp="2038173" />
  <Command __id="1302" _type="CopyCommand" date="Tue May 03 19:43:45 EDT 2022" starttimestamp="1651619386199" timestamp="2038966" />
  <Command __id="1304" _type="ShellCommand" date="Tue May 03 19:43:45 EDT 2022" starttimestamp="1651619386199" timestamp="2039484" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1306" _type="PauseCommand" date="Tue May 03 19:43:47 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2041064">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1580]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="1305" _type="PasteCommand" date="Tue May 03 19:43:47 EDT 2022" starttimestamp="1651619386199" timestamp="2041064" />
  <Command __id="1308" _type="PauseCommand" date="Tue May 03 19:43:50 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2044519">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3455]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1309" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:51 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2045175" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[aProposalNumber]]></replaceString>
  </Command>
  <Command __id="1311" _type="PauseCommand" date="Tue May 03 19:43:53 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2047438">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2263]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1310" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:53 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2047438" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[aProposalNumber]]></replaceString>
  </Command>
  <Command __id="1312" _type="ShellCommand" date="Tue May 03 19:43:54 EDT 2022" starttimestamp="1651619386199" timestamp="2048042" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1314" _type="MoveCaretCommand" caretOffset="336" date="Tue May 03 19:43:55 EDT 2022" docOffset="685" starttimestamp="1651619386199" timestamp="2048961" />
  <Command __id="1316" _type="ShellCommand" date="Tue May 03 19:43:55 EDT 2022" starttimestamp="1651619386199" timestamp="2049729" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1317" _type="PasteCommand" date="Tue May 03 19:43:56 EDT 2022" starttimestamp="1651619386199" timestamp="2050056" />
  <Command __id="1319" _type="PauseCommand" date="Tue May 03 19:43:59 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2052851">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2795]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1318" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:43:59 EDT 2022" forward="true" matchWord="false" offset="685" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2052851" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1321" _type="PauseCommand" date="Tue May 03 19:44:00 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2054186">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1335]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1320" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:00 EDT 2022" forward="false" matchWord="false" offset="685" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2054186" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1322" _type="ShellCommand" date="Tue May 03 19:44:01 EDT 2022" starttimestamp="1651619386199" timestamp="2054888" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1324" _type="PauseCommand" date="Tue May 03 19:44:02 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2056068">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1180]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1325" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:44:02 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="2056254" />
  <Command __id="1327" _type="ShellCommand" date="Tue May 03 19:44:03 EDT 2022" starttimestamp="1651619386199" timestamp="2057186" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1328" _type="PasteCommand" date="Tue May 03 19:44:03 EDT 2022" starttimestamp="1651619386199" timestamp="2057334" />
  <Command __id="1330" _type="PauseCommand" date="Tue May 03 19:44:04 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2058469">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1135]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1329" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:04 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2058469" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1332" _type="PauseCommand" date="Tue May 03 19:44:06 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2060002">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1533]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1331" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:06 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2060002" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1333" _type="ShellCommand" date="Tue May 03 19:44:06 EDT 2022" starttimestamp="1651619386199" timestamp="2060670" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1335" _type="PauseCommand" date="Tue May 03 19:44:07 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2061781">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1111]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1336" _type="SelectTextCommand" caretOffset="268" date="Tue May 03 19:44:08 EDT 2022" end="268" start="262" starttimestamp="1651619386199" timestamp="2061932" />
  <Command __id="1338" _type="ShellCommand" date="Tue May 03 19:44:08 EDT 2022" starttimestamp="1651619386199" timestamp="2062563" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1339" _type="PasteCommand" date="Tue May 03 19:44:08 EDT 2022" starttimestamp="1651619386199" timestamp="2062743" />
  <Command __id="1341" _type="PauseCommand" date="Tue May 03 19:44:09 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2063756">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1013]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1340" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:09 EDT 2022" forward="true" matchWord="false" offset="617" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2063756" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1343" _type="PauseCommand" date="Tue May 03 19:44:11 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2064988">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1232]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1342" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:11 EDT 2022" forward="false" matchWord="false" offset="617" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2064988" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1344" _type="ShellCommand" date="Tue May 03 19:44:11 EDT 2022" starttimestamp="1651619386199" timestamp="2065661" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1346" _type="PauseCommand" date="Tue May 03 19:44:13 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2067744">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2083]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1347" _type="SelectTextCommand" caretOffset="1160" date="Tue May 03 19:44:14 EDT 2022" end="1160" start="1145" starttimestamp="1651619386199" timestamp="2067907" />
  <Command __id="1349" _type="ShellCommand" date="Tue May 03 19:44:14 EDT 2022" starttimestamp="1651619386199" timestamp="2068516" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1350" _type="PasteCommand" date="Tue May 03 19:44:14 EDT 2022" starttimestamp="1651619386199" timestamp="2068721" />
  <Command __id="1352" _type="PauseCommand" date="Tue May 03 19:44:15 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2069765">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1044]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1351" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:15 EDT 2022" forward="false" matchWord="false" offset="1590" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2069765" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1354" _type="PauseCommand" date="Tue May 03 19:44:17 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2070894">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1129]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1353" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:17 EDT 2022" forward="true" matchWord="false" offset="1590" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2070894" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1355" _type="ShellCommand" date="Tue May 03 19:44:17 EDT 2022" starttimestamp="1651619386199" timestamp="2071734" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1357" _type="MoveCaretCommand" caretOffset="574" date="Tue May 03 19:44:18 EDT 2022" docOffset="574" starttimestamp="1651619386199" timestamp="2072789" />
  <Command __id="1359" _type="ShellCommand" date="Tue May 03 19:44:19 EDT 2022" starttimestamp="1651619386199" timestamp="2073693" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1360" _type="PasteCommand" date="Tue May 03 19:44:20 EDT 2022" starttimestamp="1651619386199" timestamp="2073914" />
  <Command __id="1362" _type="PauseCommand" date="Tue May 03 19:44:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2075054">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1140]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1361" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:21 EDT 2022" forward="true" matchWord="false" offset="574" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2075054" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1364" _type="PauseCommand" date="Tue May 03 19:44:25 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2079448">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[4394]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="1363" _type="PasteCommand" date="Tue May 03 19:44:25 EDT 2022" starttimestamp="1651619386199" timestamp="2079448" />
  <Command __id="1366" _type="PauseCommand" date="Tue May 03 19:44:27 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2081683">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[2235]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1370" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:28 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2082566" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[aProposalNumber]]></replaceString>
  </Command>
  <Command __id="1372" _type="PauseCommand" date="Tue May 03 19:44:30 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2084796">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[2230]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1373" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:31 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2085521" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[aProposalNumber]]></replaceString>
  </Command>
  <Command __id="1374" _type="ShellCommand" date="Tue May 03 19:44:32 EDT 2022" starttimestamp="1651619386199" timestamp="2086272" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1375" _type="MoveCaretCommand" caretOffset="2905" date="Tue May 03 19:44:32 EDT 2022" docOffset="2905" starttimestamp="1651619386199" timestamp="2086681" />
  <Command __id="1376" _type="MoveCaretCommand" caretOffset="2905" date="Tue May 03 19:44:32 EDT 2022" docOffset="2905" starttimestamp="1651619386199" timestamp="2086681" />
  <Command __id="1377" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:44:33 EDT 2022" starttimestamp="1651619386199" timestamp="2087017" />
  <Command __id="1378" _type="EclipseCommand" commandID="" date="Tue May 03 19:44:33 EDT 2022" starttimestamp="1651619386199" timestamp="2087105" />
  <Command __id="1379" _type="EclipseCommand" commandID="" date="Tue May 03 19:44:33 EDT 2022" starttimestamp="1651619386199" timestamp="2087163" />
  <Command __id="1381" _type="PauseCommand" date="Tue May 03 19:44:34 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2088601">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1438]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1382" _type="MoveCaretCommand" caretOffset="19" date="Tue May 03 19:44:34 EDT 2022" docOffset="19" starttimestamp="1651619386199" timestamp="2088786" />
  <Command __id="1383" _type="MoveCaretCommand" caretOffset="1534" date="Tue May 03 19:44:35 EDT 2022" docOffset="1534" starttimestamp="1651619386199" timestamp="2089532" />
  <Command __id="1386" _type="PauseCommand" date="Tue May 03 19:44:37 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2090961">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1429]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1385" _type="ShellCommand" date="Tue May 03 19:44:37 EDT 2022" starttimestamp="1651619386199" timestamp="2090961" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1387" _type="PasteCommand" date="Tue May 03 19:44:37 EDT 2022" starttimestamp="1651619386199" timestamp="2091138" />
  <Command __id="1389" _type="PauseCommand" date="Tue May 03 19:44:38 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2092494">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1356]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1388" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:38 EDT 2022" forward="false" matchWord="false" offset="1534" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2092494" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1390" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:44:39 EDT 2022" forward="true" matchWord="false" offset="1534" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1651619386199" timestamp="2093441" wrapSearch="false">
    <searchString><![CDATA[thisProposalNumber]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="1391" _type="ShellCommand" date="Tue May 03 19:44:40 EDT 2022" starttimestamp="1651619386199" timestamp="2094103" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1393" _type="SelectTextCommand" caretOffset="12471" date="Tue May 03 19:44:41 EDT 2022" end="12471" start="12456" starttimestamp="1651619386199" timestamp="2095246" />
  <Command __id="1394" _type="MoveCaretCommand" caretOffset="12600" date="Tue May 03 19:44:41 EDT 2022" docOffset="12600" starttimestamp="1651619386199" timestamp="2095553" />
  <Command __id="1395" _type="MoveCaretCommand" caretOffset="12600" date="Tue May 03 19:44:41 EDT 2022" docOffset="12600" starttimestamp="1651619386199" timestamp="2095553" />
  <Command __id="1396" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:44:42 EDT 2022" starttimestamp="1651619386199" timestamp="2096156" />
  <Command __id="1397" _type="EclipseCommand" commandID="" date="Tue May 03 19:44:42 EDT 2022" starttimestamp="1651619386199" timestamp="2096240" />
  <Command __id="1398" _type="EclipseCommand" commandID="" date="Tue May 03 19:44:42 EDT 2022" starttimestamp="1651619386199" timestamp="2096280" />
  <Command __id="1403" _type="PauseCommand" date="Tue May 03 19:44:46 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2100113">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1266]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="1402" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:44:46 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2100113" type="Run" />
  <Command __id="1404" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:44:46 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2100114" type="Run" />
  <Command __id="1406" _type="PauseCommand" date="Tue May 03 19:44:48 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2102732">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2618]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1405" _type="ShellCommand" date="Tue May 03 19:44:48 EDT 2022" starttimestamp="1651619386199" timestamp="2102732" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1408" _type="PauseCommand" date="Tue May 03 19:46:04 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="2177855">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[75123]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1407" _type="ConsoleOutput" date="Tue May 03 19:46:04 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2177855" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67641
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOServerMetaStateBroadcast@2f51ed99 . Results may change."), Diff(INSERT,"Test execution time (ms):67641"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1410" _type="PauseCommand" date="Tue May 03 19:46:08 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2182715">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4860]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1409" _type="ShellCommand" date="Tue May 03 19:46:08 EDT 2022" starttimestamp="1651619386199" timestamp="2182715" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1412" _type="PauseCommand" date="Tue May 03 19:46:10 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2184002">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1287]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1411" _type="ShellCommand" date="Tue May 03 19:46:10 EDT 2022" starttimestamp="1651619386199" timestamp="2184002" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1414" _type="PauseCommand" date="Tue May 03 19:46:14 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2187950">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3948]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1413" _type="ConsoleOutput" date="Tue May 03 19:46:14 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2187950" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67641"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1416" _type="PauseCommand" date="Tue May 03 19:47:56 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="2290389">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[102439]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1415" _type="ConsoleOutput" date="Tue May 03 19:47:56 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2290389" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112578
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112578¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="1418" _type="PauseCommand" date="Tue May 03 19:48:19 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="2313013">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22624]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1417" _type="ConsoleOutput" date="Tue May 03 19:48:19 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2313013" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22571
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"257"), Diff(DELETE,"8¶Number of traces > 800  turning tracing off"), Diff(INSERT,"1"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1420" _type="PauseCommand" date="Tue May 03 19:48:41 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="2335589">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22576]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1419" _type="ConsoleOutput" date="Tue May 03 19:48:41 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2335589" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22574
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2257"), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1422" _type="PauseCommand" date="Tue May 03 19:49:04 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="2358116">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22527]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1421" _type="ConsoleOutput" date="Tue May 03 19:49:04 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2358116" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22573
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2257"), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1424" _type="PauseCommand" date="Tue May 03 19:49:26 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="2380737">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22621]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="1423" _type="ConsoleOutput" date="Tue May 03 19:49:26 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2380737" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22568
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"73"), Diff(INSERT,"68"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1426" _type="PauseCommand" date="Tue May 03 19:50:46 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="2460448">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[79711]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1425" _type="ShellCommand" date="Tue May 03 19:50:46 EDT 2022" starttimestamp="1651619386199" timestamp="2460448" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1428" _type="PauseCommand" date="Tue May 03 19:50:54 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2468476">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8028]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="1429" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:50:54 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="2468652" />
  <Command __id="1431" _type="PauseCommand" date="Tue May 03 19:51:11 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="2484823">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[16171]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1430" _type="ShellCommand" date="Tue May 03 19:51:11 EDT 2022" starttimestamp="1651619386199" timestamp="2484823" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1432" _type="ShellCommand" date="Tue May 03 19:51:11 EDT 2022" starttimestamp="1651619386199" timestamp="2484905" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1224" _type="Replace" date="Tue May 03 19:41:52 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5552" docExpressionCount="567" docLength="6459" endLine="145" insertionLength="15" int_docASTNodeCount="782" int_docActiveCodeLength="5537" int_docExpressionCount="565" int_docLength="6444" length="18" offset="4969" startLine="145" starttimestamp="1651619386199" timestamp="1926044">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1225" _type="Replace" date="Tue May 03 19:41:52 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5549" docExpressionCount="567" docLength="6456" endLine="144" insertionLength="15" int_docASTNodeCount="782" int_docActiveCodeLength="5534" int_docExpressionCount="565" int_docLength="6441" length="18" offset="4905" startLine="144" starttimestamp="1651619386199" timestamp="1926060">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1226" _type="Replace" date="Tue May 03 19:41:52 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5546" docExpressionCount="567" docLength="6453" endLine="144" insertionLength="15" int_docASTNodeCount="675" int_docActiveCodeLength="5531" int_docExpressionCount="477" int_docLength="6438" length="18" offset="4880" startLine="144" starttimestamp="1651619386199" timestamp="1926071">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <Command __id="1233" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:42:04 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9113" docExpressionCount="832" docLength="9782" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1938695">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipc.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶//import comp533.client.GIPCClient;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRmiGipc extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String customCommandMove = "move 1 -1";¶	public static final String customCommandUndo = "undo";¶¶	¶¶	private static String serverHost;¶	private static int serverPort;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶¶	public int thisProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		serverHost = ClientArgsProcessor.getRegistryHost(args);¶		serverPort = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶	¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(serverHost, serverPort);¶			RMIRegistryLocated.newCase(this, serverHost, serverPort, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶	¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶//		for (GIPCClient otherClientProxy : this.clients) {¶//        	¶//        	System.out.println("?????????????????????????");¶//        	System.out.println(otherClientProxy);¶//        	System.out.println(thisClient);¶//        	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");¶//            if (!otherClientProxy.equals(thisClient)) {¶//                ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);¶//                otherClientProxy.NotificationReceiver(CommunicationStateNames.COMMAND, newCommand);¶//            }¶//        }¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶¶	@Override¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		ProposedStateSet.newCase(this, CLIENT_NAME, thisProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); ¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void processArgs(String[] args) throws RemoteException {¶		¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		¶		¶	}¶¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//thisProposalNumber++;¶		¶	}¶¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1236" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:42:06 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5546" docExpressionCount="567" docLength="6453" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="1940346">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipcNio.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRmiGipcNio extends ClientRmiGipc implements ClientInterfaceNio{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶¶		reader = new ClientReadThread(this);¶	¶		readThread = new Thread(reader);¶				¶¶		readThread.start();¶		¶¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		"), Diff(DELETE,"this"), Diff(INSERT,"a"), Diff(EQUAL,"ProposalNumber = 1 + "), Diff(DELETE,"this"), Diff(INSERT,"a"), Diff(EQUAL,"ProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+"), Diff(DELETE,"this"), Diff(INSERT,"a"), Diff(EQUAL,"ProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf("), Diff(DELETE,"this"), Diff(INSERT,"a"), Diff(EQUAL,"ProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶//	@Override¶//	public void argumentProcessor(String aCommand) {¶//		// TODO Auto-generated method stub¶//		¶//	}¶¶	@Override¶	public void nioInit(String[] args) {¶		¶	}¶¶	@Override¶	public void simulateCommand(String aCommand) {¶		¶		¶	}¶		¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import nioExample.exampleClientReadThread;
import readThread.ClientReadThread;
import readThread.ReadThreadInterface;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposalMade;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;

@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })
public class ClientRmiGipcNio extends ClientRmiGipc implements ClientInterfaceNio{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIPCMechanism = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		

		reader = new ClientReadThread(this);
	
		readThread = new Thread(reader);
				

		readThread.start();
		

		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		// TODO Auto-generated method stub
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("New Client connected to server!!!");
		
	}

	@Override
	public void notConnected(SocketChannel arg0, Exception arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {
		// TODO Auto-generated method stub
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		//TODO NEED TO PARSE THE PROPOSAL NUMBER
		String aMessageString = new String(copy.array());
		System.out.println(aMessageString);
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("CLIENT COMMAND: "+aMessageString);
		//int aProposalNumber = 0;
		
		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());
		//boundedBuffer.add(bufferCommand);
		
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(String aCommand) {
		String originalCommand = aCommand;
		IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());


		aProposalNumber = 1 + aProposalNumber;
		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);
		
		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		aCommand = aCommand.concat(String.valueOf(aProposalNumber));
		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);
		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);
		nioManager.write(socketChannel, bufferCommand, this);
	

		
		
		
		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window
		
		//commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

//	@Override
//	public void argumentProcessor(String aCommand) {
//		// TODO Auto-generated method stub
//		
//	}

	@Override
	public void nioInit(String[] args) {
		
	}

	@Override
	public void simulateCommand(String aCommand) {
		
		
	}
		


}
]]></snapshot>
  </Command>
  <Command __id="1263" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:43:12 EDT 2022" docASTNodeCount="120" docActiveCodeLength="912" docExpressionCount="81" docLength="946" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2006556">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceRmi.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientInterfaceRmi  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1279" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:43:31 EDT 2022" docASTNodeCount="71" docActiveCodeLength="467" docExpressionCount="43" docLength="1067" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2025509">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientClass.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({ DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientClass {¶¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	public static void main(final String[] args) {¶		try {¶			final ClientInterfaceRmi client = new ClientRmiGipcNio();¶			// started!!!¶			client.start(args);¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1289" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:43:35 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12546" docExpressionCount="1106" docLength="15125" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2029706">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigurer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.thisProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1307" _type="Replace" date="Tue May 03 19:43:50 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12543" docExpressionCount="1106" docLength="15122" endLine="391" insertionLength="15" int_docASTNodeCount="1640" int_docActiveCodeLength="12528" int_docExpressionCount="1105" int_docLength="15107" length="18" offset="12456" startLine="391" starttimestamp="1651619386199" timestamp="2044519">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <Command __id="1313" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:43:55 EDT 2022" docASTNodeCount="134" docActiveCodeLength="1031" docExpressionCount="87" docLength="1031" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2048822">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceGipc.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface ClientInterfaceGipc  extends Remote{¶¶	void broadcastMetaState(boolean broadcast) throws RemoteException;¶¶	void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶	void quit(int i) throws RemoteException;¶	¶¶	void argumentProcessor(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶¶¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶}¶")]]]></diff>
  </Command>
  <Command __id="1323" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:44:02 EDT 2022" docASTNodeCount="101" docActiveCodeLength="803" docExpressionCount="69" docLength="803" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2056068">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceNio.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.nio.ByteBuffer;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶import stringProcessors.HalloweenCommandProcessor;¶¶public interface ClientInterfaceNio extends SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener{¶¶¶	HalloweenCommandProcessor getCommandProcessor();¶	void simulateCommand(String aCommand);¶	void nioInit(String[] args);¶¶	void setFactories();¶	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();¶¶	¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="1334" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:44:07 EDT 2022" docASTNodeCount="120" docActiveCodeLength="912" docExpressionCount="81" docLength="946" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2061781">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceRmi.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.Remote;¶import java.rmi.RemoteException;¶¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.RMI})¶public interface ClientInterfaceRmi  extends Remote{¶¶	//void processArgs(String[] args);¶	¶	void inCoupler(String aNewCommand, int aProposalNumber) throws RemoteException;¶¶	void start(String[] args) throws RemoteException;¶¶	void processArgs(String[] args) throws RemoteException;¶¶	HalloweenCommandProcessor createSimulation(String aPrefix) throws RemoteException;¶¶	void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException;¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1345" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:44:13 EDT 2022" docASTNodeCount="234" docActiveCodeLength="1824" docExpressionCount="152" docLength="2291" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2067744">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.trickOrTreat.LocalCommandObserved;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.rmi.RemoteException;¶¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteInterfaceRMI;¶¶@Tags({DistributedTags.CLIENT_OUT_COUPLER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientOutCoupler implements PropertyChangeListener{¶	String oldName;¶	¶	ServerRemoteInterfaceGIPC watcherServer;¶	ClientInterfaceGipc thatClient;¶//	private static ServerInterface thisServer = new RMIAndGIPCServer();¶////  private List<GIPCClient> clients;¶////  private GIPCRegistry registry;¶	¶	int aProposalNumber = 0;¶	boolean nio = false;¶	@Override¶	public void propertyChange(final PropertyChangeEvent anEvent) {¶	¶		if (!anEvent.getPropertyName().equals("InputString")) {¶			return;¶		}¶		¶		final String thisCommand = (String) anEvent.getNewValue();¶		LocalCommandObserved.newCase(this, thisCommand);¶		if (nio) {¶			return;¶		}¶		¶		final AStandAloneTwoCoupledHalloweenSimulations placeHolder = new AStandAloneTwoCoupledHalloweenSimulations();¶		placeHolder.getIPCMechanism();¶		¶		RemoteProposeRequestSent.newCase(thatClient, oldName, aProposalNumber, thisCommand);¶		try {¶			¶			watcherServer.broadcast(thisCommand, thatClient, aProposalNumber);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		aProposalNumber++;¶	¶	}¶	public ClientOutCoupler (final ServerRemoteInterfaceGIPC anwatcherServer, final ClientInterfaceGipc aClient, final String aClientName, Boolean thisNio) {¶		watcherServer = anwatcherServer;¶		thatClient = aClient;¶		oldName = aClientName;¶		¶¶//	        this.setTracing();¶//	        super.init(arguments);¶//	        ¶//	        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//	        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//	        ¶//	        this.locateGIPCRegistry(port, hostName);¶//	        this.lookupGIPCServerProxy();¶	//¶	}¶	¶	¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1356" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:44:18 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9113" docExpressionCount="832" docLength="9782" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2072648">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipc.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import java.beans.PropertyChangeListener;¶import java.nio.ByteBuffer;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶//import comp533.client.GIPCClient;¶import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import server.remote.ServerRemoteInterfaceRMI;¶import server.remote.ServerRemoteObjectGIPC;¶import server.remote.ServerRemoteInterfaceGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ClientRmiGipc extends AStandAloneTwoCoupledHalloweenSimulations implements ClientInterfaceRmi, ClientInterfaceGipc {¶	HalloweenCommandProcessor commandProcessor;¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	public static final String customCommandMove = "move 1 -1";¶	public static final String customCommandUndo = "undo";¶¶	¶¶	private static String serverHost;¶	private static int serverPort;¶	private static String SERVER_NAME;¶	public String CLIENT_NAME;¶	¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	protected boolean broadcastIPCMechanism = false;¶¶	public int thisProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	¶¶	@Override¶	public void argumentProcessor(String[] args) {¶	¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		serverHost = ClientArgsProcessor.getRegistryHost(args);¶		serverPort = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶	@Override¶	protected void setTracing() {¶	¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶¶	}¶¶	@Override¶	public void init(String[] args) {¶		setTracing();¶¶		this.argumentProcessor(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		¶		try {¶			serverGIPC.registerClientGIPC(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(serverHost, serverPort);¶			RMIRegistryLocated.newCase(this, serverHost, serverPort, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶		¶		try {¶			System.out.println("WE ARE LOOKING UP server from RMI REGISTRY HERE: "+SERVER_NAME);¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			System.out.println("SERVER looked up in RMI registry!!");¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶		try {¶			server.registerClientRMI(this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶	¶	@Override¶	public void inCoupler(String aNewCommand, int proposalNumber) {¶//		for (GIPCClient otherClientProxy : this.clients) {¶//        	¶//        	System.out.println("?????????????????????????");¶//        	System.out.println(otherClientProxy);¶//        	System.out.println(thisClient);¶//        	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");¶//            if (!otherClientProxy.equals(thisClient)) {¶//                ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);¶//                otherClientProxy.NotificationReceiver(CommunicationStateNames.COMMAND, newCommand);¶//            }¶//        }¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		System.out.println("A PROPOSAL NUMBER: "+proposalNumber);¶		¶	}¶	¶¶	@Override¶¶	public void simulationCommand(String aCommand) {¶¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism gotten from old GIPC simiulation command method");¶		System.out.println(mechanism);¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using gipc proxy server");¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			System.out.println("using RMI proxy server");¶		}¶		¶		ProposedStateSet.newCase(this, CLIENT_NAME, thisProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); ¶	}¶	¶	@Override	¶	public void quit(int aCode) {¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	¶	¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			try {¶				server.broadcastIPCMechanism(mechanism, this, thisProposalNumber, broadcastIPCMechanism);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶		}¶	}¶¶	@Override¶	public void processArgs(String[] args) throws RemoteException {¶		¶		¶	}¶¶	@Override¶	public void changeIPCMechanism(IPCMechanism mechanism, int proposalNumber) throws RemoteException {¶		¶		¶	}¶¶	@Override¶	public void broadcastMetaState(boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶	¶	}¶	¶	@Override¶	public void makeChangeIpcm(IPCMechanism mechanism, int proposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		System.out.print("GOT IPC MECHANISM CHANGE: "+mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, mechanism);¶		//thisProposalNumber++;¶		¶	}¶¶¶¶¶¶¶¶¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="1365" _type="Replace" date="Tue May 03 19:44:27 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9110" docExpressionCount="832" docLength="9779" endLine="224" insertionLength="15" int_docASTNodeCount="1183" int_docActiveCodeLength="9095" int_docExpressionCount="831" int_docLength="9764" length="18" offset="8003" startLine="224" starttimestamp="1651619386199" timestamp="2081683">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1367" _type="Replace" date="Tue May 03 19:44:27 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9107" docExpressionCount="832" docLength="9776" endLine="226" insertionLength="15" int_docASTNodeCount="1183" int_docActiveCodeLength="9092" int_docExpressionCount="831" int_docLength="9761" length="18" offset="8091" startLine="226" starttimestamp="1651619386199" timestamp="2081697">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1368" _type="Replace" date="Tue May 03 19:44:27 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9104" docExpressionCount="832" docLength="9773" endLine="259" insertionLength="15" int_docASTNodeCount="1183" int_docActiveCodeLength="9089" int_docExpressionCount="831" int_docLength="9758" length="18" offset="8837" startLine="259" starttimestamp="1651619386199" timestamp="2081714">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1369" _type="Replace" date="Tue May 03 19:44:27 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9104" docExpressionCount="832" docLength="9770" endLine="292" insertionLength="15" int_docASTNodeCount="1184" int_docActiveCodeLength="9104" int_docExpressionCount="832" int_docLength="9755" length="18" offset="9719" startLine="292" starttimestamp="1651619386199" timestamp="2081730">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1371" _type="Replace" date="Tue May 03 19:44:30 EDT 2022" docASTNodeCount="1184" docActiveCodeLength="9101" docExpressionCount="832" docLength="9767" endLine="70" insertionLength="15" int_docASTNodeCount="1179" int_docActiveCodeLength="9086" int_docExpressionCount="831" int_docLength="9752" length="18" offset="2824" startLine="70" starttimestamp="1651619386199" timestamp="2084796">
    <deletedText><![CDATA[thisProposalNumber]]></deletedText>
    <insertedText><![CDATA[aProposalNumber]]></insertedText>
  </DocumentChange>
  <Command __id="1380" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:44:34 EDT 2022" docASTNodeCount="784" docActiveCodeLength="5546" docExpressionCount="567" docLength="6453" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2088601">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipcNio.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;¶import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import nioExample.exampleClientReadThread;¶import readThread.ClientReadThread;¶import readThread.ReadThreadInterface;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposalMade;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶¶@Tags({ DistributedTags.CLIENT_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO })¶public class ClientRmiGipcNio extends ClientRmiGipc implements ClientInterfaceNio{¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIPCMechanism = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void init(String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶					//0, // do not allow any incoming messages¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶¶		reader = new ClientReadThread(this);¶	¶		readThread = new Thread(reader);¶				¶¶		readThread.start();¶		¶¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	@Override¶	public void connected(SocketChannel aSocketChannel) {¶		// TODO Auto-generated method stub¶		nioManager.addReadListener(aSocketChannel, this);¶		System.out.println("New Client connected to server!!!");¶		¶	}¶¶	@Override¶	public void notConnected(SocketChannel arg0, Exception arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {¶		// TODO Auto-generated method stub¶		¶	}¶¶	@Override¶	public void socketChannelRead(SocketChannel arg0, ByteBuffer aMessage, int arg2) {¶		// TODO Auto-generated method stub¶		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		//TODO NEED TO PARSE THE PROPOSAL NUMBER¶		String aMessageString = new String(copy.array());¶		System.out.println(aMessageString);¶		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );¶		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);¶		System.out.println("CLIENT COMMAND: "+aMessageString);¶		//int aProposalNumber = 0;¶		¶		//ByteBuffer bufferCommand = ByteBuffer.wrap(aMessageString.getBytes());¶		//boundedBuffer.add(bufferCommand);¶		¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		//RemoteProposeRequestReceived.newCase(this, CLIENT_NAME, aProposalNumber, aMessageString);¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		// TODO Auto-generated method stub¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(String aCommand) {¶		String originalCommand = aCommand;¶		IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶¶		aProposalNumber = 1 + aProposalNumber;¶		System.out.println("A PROPOSAL NUMBER: "+aProposalNumber);¶		¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		clientOutCoupler = new ClientOutCoupler(server, this, CLIENT_NAME, true);¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		aCommand = aCommand.concat(String.valueOf(aProposalNumber));¶		System.out.println("COMMAND + PROPOSAL NUMBER:"+aCommand);¶		ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		//RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		ProposalMade.newCase(this, CommunicationStateNames.COMMAND, -1, originalCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶	¶¶		¶		¶		¶		//commandProcessor.setInputString(originalCommand); // all commands go to the first command window¶		¶		//commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶//	@Override¶//	public void argumentProcessor(String aCommand) {¶//		// TODO Auto-generated method stub¶//		¶//	}¶¶	@Override¶	public void nioInit(String[] args) {¶		¶	}¶¶	@Override¶	public void simulateCommand(String aCommand) {¶		¶		¶	}¶		¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1392" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:44:41 EDT 2022" docASTNodeCount="1641" docActiveCodeLength="12543" docExpressionCount="1106" docLength="15122" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2094974">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigurer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.beans.PropertyChangeListener;¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.AccessException;¶import java.rmi.NotBoundException;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import assignments.util.mainArgs.ClientArgsProcessor;¶import coupledsims.Simulation;¶import coupledsims.Simulation1;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import inputport.nio.manager.factories.classes.AConnectCommandFactory;¶import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import main.BeauAndersonFinalProject;¶import readThread.ReadThreadInterface;¶import server.remote.ServerRemoteInterfaceGIPC;¶import server.remote.ServerRemoteObjectGIPC;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationReceived;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶import util.trace.port.rpc.rmi.RMIObjectLookedUp;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})¶public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {¶	¶	protected int NUM_EXPERIMENT_COMMANDS = 500;¶	¶	HalloweenCommandProcessor commandProcessor;¶¶	¶	public static final String EXPERIMENT_COMMAND_2 = "undo";¶	¶	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";¶¶	protected PropertyChangeListener simulationCoupler;¶	ServerRemoteInterfaceGIPC server = null;¶	ServerRemoteInterfaceGIPC serverGIPC = null;¶	private static String SERVER_NAME;¶	private static String CLIENT_NAME;¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶¶¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶	private static String GIPC_SERVER_NAME ;¶	private static boolean broadcastIPCMechanism = false;¶	private static int aProposalNumber;¶	¶	PropertyChangeListener clientOutCoupler;¶¶	@Override¶	public HalloweenCommandProcessor createSimulation(final String aPrefix) {¶		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,¶				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,¶				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);¶	}¶¶¶	@Override¶	public void processArgs(final String[] args) {¶	¶¶		// Make sure you set this property when processing args¶		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶¶		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶				//ClientArgsProcessor.getServerHost(args);¶		CLIENT_NAME = ClientArgsProcessor.getClientName(args);¶¶¶		¶		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);¶		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);¶		¶	}¶	¶//	public void RMIAndGIPCClient() {¶//        new int i = 1+1;¶//    }¶    public static void getSingleton() {¶//        return thisClient;¶    }¶//    @Override¶//    protected void init(final String[] arguments) {¶//        this.setTracing();¶//        super.init(arguments);¶//        ¶//        String hostName = ClientArgsProcessor.getServerHost(arguments);¶//        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//        ¶//        this.locateGIPCRegistry(port, hostName);¶//        this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//        System.out.println("should be registered");¶//        System.out.println(this.proxyServer);¶////        System.out.println(thisClient.getClass());¶////        System.out.println(thisClient.getClass().getName());¶//        System.out.println(this);¶//        this.proxyServer.registerGIPCClients();¶//    }¶    ¶	@Override¶	public void atomicBroadcast(final boolean wellWhatShould) {¶		return;¶	}¶	¶	¶¶	@Override¶	public void init(final String[] args) {¶		setTracing();¶¶		this.processArgs(args);¶		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);¶		¶		System.out.println("get location and stuff");¶¶		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);¶		¶		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);¶		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);¶		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");¶¶¶		try {¶			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			System.out.println("well this get printed");¶			e.printStackTrace();¶		}¶		¶¶		Registry rmiRegistry = null;¶		try {¶			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶		} catch (RemoteException e3) {¶			e3.printStackTrace();¶		}¶¶		¶		try {¶			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);¶			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);¶		} catch (AccessException e2) {¶			¶			e2.printStackTrace();¶		} catch (RemoteException e2) {¶¶			e2.printStackTrace();¶		} catch (NotBoundException e2) {¶			e2.printStackTrace();¶		}¶¶¶		try {¶			UnicastRemoteObject.exportObject(this, 0);¶		} catch (RemoteException e1) {¶			e1.printStackTrace();¶		}¶¶¶		try {¶			server.registerClientRMI((ClientInterfaceGipc) this);¶		} catch (RemoteException e) {¶			e.printStackTrace();¶		}¶		¶		¶		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		¶		System.out.println("added server as a property change listener of client");¶	}¶¶//  @Override¶//  protected void init(final String[] arguments) {¶//      this.setTracing();¶//      super.init(arguments);¶//      ¶//      String hostName = ClientArgsProcessor.getServerHost(arguments);¶//      final int port = ClientArgsProcessor.getGIPCPort(arguments);¶//      ¶//      this.locateGIPCRegistry(port, hostName);¶//      this.lookupGIPCServerProxy();¶//¶//		try {¶//			this.exportGIPCClientProxy();¶//		} catch (RemoteException e) {¶//			// TODO Auto-generated catch block¶//			e.printStackTrace();¶//		}¶//      System.out.println("should be registered");¶//      System.out.println(this.proxyServer);¶////      System.out.println(thisClient.getClass());¶////      System.out.println(thisClient.getClass().getName());¶//      System.out.println(this);¶//      this.proxyServer.registerGIPCClients();¶//  }¶	¶	@Override¶	public void inCoupler(final String aNewCommand, final int proposalNumber) {¶		¶		System.out.println("recieved broadcased command: "+ aNewCommand);¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		commandProcessor.processCommand(aNewCommand);¶		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);¶		System.out.println("executed command");¶		¶	}¶	¶	@Override¶	¶	public void simulateCommand(final String aCommand) {¶		¶		final IPCMechanism mechanism = getIPCMechanism();¶¶		¶		¶		if(mechanism.toString().equals("GIPC")) {¶						¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		if(mechanism.toString().equals("RMI")) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶		¶¶		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);¶		try {¶			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			¶			e.printStackTrace();¶		}¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶	}¶	¶	@Override	¶	public void quit(final int aCode) {¶		¶		¶		System.exit(aCode);¶	}¶	¶	@Override¶	public void localProcessingOnly(final boolean newValue) {¶		super.localProcessingOnly(newValue);¶		if (isLocalProcessingOnly()) {¶			commandProcessor.removePropertyChangeListener(clientOutCoupler);¶			¶		} else {¶			commandProcessor.addPropertyChangeListener(clientOutCoupler);¶			¶		}¶	}¶	¶	@Override¶	public void broadcastMetaState(final boolean broadcast) {¶		broadcastIPCMechanism = broadcast;¶		setBroadcastMetaState(broadcast);¶		¶	}¶	¶	@Override¶	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {¶		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		setIPCMechanism(mechanism);¶		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);¶		aNewProposalNumber++;¶	}¶	¶	protected NIOManager nioManager = NIOManagerFactory.getSingleton();¶	int aServerPort;¶	protected SocketChannel socketChannel;¶	protected boolean broadcastIpcMechanism1 = false;¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread readThread = null;¶	¶	@Override¶	public void nioInit(final String[] args) {¶		setTracing();¶		setFactories();¶		¶		aServerPort = ClientArgsProcessor.getNIOServerPort(args);¶		System.out.println("NIO SERVER PORT: "+aServerPort);¶		¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			nioManager.connect(socketChannel, aServerAddress, aServerPort, ¶		¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶		¶	¶		readThread = new Thread(reader);¶				¶		final String clientName = "client";¶		readThread.setName(clientName);¶		¶		¶		readThread.start();¶		¶		¶		super.init(args);¶	}¶	¶	@Override¶	public void setFactories() {¶		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));¶	}¶¶	¶¶	@Override¶	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {¶		¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();	¶		¶	}¶	¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		¶		return boundedBuffer;¶	}¶	¶	@Override¶	public void simulationCommand(final String aCommand) {¶¶		final IPCMechanism mechanism = getIPCMechanism();¶		System.out.println("IPC Mechanism: " + mechanism.toString());¶¶		// IPC Mechanism Change¶		ProposedStateSet.newCase(this, super.CLIENT_NAME, super."), Diff(DELETE,"this"), Diff(INSERT,"a"), Diff(EQUAL,"ProposalNumber, mechanism);¶		try {¶¶			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶¶		if (!mechanism.toString().equals("NIO")) {¶			System.out.println("IPC Mechanism is GIPC or RMI");¶			super.simulationCommand(aCommand);¶			return;¶		}¶¶		commandProcessor.removePropertyChangeListener(clientOutCoupler);¶		¶		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());¶		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);¶		nioManager.write(socketChannel, bufferCommand, this);¶¶		¶		¶		¶		commandProcessor.setInputString(aCommand); // all commands go to the first command window¶		¶		commandProcessor.addPropertyChangeListener(clientOutCoupler);¶		aProposalNumber = 1 + aProposalNumber;¶	}¶	¶	@Override¶	public HalloweenCommandProcessor getCommandProcessor() {¶		return commandProcessor;¶	}¶¶	¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		System.out.println("finally worked");¶		nioManager.addReadListener(aSocketChannel, this);¶		¶		¶	}¶¶	@Override¶	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {¶		System.out.println("this is stupid, dont want to do this");¶		¶	}¶¶	@Override¶	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {¶		System.out.println("placeholder....for credit");¶		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {¶		System.out.println("lalalallalalalalalaa");¶		¶	}¶	¶//	@Override¶//  public void experimentInput() {¶//      long start = System.currentTimeMillis();¶//      PerformanceExperimentStarted.newCase(this, start, commands);¶//      boolean oldTrace = isTrace();¶//      this.trace(false);¶//      for (int i = 0; i < commands; i++) {¶//          this.simulationCommand(tryCommand);¶//      }¶//      this.trace(oldTrace);¶//      long end = System.currentTimeMillis();¶//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶//      ¶//      ¶//      System.out.println("Printing out the time:");¶//      System.out.println(end - start);¶//  }¶	¶	@Override¶	protected void setTracing() {¶¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package client;

import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ClientArgsProcessor;
import coupledsims.Simulation;
import coupledsims.Simulation1;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import main.BeauAndersonFinalProject;
import readThread.ReadThreadInterface;
import server.remote.ServerRemoteInterfaceGIPC;
import server.remote.ServerRemoteObjectGIPC;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;

import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationReceived;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;

@Tags({DistributedTags.CLIENT_CONFIGURER, DistributedTags.RMI, DistributedTags.GIPC, DistributedTags.NIO})
public class ClientConfigurer  extends ClientRmiGipc implements ClientInterfaceNio {
	
	protected int NUM_EXPERIMENT_COMMANDS = 500;
	
	HalloweenCommandProcessor commandProcessor;

	
	public static final String EXPERIMENT_COMMAND_2 = "undo";
	
	public static final String EXPERIMENT_COMMAND_1 = "move 1 -1";

	protected PropertyChangeListener simulationCoupler;
	ServerRemoteInterfaceGIPC server = null;
	ServerRemoteInterfaceGIPC serverGIPC = null;
	private static String SERVER_NAME;
	private static String CLIENT_NAME;

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;


	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	private static String GIPC_SERVER_NAME ;
	private static boolean broadcastIPCMechanism = false;
	private static int aProposalNumber;
	
	PropertyChangeListener clientOutCoupler;

	@Override
	public HalloweenCommandProcessor createSimulation(final String aPrefix) {
		return BeauAndersonFinalProject.createSimulation(aPrefix, Simulation1.SIMULATION1_X_OFFSET,
				Simulation.SIMULATION_Y_OFFSET, Simulation.SIMULATION_WIDTH, Simulation.SIMULATION_HEIGHT,
				Simulation1.SIMULATION1_X_OFFSET, Simulation.SIMULATION_Y_OFFSET);
	}


	@Override
	public void processArgs(final String[] args) {
	

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ClientArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ClientArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
				//ClientArgsProcessor.getServerHost(args);
		CLIENT_NAME = ClientArgsProcessor.getClientName(args);


		
		GIPC_SERVER_PORT = ClientArgsProcessor.getGIPCPort(args);
		GIPC_SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
	}
	
//	public void RMIAndGIPCClient() {
//        new int i = 1+1;
//    }
    public static void getSingleton() {
//        return thisClient;
    }
//    @Override
//    protected void init(final String[] arguments) {
//        this.setTracing();
//        super.init(arguments);
//        
//        String hostName = ClientArgsProcessor.getServerHost(arguments);
//        final int port = ClientArgsProcessor.getGIPCPort(arguments);
//        
//        this.locateGIPCRegistry(port, hostName);
//        this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//        System.out.println("should be registered");
//        System.out.println(this.proxyServer);
////        System.out.println(thisClient.getClass());
////        System.out.println(thisClient.getClass().getName());
//        System.out.println(this);
//        this.proxyServer.registerGIPCClients();
//    }
    
	@Override
	public void atomicBroadcast(final boolean wellWhatShould) {
		return;
	}
	
	

	@Override
	public void init(final String[] args) {
		setTracing();

		this.processArgs(args);
		commandProcessor = createSimulation(Simulation1.SIMULATION1_PREFIX);
		
		System.out.println("get location and stuff");

		gipcRegistry = GIPCLocateRegistry.getRegistry(GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		GIPCRegistryLocated.newCase(this, GIPC_SERVER_NAME, GIPC_SERVER_PORT, CLIENT_NAME);
		
		serverGIPC = (ServerRemoteInterfaceGIPC) gipcRegistry.lookup(ServerRemoteObjectGIPC.class, SERVER_NAME);
		GIPCObjectLookedUp.newCase(this, serverGIPC, ServerRemoteObjectGIPC.class, SERVER_NAME, gipcRegistry);
		System.out.println("worked!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");


		try {
			serverGIPC.registerClientGIPC((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			System.out.println("well this get printed");
			e.printStackTrace();
		}
		

		Registry rmiRegistry = null;
		try {
			rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
		} catch (RemoteException e3) {
			e3.printStackTrace();
		}

		
		try {
			server = (ServerRemoteInterfaceGIPC) rmiRegistry.lookup(SERVER_NAME);
			RMIObjectLookedUp.newCase(this, server, SERVER_NAME, rmiRegistry);
		} catch (AccessException e2) {
			
			e2.printStackTrace();
		} catch (RemoteException e2) {

			e2.printStackTrace();
		} catch (NotBoundException e2) {
			e2.printStackTrace();
		}


		try {
			UnicastRemoteObject.exportObject(this, 0);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}


		try {
			server.registerClientRMI((ClientInterfaceGipc) this);
		} catch (RemoteException e) {
			e.printStackTrace();
		}
		
		
		clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		
		System.out.println("added server as a property change listener of client");
	}

//  @Override
//  protected void init(final String[] arguments) {
//      this.setTracing();
//      super.init(arguments);
//      
//      String hostName = ClientArgsProcessor.getServerHost(arguments);
//      final int port = ClientArgsProcessor.getGIPCPort(arguments);
//      
//      this.locateGIPCRegistry(port, hostName);
//      this.lookupGIPCServerProxy();
//
//		try {
//			this.exportGIPCClientProxy();
//		} catch (RemoteException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//      System.out.println("should be registered");
//      System.out.println(this.proxyServer);
////      System.out.println(thisClient.getClass());
////      System.out.println(thisClient.getClass().getName());
//      System.out.println(this);
//      this.proxyServer.registerGIPCClients();
//  }
	
	@Override
	public void inCoupler(final String aNewCommand, final int proposalNumber) {
		
		System.out.println("recieved broadcased command: "+ aNewCommand);
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		commandProcessor.processCommand(aNewCommand);
		ProposedStateSet.newCase(this, CLIENT_NAME, proposalNumber, aNewCommand);
		System.out.println("executed command");
		
	}
	
	@Override
	
	public void simulateCommand(final String aCommand) {
		
		final IPCMechanism mechanism = getIPCMechanism();

		
		
		if(mechanism.toString().equals("GIPC")) {
						
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(serverGIPC, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		if(mechanism.toString().equals("RMI")) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			clientOutCoupler = new ClientOutCoupler(server, (ClientInterfaceGipc) this, CLIENT_NAME, false);
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
		

		ProposedStateSet.newCase(this, CLIENT_NAME, aProposalNumber, mechanism);
		try {
			server.broadcastIPCMechanism(mechanism, (ClientInterfaceGipc) this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			
			e.printStackTrace();
		}
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
	}
	
	@Override	
	public void quit(final int aCode) {
		
		
		System.exit(aCode);
	}
	
	@Override
	public void localProcessingOnly(final boolean newValue) {
		super.localProcessingOnly(newValue);
		if (isLocalProcessingOnly()) {
			commandProcessor.removePropertyChangeListener(clientOutCoupler);
			
		} else {
			commandProcessor.addPropertyChangeListener(clientOutCoupler);
			
		}
	}
	
	@Override
	public void broadcastMetaState(final boolean broadcast) {
		broadcastIPCMechanism = broadcast;
		setBroadcastMetaState(broadcast);
		
	}
	
	@Override
	public void changeIPCMechanism(final IPCMechanism mechanism, int aNewProposalNumber) {
		ProposalLearnedNotificationReceived.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		setIPCMechanism(mechanism);
		ProposedStateSet.newCase(this, CLIENT_NAME, aNewProposalNumber, mechanism);
		aNewProposalNumber++;
	}
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	protected SocketChannel socketChannel;
	protected boolean broadcastIpcMechanism1 = false;
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	
	@Override
	public void nioInit(final String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ClientArgsProcessor.getNIOServerPort(args);
		System.out.println("NIO SERVER PORT: "+aServerPort);
		
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
		
					SelectionKey.OP_READ,
					this);
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	
		readThread = new Thread(reader);
				
		final String clientName = "client";
		readThread.setName(clientName);
		
		
		readThread.start();
		
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
	}

	

	@Override
	public void socketChannelRead(final SocketChannel argumentone, final ByteBuffer aMessage, final int argumenttwo) {
		
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();	
		
	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		
		return boundedBuffer;
	}
	
	@Override
	public void simulationCommand(final String aCommand) {

		final IPCMechanism mechanism = getIPCMechanism();
		System.out.println("IPC Mechanism: " + mechanism.toString());

		// IPC Mechanism Change
		ProposedStateSet.newCase(this, super.CLIENT_NAME, super.aProposalNumber, mechanism);
		try {

			server.broadcastIPCMechanism(mechanism, this, aProposalNumber, broadcastIPCMechanism);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (!mechanism.toString().equals("NIO")) {
			System.out.println("IPC Mechanism is GIPC or RMI");
			super.simulationCommand(aCommand);
			return;
		}

		commandProcessor.removePropertyChangeListener(clientOutCoupler);
		
		final ByteBuffer bufferCommand = ByteBuffer.wrap(aCommand.getBytes());
		RemoteProposeRequestSent.newCase(this, CLIENT_NAME, aProposalNumber, aCommand);
		nioManager.write(socketChannel, bufferCommand, this);

		
		
		
		commandProcessor.setInputString(aCommand); // all commands go to the first command window
		
		commandProcessor.addPropertyChangeListener(clientOutCoupler);
		aProposalNumber = 1 + aProposalNumber;
	}
	
	@Override
	public HalloweenCommandProcessor getCommandProcessor() {
		return commandProcessor;
	}

	
	@Override
	public void connected(final SocketChannel aSocketChannel) {
		System.out.println("finally worked");
		nioManager.addReadListener(aSocketChannel, this);
		
		
	}

	@Override
	public void notConnected(final SocketChannel argumentone, final Exception argumenttwo) {
		System.out.println("this is stupid, dont want to do this");
		
	}

	@Override
	public void written(final SocketChannel arg0, final ByteBuffer argumentone, final int argumenttwo) {
		System.out.println("placeholder....for credit");
		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel argumentone, final SocketChannel argumenttwo) {
		System.out.println("lalalallalalalalalaa");
		
	}
	
//	@Override
//  public void experimentInput() {
//      long start = System.currentTimeMillis();
//      PerformanceExperimentStarted.newCase(this, start, commands);
//      boolean oldTrace = isTrace();
//      this.trace(false);
//      for (int i = 0; i < commands; i++) {
//          this.simulationCommand(tryCommand);
//      }
//      this.trace(oldTrace);
//      long end = System.currentTimeMillis();
//      PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
//      
//      
//      System.out.println("Printing out the time:");
//      System.out.println(end - start);
//  }
	
	@Override
	protected void setTracing() {

		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

	}
}
]]></snapshot>
  </Command>
  <Command __id="1399" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:44:44 EDT 2022" docASTNodeCount="96" docActiveCodeLength="777" docExpressionCount="56" docLength="1196" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2098696">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\checks\RunTests.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package checks;¶¶import grader.basics.execution.BasicProjectExecution;¶import gradingTools.comp533s22.assignment6.S22Assignment6Suite;¶import trace.grader.basics.GraderBasicsTraceUtility;¶¶//import util.trace.Tracer;¶public class RunTests {¶	public static final int MAX_PRINTED_TRACES = 800;¶	public static final int MAX_TRACES = 2000;¶	public static final int TIME_OUT = 5;¶¶	¶	public static void main(final String[] args) {¶		// if you set this to false, grader steps will not be traced¶		GraderBasicsTraceUtility.setTracerShowInfo(true);	¶		// if you set this to false, all grader steps will be traced,¶		// not just the ones that failed		¶		GraderBasicsTraceUtility.setBufferTracedMessages(true);¶		// Change this number if a test trace gets longer than 600 and is clipped¶		GraderBasicsTraceUtility.setMaxPrintedTraces(MAX_PRINTED_TRACES);¶		// Change this number if all traces together are longer than 2000¶		GraderBasicsTraceUtility.setMaxTraces(MAX_TRACES);¶		// Change this number if your process times out prematurely¶		BasicProjectExecution.setProcessTimeOut(TIME_OUT);¶		// You need to always call such a method¶		S22Assignment6Suite.main(args);¶¶	}¶}¶¶")]]]></diff>
  </Command>
  <Command __id="1427" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:50:54 EDT 2022" docASTNodeCount="555" docActiveCodeLength="3823" docExpressionCount="387" docLength="4167" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2468476">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\AnNIOManagerPrintClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nioExample;

import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;

public class AnNIOManagerPrintClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener, FakeClientInterface{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;

	protected AnNIOManagerPrintClient(int aServerPort) {
		setTracing();
//		setFactories();
		initialize(aServerPort);
	}

//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}

	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			String aNextLine = scanner.nextLine();
			// wrap writes to the buffer and then flips it
			ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			nioManager.write(socketChannel, aWriteMessage, this);
		}
	}

	void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					//0, // do not allow any incoming messages
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new exampleClientReadThread(this);
						
		//Create new readThread
		readThread = new Thread(reader);
				
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void connected(SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(SocketChannel theSocketChannel, Exception exception) {

	}

	@Override
	public void written(SocketChannel socketChannel, ByteBuffer theWriteBuffer, int sendId) {
		System.out.println("client channel has written");
	}

	@Override
	public void socketChannelRead(SocketChannel socketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel arg1) {
				
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

}]]></snapshot>
  </Command>
  <DocumentChange __id="1433" _type="Insert" date="Tue May 03 19:51:11 EDT 2022" docASTNodeCount="556" docActiveCodeLength="3829" docExpressionCount="387" docLength="4173" length="6" offset="1891" repeat="2" starttimestamp="1651619386199" timestamp="2484961" timestamp2="2484963">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1436" _type="PauseCommand" date="Tue May 03 19:51:13 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2487704">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2743]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1435" _type="SelectTextCommand" caretOffset="637" date="Tue May 03 19:51:13 EDT 2022" end="656" start="637" starttimestamp="1651619386199" timestamp="2487704" />
  <Command __id="1437" _type="MoveCaretCommand" caretOffset="638" date="Tue May 03 19:51:14 EDT 2022" docOffset="1930" starttimestamp="1651619386199" timestamp="2487838" />
  <Command __id="1438" _type="MoveCaretCommand" caretOffset="656" date="Tue May 03 19:51:14 EDT 2022" docOffset="1948" starttimestamp="1651619386199" timestamp="2488279" />
  <Command __id="1439" _type="SelectTextCommand" caretOffset="658" date="Tue May 03 19:51:14 EDT 2022" end="658" start="646" starttimestamp="1651619386199" timestamp="2488421" />
  <Command __id="1440" _type="SelectTextCommand" caretOffset="663" date="Tue May 03 19:51:14 EDT 2022" end="663" start="642" starttimestamp="1651619386199" timestamp="2488707" />
  <Command __id="1442" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:15 EDT 2022" starttimestamp="1651619386199" timestamp="2489511" />
  <Command __id="1444" _type="PauseCommand" date="Tue May 03 19:51:16 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2490705">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1194]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1443" _type="SelectTextCommand" caretOffset="794" date="Tue May 03 19:51:16 EDT 2022" end="794" start="676" starttimestamp="1651619386199" timestamp="2490705" />
  <Command __id="1446" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:16 EDT 2022" starttimestamp="1651619386199" timestamp="2490791" />
  <Command __id="1448" _type="PauseCommand" date="Tue May 03 19:51:18 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2492631">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1840]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1447" _type="ShellCommand" date="Tue May 03 19:51:18 EDT 2022" starttimestamp="1651619386199" timestamp="2492631" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1449" _type="ShellCommand" date="Tue May 03 19:51:18 EDT 2022" starttimestamp="1651619386199" timestamp="2492737" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1453" _type="PauseCommand" date="Tue May 03 19:51:20 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2494012">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1257]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1452" _type="ShellCommand" date="Tue May 03 19:51:20 EDT 2022" starttimestamp="1651619386199" timestamp="2494012" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1454" _type="ShellCommand" date="Tue May 03 19:51:20 EDT 2022" starttimestamp="1651619386199" timestamp="2494153" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1457" _type="MoveCaretCommand" caretOffset="917" date="Tue May 03 19:51:20 EDT 2022" docOffset="2209" starttimestamp="1651619386199" timestamp="2494645" />
  <Command __id="1458" _type="SelectTextCommand" caretOffset="919" date="Tue May 03 19:51:21 EDT 2022" end="919" start="917" starttimestamp="1651619386199" timestamp="2494802" />
  <Command __id="1459" _type="SelectTextCommand" caretOffset="950" date="Tue May 03 19:51:21 EDT 2022" end="950" start="899" starttimestamp="1651619386199" timestamp="2494907" />
  <Command __id="1461" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:21 EDT 2022" starttimestamp="1651619386199" timestamp="2495210" />
  <Command __id="1463" _type="PauseCommand" date="Tue May 03 19:51:24 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2498172">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2962]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1462" _type="MoveCaretCommand" caretOffset="1391" date="Tue May 03 19:51:24 EDT 2022" docOffset="2683" starttimestamp="1651619386199" timestamp="2498172" />
  <Command __id="1464" _type="SelectTextCommand" caretOffset="1391" date="Tue May 03 19:51:24 EDT 2022" end="1391" start="1388" starttimestamp="1651619386199" timestamp="2498294" />
  <Command __id="1465" _type="SelectTextCommand" caretOffset="1421" date="Tue May 03 19:51:24 EDT 2022" end="1421" start="1372" starttimestamp="1651619386199" timestamp="2498413" />
  <Command __id="1467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:24 EDT 2022" starttimestamp="1651619386199" timestamp="2498660" />
  <Command __id="1469" _type="PauseCommand" date="Tue May 03 19:51:26 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2500077">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1417]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1468" _type="MoveCaretCommand" caretOffset="1503" date="Tue May 03 19:51:26 EDT 2022" docOffset="2795" starttimestamp="1651619386199" timestamp="2500077" />
  <Command __id="1470" _type="SelectTextCommand" caretOffset="1506" date="Tue May 03 19:51:26 EDT 2022" end="1506" start="1503" starttimestamp="1651619386199" timestamp="2500219" />
  <Command __id="1471" _type="SelectTextCommand" caretOffset="1529" date="Tue May 03 19:51:26 EDT 2022" end="1529" start="1492" starttimestamp="1651619386199" timestamp="2500326" />
  <Command __id="1473" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:26 EDT 2022" starttimestamp="1651619386199" timestamp="2500495" />
  <Command __id="1474" _type="MoveCaretCommand" caretOffset="1559" date="Tue May 03 19:51:27 EDT 2022" docOffset="2851" starttimestamp="1651619386199" timestamp="2500893" />
  <Command __id="1475" _type="SelectTextCommand" caretOffset="1561" date="Tue May 03 19:51:27 EDT 2022" end="1561" start="1558" starttimestamp="1651619386199" timestamp="2501129" />
  <Command __id="1476" _type="SelectTextCommand" caretOffset="1574" date="Tue May 03 19:51:27 EDT 2022" end="1574" start="1547" starttimestamp="1651619386199" timestamp="2501343" />
  <Command __id="1478" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:27 EDT 2022" starttimestamp="1651619386199" timestamp="2501507" />
  <Command __id="1479" _type="MoveCaretCommand" caretOffset="1597" date="Tue May 03 19:51:28 EDT 2022" docOffset="2889" starttimestamp="1651619386199" timestamp="2502481" />
  <Command __id="1480" _type="SelectTextCommand" caretOffset="1598" date="Tue May 03 19:51:28 EDT 2022" end="1598" start="1593" starttimestamp="1651619386199" timestamp="2502618" />
  <Command __id="1481" _type="SelectTextCommand" caretOffset="1626" date="Tue May 03 19:51:28 EDT 2022" end="1626" start="1589" starttimestamp="1651619386199" timestamp="2502758" />
  <Command __id="1483" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:29 EDT 2022" starttimestamp="1651619386199" timestamp="2502930" />
  <Command __id="1484" _type="MoveCaretCommand" caretOffset="1553" date="Tue May 03 19:51:29 EDT 2022" docOffset="2845" starttimestamp="1651619386199" timestamp="2503477" />
  <Command __id="1485" _type="MoveCaretCommand" caretOffset="1586" date="Tue May 03 19:51:30 EDT 2022" docOffset="2878" starttimestamp="1651619386199" timestamp="2504017" />
  <Command __id="1487" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:30 EDT 2022" starttimestamp="1651619386199" timestamp="2504111" />
  <Command __id="1489" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:30 EDT 2022" starttimestamp="1651619386199" timestamp="2504396" />
  <Command __id="1491" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:30 EDT 2022" starttimestamp="1651619386199" timestamp="2504581" />
  <Command __id="1493" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:31 EDT 2022" starttimestamp="1651619386199" timestamp="2504834" />
  <Command __id="1494" _type="MoveCaretCommand" caretOffset="1542" date="Tue May 03 19:51:31 EDT 2022" docOffset="2834" starttimestamp="1651619386199" timestamp="2505282" />
  <Command __id="1496" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:31 EDT 2022" starttimestamp="1651619386199" timestamp="2505493" />
  <Command __id="1498" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:31 EDT 2022" starttimestamp="1651619386199" timestamp="2505673" />
  <Command __id="1500" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:32 EDT 2022" starttimestamp="1651619386199" timestamp="2505824" />
  <Command __id="1502" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:32 EDT 2022" starttimestamp="1651619386199" timestamp="2506007" />
  <Command __id="1504" _type="PauseCommand" date="Tue May 03 19:51:34 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2508525">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2518]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1503" _type="ShellCommand" date="Tue May 03 19:51:34 EDT 2022" starttimestamp="1651619386199" timestamp="2508525" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1505" _type="ShellCommand" date="Tue May 03 19:51:34 EDT 2022" starttimestamp="1651619386199" timestamp="2508611" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1509" _type="PauseCommand" date="Tue May 03 19:51:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2510492">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1864]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1508" _type="ShellCommand" date="Tue May 03 19:51:36 EDT 2022" starttimestamp="1651619386199" timestamp="2510492" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1510" _type="ShellCommand" date="Tue May 03 19:51:36 EDT 2022" starttimestamp="1651619386199" timestamp="2510580" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1514" _type="PauseCommand" date="Tue May 03 19:51:38 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2512482">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1881]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1513" _type="ShellCommand" date="Tue May 03 19:51:38 EDT 2022" starttimestamp="1651619386199" timestamp="2512482" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1515" _type="ShellCommand" date="Tue May 03 19:51:38 EDT 2022" starttimestamp="1651619386199" timestamp="2512568" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1518" _type="ShellCommand" date="Tue May 03 19:51:39 EDT 2022" starttimestamp="1651619386199" timestamp="2513405" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1519" _type="ShellCommand" date="Tue May 03 19:51:39 EDT 2022" starttimestamp="1651619386199" timestamp="2513511" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1523" _type="PauseCommand" date="Tue May 03 19:51:41 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2515073">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1544]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1522" _type="ShellCommand" date="Tue May 03 19:51:41 EDT 2022" starttimestamp="1651619386199" timestamp="2515073" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1524" _type="ShellCommand" date="Tue May 03 19:51:41 EDT 2022" starttimestamp="1651619386199" timestamp="2515171" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1528" _type="PauseCommand" date="Tue May 03 19:51:44 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2518226">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[3035]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1527" _type="SelectTextCommand" caretOffset="1954" date="Tue May 03 19:51:44 EDT 2022" end="1954" start="1952" starttimestamp="1651619386199" timestamp="2518226" />
  <Command __id="1529" _type="MoveCaretCommand" caretOffset="1954" date="Tue May 03 19:51:44 EDT 2022" docOffset="3246" starttimestamp="1651619386199" timestamp="2518437" />
  <Command __id="1531" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:51:45 EDT 2022" starttimestamp="1651619386199" timestamp="2519328" />
  <Command __id="1533" _type="InsertStringCommand" date="Tue May 03 19:51:45 EDT 2022" starttimestamp="1651619386199" timestamp="2519699" timestamp2="2519699">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1535" _type="InsertStringCommand" date="Tue May 03 19:51:46 EDT 2022" starttimestamp="1651619386199" timestamp="2519909" timestamp2="2519909">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1537" _type="InsertStringCommand" date="Tue May 03 19:51:46 EDT 2022" starttimestamp="1651619386199" timestamp="2520020" timestamp2="2520020">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1539" _type="InsertStringCommand" date="Tue May 03 19:51:46 EDT 2022" starttimestamp="1651619386199" timestamp="2520351" timestamp2="2520351">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1541" _type="PauseCommand" date="Tue May 03 19:51:47 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2521692">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1341]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1540" _type="MoveCaretCommand" caretOffset="1954" date="Tue May 03 19:51:47 EDT 2022" docOffset="3246" starttimestamp="1651619386199" timestamp="2521692" />
  <Command __id="1542" _type="SelectTextCommand" caretOffset="1969" date="Tue May 03 19:51:48 EDT 2022" end="1969" start="1953" starttimestamp="1651619386199" timestamp="2521820" />
  <Command __id="1544" _type="PauseCommand" date="Tue May 03 19:51:49 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2523383">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1563]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1543" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:51:49 EDT 2022" starttimestamp="1651619386199" timestamp="2523383" />
  <Command __id="1545" _type="EclipseCommand" commandID="" date="Tue May 03 19:51:49 EDT 2022" starttimestamp="1651619386199" timestamp="2523469" />
  <Command __id="1546" _type="EclipseCommand" commandID="" date="Tue May 03 19:51:49 EDT 2022" starttimestamp="1651619386199" timestamp="2523485" />
  <Command __id="1548" _type="PauseCommand" date="Tue May 03 19:51:52 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2526146">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2661]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1547" _type="MoveCaretCommand" caretOffset="2080" date="Tue May 03 19:51:52 EDT 2022" docOffset="3372" starttimestamp="1651619386199" timestamp="2526146" />
  <Command __id="1550" _type="PauseCommand" date="Tue May 03 19:51:53 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2527698">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1552]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1549" _type="ShellCommand" date="Tue May 03 19:51:53 EDT 2022" starttimestamp="1651619386199" timestamp="2527698" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1551" _type="ShellCommand" date="Tue May 03 19:51:53 EDT 2022" starttimestamp="1651619386199" timestamp="2527796" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1555" _type="PauseCommand" date="Tue May 03 19:51:55 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2529065">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1250]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1554" _type="ShellCommand" date="Tue May 03 19:51:55 EDT 2022" starttimestamp="1651619386199" timestamp="2529065" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1556" _type="ShellCommand" date="Tue May 03 19:51:55 EDT 2022" starttimestamp="1651619386199" timestamp="2529181" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1560" _type="PauseCommand" date="Tue May 03 19:51:57 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2530865">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1671]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1559" _type="ShellCommand" date="Tue May 03 19:51:57 EDT 2022" starttimestamp="1651619386199" timestamp="2530865" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1561" _type="ShellCommand" date="Tue May 03 19:51:57 EDT 2022" starttimestamp="1651619386199" timestamp="2530955" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1565" _type="PauseCommand" date="Tue May 03 19:51:58 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2532379">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1403]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1564" _type="ShellCommand" date="Tue May 03 19:51:58 EDT 2022" starttimestamp="1651619386199" timestamp="2532379" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1566" _type="ShellCommand" date="Tue May 03 19:51:58 EDT 2022" starttimestamp="1651619386199" timestamp="2532472" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1570" _type="PauseCommand" date="Tue May 03 19:52:00 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2533970">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1480]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1569" _type="ShellCommand" date="Tue May 03 19:52:00 EDT 2022" starttimestamp="1651619386199" timestamp="2533970" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1571" _type="ShellCommand" date="Tue May 03 19:52:00 EDT 2022" starttimestamp="1651619386199" timestamp="2534082" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1575" _type="PauseCommand" date="Tue May 03 19:52:01 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2535187">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1089]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1574" _type="ShellCommand" date="Tue May 03 19:52:01 EDT 2022" starttimestamp="1651619386199" timestamp="2535187" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1576" _type="ShellCommand" date="Tue May 03 19:52:01 EDT 2022" starttimestamp="1651619386199" timestamp="2535287" type="ECLIPSE_GAINED_FOCUS" />
  <DocumentChange __id="1441" _type="Delete" date="Tue May 03 19:51:15 EDT 2022" docASTNodeCount="556" docActiveCodeLength="3827" docExpressionCount="387" docLength="4152" endLine="42" length="21" offset="1934" startLine="41" starttimestamp="1651619386199" timestamp="2489506">
    <text><![CDATA[//		setFactories();
]]></text>
  </DocumentChange>
  <DocumentChange __id="1445" _type="Delete" date="Tue May 03 19:51:16 EDT 2022" docASTNodeCount="556" docActiveCodeLength="3823" docExpressionCount="387" docLength="4034" endLine="46" length="118" offset="1968" startLine="44" starttimestamp="1651619386199" timestamp="2490787">
    <text><![CDATA[//	protected void setFactories() {
//		ConnectCommandFactorySelector.setFactory(new AConnectCommandFactory(0));
//	}]]></text>
  </DocumentChange>
  <DocumentChange __id="1450" _type="Insert" date="Tue May 03 19:51:18 EDT 2022" docASTNodeCount="557" docActiveCodeLength="3829" docExpressionCount="387" docLength="4040" length="6" offset="2145" repeat="2" starttimestamp="1651619386199" timestamp="2492755" timestamp2="2492758">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1455" _type="Insert" date="Tue May 03 19:51:20 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3835" docExpressionCount="387" docLength="4046" length="6" offset="2245" repeat="2" starttimestamp="1651619386199" timestamp="2494169" timestamp2="2494172">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1460" _type="Delete" date="Tue May 03 19:51:21 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3830" docExpressionCount="387" docLength="3995" endLine="53" length="51" offset="2191" startLine="52" starttimestamp="1651619386199" timestamp="2495205">
    <text><![CDATA[			// wrap writes to the buffer and then flips it
]]></text>
  </DocumentChange>
  <DocumentChange __id="1466" _type="Delete" date="Tue May 03 19:51:24 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3823" docExpressionCount="387" docLength="3946" endLine="69" length="49" offset="2664" startLine="68" starttimestamp="1651619386199" timestamp="2498655">
    <text><![CDATA[					//0, // do not allow any incoming messages
]]></text>
  </DocumentChange>
  <DocumentChange __id="1472" _type="Delete" date="Tue May 03 19:51:26 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3819" docExpressionCount="387" docLength="3909" endLine="75" length="37" offset="2784" startLine="74" starttimestamp="1651619386199" timestamp="2500481">
    <text><![CDATA[		//Create new read thread Runnable
]]></text>
  </DocumentChange>
  <DocumentChange __id="1477" _type="Delete" date="Tue May 03 19:51:27 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3815" docExpressionCount="387" docLength="3882" endLine="77" length="27" offset="2839" startLine="76" starttimestamp="1651619386199" timestamp="2501503">
    <text><![CDATA[		//Create new readThread
]]></text>
  </DocumentChange>
  <DocumentChange __id="1482" _type="Delete" date="Tue May 03 19:51:29 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3811" docExpressionCount="387" docLength="3845" endLine="79" length="37" offset="2881" startLine="78" starttimestamp="1651619386199" timestamp="2502925">
    <text><![CDATA[		//Start thread and do some action
]]></text>
  </DocumentChange>
  <DocumentChange __id="1486" _type="Delete" date="Tue May 03 19:51:30 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3806" docExpressionCount="387" docLength="3840" endLine="77" length="5" offset="2873" repeat="4" startLine="76" starttimestamp="1651619386199" timestamp="2504109" timestamp2="2504830">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="1495" _type="Delete" date="Tue May 03 19:51:31 EDT 2022" docASTNodeCount="558" docActiveCodeLength="3801" docExpressionCount="387" docLength="3835" endLine="75" length="5" offset="2829" repeat="4" startLine="74" starttimestamp="1651619386199" timestamp="2505491" timestamp2="2506004">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="1506" _type="Insert" date="Tue May 03 19:51:34 EDT 2022" docASTNodeCount="559" docActiveCodeLength="3807" docExpressionCount="387" docLength="3841" length="6" offset="3116" repeat="2" starttimestamp="1651619386199" timestamp="2508628" timestamp2="2508630">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1511" _type="Insert" date="Tue May 03 19:51:36 EDT 2022" docASTNodeCount="560" docActiveCodeLength="3813" docExpressionCount="387" docLength="3847" length="6" offset="2935" repeat="2" starttimestamp="1651619386199" timestamp="2510601" timestamp2="2510604">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1516" _type="Insert" date="Tue May 03 19:51:38 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3819" docExpressionCount="387" docLength="3853" length="6" offset="3160" repeat="2" starttimestamp="1651619386199" timestamp="2512583" timestamp2="2512586">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1520" _type="Insert" date="Tue May 03 19:51:39 EDT 2022" docASTNodeCount="562" docActiveCodeLength="3825" docExpressionCount="387" docLength="3859" length="6" offset="3260" repeat="2" starttimestamp="1651619386199" timestamp="2513529" timestamp2="2513532">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1525" _type="Insert" date="Tue May 03 19:51:41 EDT 2022" docASTNodeCount="563" docActiveCodeLength="3831" docExpressionCount="387" docLength="3865" length="6" offset="3293" repeat="2" starttimestamp="1651619386199" timestamp="2515191" timestamp2="2515193">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1530" _type="Delete" date="Tue May 03 19:51:45 EDT 2022" docASTNodeCount="563" docActiveCodeLength="3830" docExpressionCount="387" docLength="3864" endLine="91" length="1" offset="3245" startLine="91" starttimestamp="1651619386199" timestamp="2519326">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="1532" _type="Insert" date="Tue May 03 19:51:45 EDT 2022" docASTNodeCount="563" docActiveCodeLength="3834" docExpressionCount="387" docLength="3868" length="4" offset="3245" repeat="4" starttimestamp="1651619386199" timestamp="2519695" timestamp2="2520346">
    <text><![CDATA[newS]]></text>
  </DocumentChange>
  <DocumentChange __id="1552" _type="Insert" date="Tue May 03 19:51:54 EDT 2022" docASTNodeCount="564" docActiveCodeLength="3840" docExpressionCount="387" docLength="3874" length="6" offset="3419" repeat="2" starttimestamp="1651619386199" timestamp="2527815" timestamp2="2527817">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1557" _type="Insert" date="Tue May 03 19:51:55 EDT 2022" docASTNodeCount="565" docActiveCodeLength="3846" docExpressionCount="387" docLength="3880" length="6" offset="3454" repeat="2" starttimestamp="1651619386199" timestamp="2529194" timestamp2="2529197">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1562" _type="Insert" date="Tue May 03 19:51:57 EDT 2022" docASTNodeCount="566" docActiveCodeLength="3852" docExpressionCount="387" docLength="3886" length="6" offset="3481" repeat="2" starttimestamp="1651619386199" timestamp="2530976" timestamp2="2530980">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1567" _type="Insert" date="Tue May 03 19:51:58 EDT 2022" docASTNodeCount="567" docActiveCodeLength="3858" docExpressionCount="387" docLength="3892" length="6" offset="3505" repeat="2" starttimestamp="1651619386199" timestamp="2532490" timestamp2="2532493">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1572" _type="Insert" date="Tue May 03 19:52:00 EDT 2022" docASTNodeCount="568" docActiveCodeLength="3864" docExpressionCount="387" docLength="3898" length="6" offset="3688" repeat="2" starttimestamp="1651619386199" timestamp="2534098" timestamp2="2534101">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1577" _type="Insert" date="Tue May 03 19:52:01 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3870" docExpressionCount="387" docLength="3904" length="6" offset="3720" repeat="2" starttimestamp="1651619386199" timestamp="2535303" timestamp2="2535306">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1580" _type="PauseCommand" date="Tue May 03 19:52:03 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2537082">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1779]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1579" _type="MoveCaretCommand" caretOffset="2511" date="Tue May 03 19:52:03 EDT 2022" docOffset="3803" starttimestamp="1651619386199" timestamp="2537082" />
  <Command __id="1581" _type="SelectTextCommand" caretOffset="2518" date="Tue May 03 19:52:03 EDT 2022" end="2518" start="2508" starttimestamp="1651619386199" timestamp="2537232" />
  <Command __id="1582" _type="MoveCaretCommand" caretOffset="2568" date="Tue May 03 19:52:03 EDT 2022" docOffset="3860" starttimestamp="1651619386199" timestamp="2537760" />
  <Command __id="1583" _type="SelectTextCommand" caretOffset="2573" date="Tue May 03 19:52:04 EDT 2022" end="2573" start="2567" starttimestamp="1651619386199" timestamp="2537887" />
  <Command __id="1584" _type="SelectTextCommand" caretOffset="2580" date="Tue May 03 19:52:04 EDT 2022" end="2580" start="2542" starttimestamp="1651619386199" timestamp="2538018" />
  <Command __id="1586" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:04 EDT 2022" starttimestamp="1651619386199" timestamp="2538622" />
  <Command __id="1588" _type="PauseCommand" date="Tue May 03 19:52:11 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2545467">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6845]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1587" _type="SelectTextCommand" caretOffset="2082" date="Tue May 03 19:52:11 EDT 2022" end="2082" start="1143" starttimestamp="1651619386199" timestamp="2545467" />
  <Command __id="1590" _type="CutCommand" date="Tue May 03 19:52:12 EDT 2022" starttimestamp="1651619386199" timestamp="2546058" />
  <Command __id="1591" _type="MoveCaretCommand" caretOffset="1632" date="Tue May 03 19:52:13 EDT 2022" docOffset="2924" starttimestamp="1651619386199" timestamp="2547038" />
  <Command __id="1593" _type="InsertStringCommand" date="Tue May 03 19:52:13 EDT 2022" starttimestamp="1651619386199" timestamp="2547692" timestamp2="2547692">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1595" _type="PasteCommand" date="Tue May 03 19:52:14 EDT 2022" starttimestamp="1651619386199" timestamp="2548045" />
  <Command __id="1596" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:52:14 EDT 2022" starttimestamp="1651619386199" timestamp="2548579" />
  <Command __id="1597" _type="EclipseCommand" commandID="" date="Tue May 03 19:52:14 EDT 2022" starttimestamp="1651619386199" timestamp="2548665" />
  <Command __id="1598" _type="EclipseCommand" commandID="" date="Tue May 03 19:52:14 EDT 2022" starttimestamp="1651619386199" timestamp="2548692" />
  <Command __id="1600" _type="PauseCommand" date="Tue May 03 19:52:16 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2550600">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1908]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1599" _type="MoveCaretCommand" caretOffset="2261" date="Tue May 03 19:52:16 EDT 2022" docOffset="3553" starttimestamp="1651619386199" timestamp="2550600" />
  <Command __id="1601" _type="SelectTextCommand" caretOffset="2263" date="Tue May 03 19:52:16 EDT 2022" end="2263" start="2256" starttimestamp="1651619386199" timestamp="2550748" />
  <Command __id="1602" _type="SelectTextCommand" caretOffset="2278" date="Tue May 03 19:52:17 EDT 2022" end="2278" start="2227" starttimestamp="1651619386199" timestamp="2550856" />
  <Command __id="1604" _type="PauseCommand" date="Tue May 03 19:52:19 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2553428">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2572]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1605" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:19 EDT 2022" starttimestamp="1651619386199" timestamp="2553437" />
  <Command __id="1607" _type="PauseCommand" date="Tue May 03 19:52:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2555232">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1795]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1608" _type="UndoCommand" date="Tue May 03 19:52:21 EDT 2022" starttimestamp="1651619386199" timestamp="2555237" />
  <Command __id="1609" _type="MoveCaretCommand" caretOffset="2257" date="Tue May 03 19:52:22 EDT 2022" docOffset="3549" starttimestamp="1651619386199" timestamp="2556021" />
  <Command __id="1611" _type="PauseCommand" date="Tue May 03 19:52:25 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2559746">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3725]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1610" _type="SelectTextCommand" caretOffset="2273" date="Tue May 03 19:52:25 EDT 2022" end="2273" start="2249" starttimestamp="1651619386199" timestamp="2559746" />
  <Command __id="1613" _type="InsertStringCommand" date="Tue May 03 19:52:26 EDT 2022" starttimestamp="1651619386199" timestamp="2560454" timestamp2="2560454">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1615" _type="InsertStringCommand" date="Tue May 03 19:52:27 EDT 2022" starttimestamp="1651619386199" timestamp="2561130" timestamp2="2561130">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1617" _type="InsertStringCommand" date="Tue May 03 19:52:27 EDT 2022" starttimestamp="1651619386199" timestamp="2561350" timestamp2="2561350">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1619" _type="InsertStringCommand" date="Tue May 03 19:52:27 EDT 2022" starttimestamp="1651619386199" timestamp="2561481" timestamp2="2561481">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1621" _type="InsertStringCommand" date="Tue May 03 19:52:27 EDT 2022" starttimestamp="1651619386199" timestamp="2561622" timestamp2="2561622">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1623" _type="InsertStringCommand" date="Tue May 03 19:52:27 EDT 2022" starttimestamp="1651619386199" timestamp="2561682" timestamp2="2561682">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1625" _type="InsertStringCommand" date="Tue May 03 19:52:28 EDT 2022" starttimestamp="1651619386199" timestamp="2562043" timestamp2="2562043">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1627" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:28 EDT 2022" starttimestamp="1651619386199" timestamp="2562372" />
  <Command __id="1629" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:28 EDT 2022" starttimestamp="1651619386199" timestamp="2562492" />
  <Command __id="1631" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:28 EDT 2022" starttimestamp="1651619386199" timestamp="2562619" />
  <Command __id="1633" _type="InsertStringCommand" date="Tue May 03 19:52:29 EDT 2022" starttimestamp="1651619386199" timestamp="2562954" timestamp2="2562954">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1635" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:29 EDT 2022" starttimestamp="1651619386199" timestamp="2563524" />
  <Command __id="1637" _type="InsertStringCommand" date="Tue May 03 19:52:29 EDT 2022" starttimestamp="1651619386199" timestamp="2563726" timestamp2="2563726">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1639" _type="InsertStringCommand" date="Tue May 03 19:52:30 EDT 2022" starttimestamp="1651619386199" timestamp="2564397" timestamp2="2564397">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1641" _type="InsertStringCommand" date="Tue May 03 19:52:30 EDT 2022" starttimestamp="1651619386199" timestamp="2564559" timestamp2="2564559">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1643" _type="InsertStringCommand" date="Tue May 03 19:52:30 EDT 2022" starttimestamp="1651619386199" timestamp="2564659" timestamp2="2564659">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1645" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:31 EDT 2022" starttimestamp="1651619386199" timestamp="2565641" />
  <Command __id="1647" _type="InsertStringCommand" date="Tue May 03 19:52:32 EDT 2022" starttimestamp="1651619386199" timestamp="2565801" timestamp2="2565801">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1649" _type="InsertStringCommand" date="Tue May 03 19:52:32 EDT 2022" starttimestamp="1651619386199" timestamp="2566783" timestamp2="2566783">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1651" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567273" timestamp2="2567273">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1653" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567305" timestamp2="2567305">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1655" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567334" timestamp2="2567334">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1657" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567364" timestamp2="2567364">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1659" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567395" timestamp2="2567395">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1661" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567426" timestamp2="2567426">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1663" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567455" timestamp2="2567455">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1665" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567486" timestamp2="2567486">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1667" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567514" timestamp2="2567514">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1669" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567545" timestamp2="2567545">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1671" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567582" timestamp2="2567582">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1673" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567606" timestamp2="2567606">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1675" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567635" timestamp2="2567635">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1677" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567666" timestamp2="2567666">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1679" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567695" timestamp2="2567695">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1681" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567725" timestamp2="2567725">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1683" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567756" timestamp2="2567756">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1685" _type="InsertStringCommand" date="Tue May 03 19:52:33 EDT 2022" starttimestamp="1651619386199" timestamp="2567785" timestamp2="2567785">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1687" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2567819" timestamp2="2567819">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1689" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2567846" timestamp2="2567846">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1691" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2567878" timestamp2="2567878">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1693" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2567906" timestamp2="2567906">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1695" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2567936" timestamp2="2567936">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1697" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2567966" timestamp2="2567966">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1699" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2567996" timestamp2="2567996">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1701" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2568026" timestamp2="2568026">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1703" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2568056" timestamp2="2568056">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1705" _type="InsertStringCommand" date="Tue May 03 19:52:34 EDT 2022" starttimestamp="1651619386199" timestamp="2568086" timestamp2="2568086">
    <data><![CDATA[?]]></data>
  </Command>
  <Command __id="1707" _type="PauseCommand" date="Tue May 03 19:52:39 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2573366">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[5280]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1706" _type="MoveCaretCommand" caretOffset="2251" date="Tue May 03 19:52:39 EDT 2022" docOffset="3543" starttimestamp="1651619386199" timestamp="2573366" />
  <Command __id="1709" _type="InsertStringCommand" date="Tue May 03 19:52:40 EDT 2022" starttimestamp="1651619386199" timestamp="2574180" timestamp2="2574180">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1711" _type="PauseCommand" date="Tue May 03 19:52:43 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2577105">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2925]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1710" _type="SelectTextCommand" caretOffset="2556" date="Tue May 03 19:52:43 EDT 2022" end="2556" start="2554" starttimestamp="1651619386199" timestamp="2577105" />
  <Command __id="1712" _type="MoveCaretCommand" caretOffset="2586" date="Tue May 03 19:52:44 EDT 2022" docOffset="3878" starttimestamp="1651619386199" timestamp="2577922" />
  <Command __id="1714" _type="PauseCommand" date="Tue May 03 19:52:45 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2579613">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1691]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1713" _type="SelectTextCommand" caretOffset="2579" date="Tue May 03 19:52:45 EDT 2022" end="2579" start="2553" starttimestamp="1651619386199" timestamp="2579613" />
  <Command __id="1716" _type="InsertStringCommand" date="Tue May 03 19:52:46 EDT 2022" starttimestamp="1651619386199" timestamp="2580291" timestamp2="2580291">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1718" _type="InsertStringCommand" date="Tue May 03 19:52:47 EDT 2022" starttimestamp="1651619386199" timestamp="2580882" timestamp2="2580882">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1720" _type="InsertStringCommand" date="Tue May 03 19:52:47 EDT 2022" starttimestamp="1651619386199" timestamp="2581263" timestamp2="2581263">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1722" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:47 EDT 2022" starttimestamp="1651619386199" timestamp="2581662" />
  <Command __id="1724" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:52:48 EDT 2022" starttimestamp="1651619386199" timestamp="2582193" />
  <Command __id="1726" _type="InsertStringCommand" date="Tue May 03 19:52:48 EDT 2022" starttimestamp="1651619386199" timestamp="2582345" timestamp2="2582345">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1728" _type="InsertStringCommand" date="Tue May 03 19:52:48 EDT 2022" starttimestamp="1651619386199" timestamp="2582406" timestamp2="2582406">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1730" _type="InsertStringCommand" date="Tue May 03 19:52:48 EDT 2022" starttimestamp="1651619386199" timestamp="2582622" timestamp2="2582622">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="1732" _type="InsertStringCommand" date="Tue May 03 19:52:49 EDT 2022" starttimestamp="1651619386199" timestamp="2582897" timestamp2="2582897">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1734" _type="InsertStringCommand" date="Tue May 03 19:52:49 EDT 2022" starttimestamp="1651619386199" timestamp="2583538" timestamp2="2583538">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1736" _type="InsertStringCommand" date="Tue May 03 19:52:49 EDT 2022" starttimestamp="1651619386199" timestamp="2583628" timestamp2="2583628">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1738" _type="InsertStringCommand" date="Tue May 03 19:52:50 EDT 2022" starttimestamp="1651619386199" timestamp="2583826" timestamp2="2583826">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1740" _type="InsertStringCommand" date="Tue May 03 19:52:50 EDT 2022" starttimestamp="1651619386199" timestamp="2584003" timestamp2="2584003">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1742" _type="InsertStringCommand" date="Tue May 03 19:52:50 EDT 2022" starttimestamp="1651619386199" timestamp="2584159" timestamp2="2584159">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1744" _type="InsertStringCommand" date="Tue May 03 19:52:50 EDT 2022" starttimestamp="1651619386199" timestamp="2584300" timestamp2="2584300">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1746" _type="InsertStringCommand" date="Tue May 03 19:52:50 EDT 2022" starttimestamp="1651619386199" timestamp="2584377" timestamp2="2584377">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1748" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2584802" timestamp2="2584802">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1750" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585302" timestamp2="2585302">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1752" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585332" timestamp2="2585332">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1754" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585363" timestamp2="2585363">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1756" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585394" timestamp2="2585394">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1758" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585425" timestamp2="2585425">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1760" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585453" timestamp2="2585453">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1762" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585482" timestamp2="2585482">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1764" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585513" timestamp2="2585513">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1766" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585544" timestamp2="2585544">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1768" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585572" timestamp2="2585572">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1770" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585606" timestamp2="2585606">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1772" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585632" timestamp2="2585632">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1774" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585662" timestamp2="2585662">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1776" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585693" timestamp2="2585693">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1778" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585722" timestamp2="2585722">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1780" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585753" timestamp2="2585753">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1782" _type="InsertStringCommand" date="Tue May 03 19:52:51 EDT 2022" starttimestamp="1651619386199" timestamp="2585784" timestamp2="2585784">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1784" _type="InsertStringCommand" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2585814" timestamp2="2585814">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1786" _type="InsertStringCommand" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2585843" timestamp2="2585843">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1788" _type="InsertStringCommand" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2585873" timestamp2="2585873">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1790" _type="InsertStringCommand" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2585903" timestamp2="2585903">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1792" _type="InsertStringCommand" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2585933" timestamp2="2585933">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1794" _type="InsertStringCommand" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2585964" timestamp2="2585964">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1796" _type="InsertStringCommand" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2585994" timestamp2="2585994">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1797" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2586582" />
  <Command __id="1798" _type="EclipseCommand" commandID="" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2586715" />
  <Command __id="1799" _type="EclipseCommand" commandID="" date="Tue May 03 19:52:52 EDT 2022" starttimestamp="1651619386199" timestamp="2586731" />
  <Command __id="1801" _type="PauseCommand" date="Tue May 03 19:52:56 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2590033">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3302]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1800" _type="ShellCommand" date="Tue May 03 19:52:56 EDT 2022" starttimestamp="1651619386199" timestamp="2590033" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1802" _type="ShellCommand" date="Tue May 03 19:52:56 EDT 2022" starttimestamp="1651619386199" timestamp="2590126" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1804" _type="PauseCommand" date="Tue May 03 19:53:03 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2597322">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7196]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1803" _type="MoveCaretCommand" caretOffset="1368" date="Tue May 03 19:53:03 EDT 2022" docOffset="2660" starttimestamp="1651619386199" timestamp="2597322" />
  <Command __id="1806" _type="PauseCommand" date="Tue May 03 19:53:13 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2607001">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9679]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1805" _type="MoveCaretCommand" caretOffset="1208" date="Tue May 03 19:53:13 EDT 2022" docOffset="2500" starttimestamp="1651619386199" timestamp="2607001" />
  <Command __id="1808" _type="PauseCommand" date="Tue May 03 19:53:16 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2610102">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3101]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="1809" _type="InsertStringCommand" date="Tue May 03 19:53:16 EDT 2022" starttimestamp="1651619386199" timestamp="2610108" timestamp2="2610108">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1811" _type="InsertStringCommand" date="Tue May 03 19:53:16 EDT 2022" starttimestamp="1651619386199" timestamp="2610284" timestamp2="2610284">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1813" _type="InsertStringCommand" date="Tue May 03 19:53:16 EDT 2022" starttimestamp="1651619386199" timestamp="2610384" timestamp2="2610384">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1814" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Tue May 03 19:53:16 EDT 2022" starttimestamp="1651619386199" timestamp="2610740" />
  <Command __id="1816" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:53:17 EDT 2022" starttimestamp="1651619386199" timestamp="2610941" />
  <Command __id="1818" _type="InsertStringCommand" date="Tue May 03 19:53:17 EDT 2022" starttimestamp="1651619386199" timestamp="2611296" timestamp2="2611296">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1820" _type="PauseCommand" date="Tue May 03 19:53:18 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2612680">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1384]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1819" _type="MoveCaretCommand" caretOffset="1216" date="Tue May 03 19:53:18 EDT 2022" docOffset="2508" starttimestamp="1651619386199" timestamp="2612680" />
  <Command __id="1821" _type="SelectTextCommand" caretOffset="1224" date="Tue May 03 19:53:19 EDT 2022" end="1224" start="1208" starttimestamp="1651619386199" timestamp="2612826" />
  <Command __id="1823" _type="PauseCommand" date="Tue May 03 19:53:20 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2614635">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1809]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1822" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:53:20 EDT 2022" starttimestamp="1651619386199" timestamp="2614635" />
  <Command __id="1824" _type="EclipseCommand" commandID="" date="Tue May 03 19:53:20 EDT 2022" starttimestamp="1651619386199" timestamp="2614772" />
  <Command __id="1825" _type="EclipseCommand" commandID="" date="Tue May 03 19:53:20 EDT 2022" starttimestamp="1651619386199" timestamp="2614787" />
  <Command __id="1827" _type="PauseCommand" date="Tue May 03 19:53:28 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2622326">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[7539]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1826" _type="MoveCaretCommand" caretOffset="1423" date="Tue May 03 19:53:28 EDT 2022" docOffset="2715" starttimestamp="1651619386199" timestamp="2622326" />
  <Command __id="1829" _type="PauseCommand" date="Tue May 03 19:53:31 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2625250">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2924]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1828" _type="ShellCommand" date="Tue May 03 19:53:31 EDT 2022" starttimestamp="1651619386199" timestamp="2625250" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1830" _type="ShellCommand" date="Tue May 03 19:53:31 EDT 2022" starttimestamp="1651619386199" timestamp="2625363" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1834" _type="PauseCommand" date="Tue May 03 19:53:33 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2626997">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1614]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="1833" _type="ShellCommand" date="Tue May 03 19:53:33 EDT 2022" starttimestamp="1651619386199" timestamp="2626997" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1835" _type="ShellCommand" date="Tue May 03 19:53:33 EDT 2022" starttimestamp="1651619386199" timestamp="2627101" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1838" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:53:34 EDT 2022" starttimestamp="1651619386199" timestamp="2627868" />
  <Command __id="1839" _type="EclipseCommand" commandID="" date="Tue May 03 19:53:34 EDT 2022" starttimestamp="1651619386199" timestamp="2628003" />
  <Command __id="1840" _type="EclipseCommand" commandID="" date="Tue May 03 19:53:34 EDT 2022" starttimestamp="1651619386199" timestamp="2628020" />
  <Command __id="1842" _type="PauseCommand" date="Tue May 03 19:53:39 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2633589">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5569]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1841" _type="MoveCaretCommand" caretOffset="268" date="Tue May 03 19:53:39 EDT 2022" docOffset="1560" starttimestamp="1651619386199" timestamp="2633589" />
  <Command __id="1843" _type="SelectTextCommand" caretOffset="271" date="Tue May 03 19:53:39 EDT 2022" end="271" start="261" starttimestamp="1651619386199" timestamp="2633737" />
  <Command __id="1845" _type="PauseCommand" date="Tue May 03 19:53:41 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2635424">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1687]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1844" _type="CopyCommand" date="Tue May 03 19:53:41 EDT 2022" starttimestamp="1651619386199" timestamp="2635424" />
  <Command __id="1847" _type="ShellCommand" date="Tue May 03 19:53:41 EDT 2022" starttimestamp="1651619386199" timestamp="2635701" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1848" _type="PasteCommand" date="Tue May 03 19:53:42 EDT 2022" starttimestamp="1651619386199" timestamp="2635861" />
  <DocumentChange __id="1585" _type="Delete" date="Tue May 03 19:52:04 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3866" docExpressionCount="387" docLength="3866" endLine="111" length="38" offset="3834" startLine="110" starttimestamp="1651619386199" timestamp="2538614">
    <text><![CDATA[		// TODO Auto-generated method stub
]]></text>
  </DocumentChange>
  <DocumentChange __id="1589" _type="Delete" date="Tue May 03 19:52:12 EDT 2022" docASTNodeCount="437" docActiveCodeLength="2927" docExpressionCount="309" docLength="2927" endLine="94" length="939" offset="2435" startLine="62" starttimestamp="1651619386199" timestamp="2546034">
    <text><![CDATA[void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		reader = new exampleClientReadThread(this);			
		readThread = new Thread(reader);	
		readThread.start();
	}

	@Override
	public void connected(final SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(final SocketChannel theSocketChannel, final Exception exception) {

	}

	@Override
	public void written(SocketChannel newSocketChannel, final ByteBuffer theWriteBuffer, final int sendId) {
		System.out.println("client channel has written");
	}
]]></text>
  </DocumentChange>
  <DocumentChange __id="1592" _type="Insert" date="Tue May 03 19:52:13 EDT 2022" docASTNodeCount="437" docActiveCodeLength="2930" docExpressionCount="309" docLength="2930" length="3" offset="2924" starttimestamp="1651619386199" timestamp="2547685">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="1594" _type="Replace" date="Tue May 03 19:52:14 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3869" docExpressionCount="387" docLength="3869" endLine="81" insertionLength="940" int_docASTNodeCount="437" int_docActiveCodeLength="2929" int_docExpressionCount="309" int_docLength="2929" length="1" offset="2926" startLine="81" starttimestamp="1651619386199" timestamp="2548028">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	void initialize(int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			nioManager.connect(socketChannel, aServerAddress, aServerPort, 
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		reader = new exampleClientReadThread(this);			
		readThread = new Thread(reader);	
		readThread.start();
	}

	@Override
	public void connected(final SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);
		System.out.println("Client Connect to Server");
	}

	@Override
	public void notConnected(final SocketChannel theSocketChannel, final Exception exception) {

	}

	@Override
	public void written(SocketChannel newSocketChannel, final ByteBuffer theWriteBuffer, final int sendId) {
		System.out.println("client channel has written");
	}
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1603" _type="Delete" date="Tue May 03 19:52:19 EDT 2022" docASTNodeCount="562" docActiveCodeLength="3818" docExpressionCount="381" docLength="3818" endLine="102" length="51" offset="3519" startLine="101" starttimestamp="1651619386199" timestamp="2553428">
    <text><![CDATA[		System.out.println("Client Connect to Server");
]]></text>
  </DocumentChange>
  <DocumentChange __id="1606" _type="Insert" date="Tue May 03 19:52:21 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3869" docExpressionCount="387" docLength="3869" length="51" offset="3519" starttimestamp="1651619386199" timestamp="2555232">
    <text><![CDATA[		System.out.println("Client Connect to Server");
]]></text>
  </DocumentChange>
  <DocumentChange __id="1612" _type="Replace" date="Tue May 03 19:52:26 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3846" docExpressionCount="387" docLength="3846" endLine="101" insertionLength="1" int_docASTNodeCount="569" int_docActiveCodeLength="3845" int_docExpressionCount="387" int_docLength="3845" length="24" offset="3541" startLine="101" starttimestamp="1651619386199" timestamp="2560445">
    <deletedText><![CDATA[Client Connect to Server]]></deletedText>
    <insertedText><![CDATA[c]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1614" _type="Insert" date="Tue May 03 19:52:27 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3852" docExpressionCount="387" docLength="3852" length="6" offset="3542" repeat="6" starttimestamp="1651619386199" timestamp="2561126" timestamp2="2562039">
    <text><![CDATA[oneect]]></text>
  </DocumentChange>
  <DocumentChange __id="1626" _type="Delete" date="Tue May 03 19:52:28 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3849" docExpressionCount="387" docLength="3849" endLine="101" length="3" offset="3545" repeat="3" startLine="101" starttimestamp="1651619386199" timestamp="2562370" timestamp2="2562616">
    <text><![CDATA[ect]]></text>
  </DocumentChange>
  <DocumentChange __id="1632" _type="Insert" date="Tue May 03 19:52:29 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3850" docExpressionCount="387" docLength="3850" length="1" offset="3545" starttimestamp="1651619386199" timestamp="2562951">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="1634" _type="Delete" date="Tue May 03 19:52:29 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3849" docExpressionCount="387" docLength="3849" endLine="101" length="1" offset="3545" startLine="101" starttimestamp="1651619386199" timestamp="2563522">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="1636" _type="Insert" date="Tue May 03 19:52:29 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3853" docExpressionCount="387" docLength="3853" length="4" offset="3545" repeat="4" starttimestamp="1651619386199" timestamp="2563722" timestamp2="2564656">
    <text><![CDATA[cter]]></text>
  </DocumentChange>
  <DocumentChange __id="1644" _type="Delete" date="Tue May 03 19:52:31 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3852" docExpressionCount="387" docLength="3852" endLine="101" length="1" offset="3548" startLine="101" starttimestamp="1651619386199" timestamp="2565638">
    <text><![CDATA[r]]></text>
  </DocumentChange>
  <DocumentChange __id="1646" _type="Insert" date="Tue May 03 19:52:31 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3882" docExpressionCount="387" docLength="3882" length="30" offset="3548" repeat="30" starttimestamp="1651619386199" timestamp="2565797" timestamp2="2568082">
    <text><![CDATA[d?????????????????????????????]]></text>
  </DocumentChange>
  <DocumentChange __id="1708" _type="Insert" date="Tue May 03 19:52:40 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3883" docExpressionCount="387" docLength="3883" length="1" offset="3543" starttimestamp="1651619386199" timestamp="2574177">
    <text><![CDATA[n]]></text>
  </DocumentChange>
  <DocumentChange __id="1715" _type="Replace" date="Tue May 03 19:52:46 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3858" docExpressionCount="387" docLength="3858" endLine="111" insertionLength="1" int_docASTNodeCount="569" int_docActiveCodeLength="3857" int_docExpressionCount="387" int_docLength="3857" length="26" offset="3845" startLine="111" starttimestamp="1651619386199" timestamp="2580287">
    <deletedText><![CDATA[client channel has written]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1717" _type="Insert" date="Tue May 03 19:52:47 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3860" docExpressionCount="387" docLength="3860" length="2" offset="3846" repeat="2" starttimestamp="1651619386199" timestamp="2580878" timestamp2="2581259">
    <text><![CDATA[ep]]></text>
  </DocumentChange>
  <DocumentChange __id="1721" _type="Delete" date="Tue May 03 19:52:47 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3858" docExpressionCount="387" docLength="3858" endLine="111" length="2" offset="3846" repeat="2" startLine="111" starttimestamp="1651619386199" timestamp="2581660" timestamp2="2582191">
    <text><![CDATA[ep]]></text>
  </DocumentChange>
  <DocumentChange __id="1725" _type="Insert" date="Tue May 03 19:52:48 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3894" docExpressionCount="387" docLength="3894" length="36" offset="3846" repeat="36" starttimestamp="1651619386199" timestamp="2582342" timestamp2="2585990">
    <text><![CDATA[tep reached.........................]]></text>
  </DocumentChange>
  <DocumentChange __id="1807" _type="Insert" date="Tue May 03 19:53:16 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3897" docExpressionCount="387" docLength="3897" length="3" offset="2500" repeat="3" starttimestamp="1651619386199" timestamp="2610102" timestamp2="2610379">
    <text><![CDATA[new]]></text>
  </DocumentChange>
  <DocumentChange __id="1815" _type="Delete" date="Tue May 03 19:53:17 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3896" docExpressionCount="387" docLength="3896" endLine="64" length="1" offset="2503" startLine="64" starttimestamp="1651619386199" timestamp="2610939">
    <text><![CDATA[s]]></text>
  </DocumentChange>
  <DocumentChange __id="1817" _type="Insert" date="Tue May 03 19:53:17 EDT 2022" docASTNodeCount="569" docActiveCodeLength="3897" docExpressionCount="387" docLength="3897" length="1" offset="2503" starttimestamp="1651619386199" timestamp="2611291">
    <text><![CDATA[S]]></text>
  </DocumentChange>
  <DocumentChange __id="1831" _type="Insert" date="Tue May 03 19:53:31 EDT 2022" docASTNodeCount="570" docActiveCodeLength="3903" docExpressionCount="387" docLength="3903" length="6" offset="3020" repeat="2" starttimestamp="1651619386199" timestamp="2625383" timestamp2="2625387">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="1836" _type="Insert" date="Tue May 03 19:53:33 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" length="6" offset="2946" repeat="2" starttimestamp="1651619386199" timestamp="2627119" timestamp2="2627123">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="1850" _type="PauseCommand" date="Tue May 03 19:53:49 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2643435">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7574]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <DocumentChange __id="1849" _type="Replace" date="Tue May 03 19:53:49 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="86" insertionLength="10" int_docASTNodeCount="570" int_docActiveCodeLength="3899" int_docExpressionCount="386" int_docLength="3899" length="10" offset="3106" startLine="86" starttimestamp="1651619386199" timestamp="2643435">
    <deletedText><![CDATA[nioManager]]></deletedText>
    <insertedText><![CDATA[managerNio]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1851" _type="Replace" date="Tue May 03 19:53:49 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="100" insertionLength="10" int_docASTNodeCount="570" int_docActiveCodeLength="3899" int_docExpressionCount="386" int_docLength="3899" length="10" offset="3483" startLine="100" starttimestamp="1651619386199" timestamp="2643458">
    <deletedText><![CDATA[nioManager]]></deletedText>
    <insertedText><![CDATA[managerNio]]></insertedText>
  </DocumentChange>
  <Command __id="1852" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:53:50 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2644217" wrapSearch="false">
    <searchString><![CDATA[nioManager]]></searchString>
    <replaceString><![CDATA[managerNio]]></replaceString>
  </Command>
  <Command __id="1855" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:53:51 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2645769" wrapSearch="false">
    <searchString><![CDATA[nioManager]]></searchString>
    <replaceString><![CDATA[managerNio]]></replaceString>
  </Command>
  <Command __id="1856" _type="ShellCommand" date="Tue May 03 19:53:52 EDT 2022" starttimestamp="1651619386199" timestamp="2646333" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1857" _type="MoveCaretCommand" caretOffset="340" date="Tue May 03 19:53:53 EDT 2022" docOffset="1632" starttimestamp="1651619386199" timestamp="2647136" />
  <Command __id="1858" _type="SelectTextCommand" caretOffset="347" date="Tue May 03 19:53:53 EDT 2022" end="347" start="334" starttimestamp="1651619386199" timestamp="2647254" />
  <Command __id="1860" _type="PauseCommand" date="Tue May 03 19:53:54 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2648772">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1518]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1859" _type="CopyCommand" date="Tue May 03 19:53:54 EDT 2022" starttimestamp="1651619386199" timestamp="2648772" />
  <Command __id="1862" _type="ShellCommand" date="Tue May 03 19:53:55 EDT 2022" starttimestamp="1651619386199" timestamp="2649087" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1864" _type="PauseCommand" date="Tue May 03 19:54:09 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="2663160">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14073]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1868" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:54:09 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2663796" wrapSearch="false">
    <searchString><![CDATA[socketChannel]]></searchString>
    <replaceString><![CDATA[thisSocket]]></replaceString>
  </Command>
  <Command __id="1870" _type="PauseCommand" date="Tue May 03 19:54:11 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2665118">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1322]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1872" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:54:11 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2665749" wrapSearch="false">
    <searchString><![CDATA[socketChannel]]></searchString>
    <replaceString><![CDATA[thisSocket]]></replaceString>
  </Command>
  <Command __id="1873" _type="ShellCommand" date="Tue May 03 19:54:12 EDT 2022" starttimestamp="1651619386199" timestamp="2666474" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1875" _type="PauseCommand" date="Tue May 03 19:54:14 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2668644">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2170]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1874" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:54:14 EDT 2022" starttimestamp="1651619386199" timestamp="2668644" />
  <Command __id="1876" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:14 EDT 2022" starttimestamp="1651619386199" timestamp="2668726" />
  <Command __id="1877" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:14 EDT 2022" starttimestamp="1651619386199" timestamp="2668765" />
  <Command __id="1879" _type="PauseCommand" date="Tue May 03 19:54:18 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2671827">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3062]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1881" _type="UndoCommand" date="Tue May 03 19:54:18 EDT 2022" starttimestamp="1651619386199" timestamp="2671866" />
  <Command __id="1883" _type="PauseCommand" date="Tue May 03 19:54:21 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2674894">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[3028]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1882" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:54:21 EDT 2022" starttimestamp="1651619386199" timestamp="2674894" />
  <Command __id="1884" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:21 EDT 2022" starttimestamp="1651619386199" timestamp="2674980" />
  <Command __id="1885" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:21 EDT 2022" starttimestamp="1651619386199" timestamp="2674996" />
  <Command __id="1887" _type="PauseCommand" date="Tue May 03 19:54:26 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2680151">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5155]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1891" _type="UndoCommand" date="Tue May 03 19:54:26 EDT 2022" starttimestamp="1651619386199" timestamp="2680186" />
  <Command __id="1893" _type="PauseCommand" date="Tue May 03 19:54:27 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2681569">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1383]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1892" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:54:27 EDT 2022" starttimestamp="1651619386199" timestamp="2681569" />
  <Command __id="1894" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:27 EDT 2022" starttimestamp="1651619386199" timestamp="2681655" />
  <Command __id="1895" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:27 EDT 2022" starttimestamp="1651619386199" timestamp="2681685" />
  <Command __id="1897" _type="PauseCommand" date="Tue May 03 19:54:31 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2685417">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3732]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1896" _type="MoveCaretCommand" caretOffset="371" date="Tue May 03 19:54:31 EDT 2022" docOffset="1663" starttimestamp="1651619386199" timestamp="2685417" />
  <Command __id="1898" _type="SelectTextCommand" caretOffset="376" date="Tue May 03 19:54:31 EDT 2022" end="376" start="369" starttimestamp="1651619386199" timestamp="2685565" />
  <Command __id="1900" _type="PauseCommand" date="Tue May 03 19:54:34 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2688301">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2736]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1899" _type="MoveCaretCommand" caretOffset="444" date="Tue May 03 19:54:34 EDT 2022" docOffset="1736" starttimestamp="1651619386199" timestamp="2688301" />
  <Command __id="1901" _type="SelectTextCommand" caretOffset="452" date="Tue May 03 19:54:34 EDT 2022" end="452" start="439" starttimestamp="1651619386199" timestamp="2688444" />
  <Command __id="1903" _type="PauseCommand" date="Tue May 03 19:54:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2690095">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1651]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1902" _type="MoveCaretCommand" caretOffset="520" date="Tue May 03 19:54:36 EDT 2022" docOffset="1812" starttimestamp="1651619386199" timestamp="2690095" />
  <Command __id="1904" _type="SelectTextCommand" caretOffset="524" date="Tue May 03 19:54:36 EDT 2022" end="524" start="518" starttimestamp="1651619386199" timestamp="2690225" />
  <Command __id="1906" _type="PauseCommand" date="Tue May 03 19:54:40 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2694484">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4259]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1905" _type="MoveCaretCommand" caretOffset="545" date="Tue May 03 19:54:40 EDT 2022" docOffset="1837" starttimestamp="1651619386199" timestamp="2694484" />
  <Command __id="1907" _type="SelectTextCommand" caretOffset="552" date="Tue May 03 19:54:40 EDT 2022" end="552" start="542" starttimestamp="1651619386199" timestamp="2694620" />
  <Command __id="1908" _type="CopyCommand" date="Tue May 03 19:54:41 EDT 2022" starttimestamp="1651619386199" timestamp="2695543" />
  <Command __id="1910" _type="ShellCommand" date="Tue May 03 19:54:41 EDT 2022" starttimestamp="1651619386199" timestamp="2695791" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1911" _type="PasteCommand" date="Tue May 03 19:54:42 EDT 2022" starttimestamp="1651619386199" timestamp="2695921" />
  <Command __id="1913" _type="PauseCommand" date="Tue May 03 19:54:49 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2703318">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[7397]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1915" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:54:50 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2704042" wrapSearch="false">
    <searchString><![CDATA[readThread]]></searchString>
    <replaceString><![CDATA[thisReader]]></replaceString>
  </Command>
  <Command __id="1917" _type="PauseCommand" date="Tue May 03 19:54:51 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2705248">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1206]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1919" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:54:52 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2705864" wrapSearch="false">
    <searchString><![CDATA[readThread]]></searchString>
    <replaceString><![CDATA[thisReader]]></replaceString>
  </Command>
  <Command __id="1920" _type="ShellCommand" date="Tue May 03 19:54:52 EDT 2022" starttimestamp="1651619386199" timestamp="2706487" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1921" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:54:53 EDT 2022" starttimestamp="1651619386199" timestamp="2707044" />
  <Command __id="1922" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:53 EDT 2022" starttimestamp="1651619386199" timestamp="2707129" />
  <Command __id="1923" _type="EclipseCommand" commandID="" date="Tue May 03 19:54:53 EDT 2022" starttimestamp="1651619386199" timestamp="2707159" />
  <Command __id="1924" _type="MoveCaretCommand" caretOffset="538" date="Tue May 03 19:54:53 EDT 2022" docOffset="538" starttimestamp="1651619386199" timestamp="2707441" />
  <Command __id="1926" _type="PauseCommand" date="Tue May 03 19:55:00 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2714583">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[7142]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="1925" _type="SelectTextCommand" caretOffset="490" date="Tue May 03 19:55:00 EDT 2022" end="885" start="490" starttimestamp="1651619386199" timestamp="2714583" />
  <Command __id="1928" _type="PauseCommand" date="Tue May 03 19:55:02 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2716143">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1560]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1929" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:55:02 EDT 2022" starttimestamp="1651619386199" timestamp="2716152" />
  <Command __id="1931" _type="PauseCommand" date="Tue May 03 19:55:07 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2721764">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5611]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1930" _type="MoveCaretCommand" caretOffset="777" date="Tue May 03 19:55:07 EDT 2022" docOffset="777" starttimestamp="1651619386199" timestamp="2721763" />
  <Command __id="1932" _type="SelectTextCommand" caretOffset="783" date="Tue May 03 19:55:08 EDT 2022" end="783" start="773" starttimestamp="1651619386199" timestamp="2721910" />
  <DocumentChange __id="1853" _type="Replace" date="Tue May 03 19:53:51 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="53" insertionLength="10" int_docASTNodeCount="570" int_docActiveCodeLength="3899" int_docExpressionCount="386" int_docLength="3899" length="10" offset="2270" startLine="53" starttimestamp="1651619386199" timestamp="2645162">
    <deletedText><![CDATA[nioManager]]></deletedText>
    <insertedText><![CDATA[managerNio]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1854" _type="Replace" date="Tue May 03 19:53:51 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="31" insertionLength="10" int_docASTNodeCount="562" int_docActiveCodeLength="3899" int_docExpressionCount="382" int_docLength="3899" length="10" offset="1553" startLine="31" starttimestamp="1651619386199" timestamp="2645176">
    <deletedText><![CDATA[nioManager]]></deletedText>
    <insertedText><![CDATA[managerNio]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1863" _type="Replace" date="Tue May 03 19:54:09 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3906" docExpressionCount="387" docLength="3906" endLine="72" insertionLength="10" int_docASTNodeCount="571" int_docActiveCodeLength="3896" int_docExpressionCount="387" int_docLength="3896" length="13" offset="2730" startLine="72" starttimestamp="1651619386199" timestamp="2663160">
    <deletedText><![CDATA[socketChannel]]></deletedText>
    <insertedText><![CDATA[thisSocket]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1865" _type="Replace" date="Tue May 03 19:54:09 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3903" docExpressionCount="387" docLength="3903" endLine="64" insertionLength="10" int_docASTNodeCount="571" int_docActiveCodeLength="3893" int_docExpressionCount="387" int_docLength="3893" length="13" offset="2462" startLine="64" starttimestamp="1651619386199" timestamp="2663172">
    <deletedText><![CDATA[socketChannel]]></deletedText>
    <insertedText><![CDATA[thisSocket]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1866" _type="Replace" date="Tue May 03 19:54:09 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3900" docExpressionCount="387" docLength="3900" endLine="53" insertionLength="10" int_docASTNodeCount="570" int_docActiveCodeLength="3890" int_docExpressionCount="386" int_docLength="3890" length="13" offset="2287" startLine="53" starttimestamp="1651619386199" timestamp="2663186">
    <deletedText><![CDATA[socketChannel]]></deletedText>
    <insertedText><![CDATA[thisSocket]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1867" _type="Replace" date="Tue May 03 19:54:09 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3897" docExpressionCount="387" docLength="3897" endLine="32" insertionLength="10" int_docASTNodeCount="565" int_docActiveCodeLength="3887" int_docExpressionCount="385" int_docLength="3887" length="13" offset="1626" startLine="32" starttimestamp="1651619386199" timestamp="2663201">
    <deletedText><![CDATA[socketChannel]]></deletedText>
    <insertedText><![CDATA[thisSocket]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1869" _type="Replace" date="Tue May 03 19:54:11 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3894" docExpressionCount="387" docLength="3894" endLine="83" insertionLength="10" int_docASTNodeCount="569" int_docActiveCodeLength="3884" int_docExpressionCount="385" int_docLength="3884" length="13" offset="2972" startLine="83" starttimestamp="1651619386199" timestamp="2665118">
    <deletedText><![CDATA[socketChannel]]></deletedText>
    <insertedText><![CDATA[thisSocket]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1871" _type="Replace" date="Tue May 03 19:54:11 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3891" docExpressionCount="387" docLength="3891" endLine="86" insertionLength="10" int_docASTNodeCount="570" int_docActiveCodeLength="3881" int_docExpressionCount="386" int_docLength="3881" length="13" offset="3110" startLine="86" starttimestamp="1651619386199" timestamp="2665131">
    <deletedText><![CDATA[socketChannel]]></deletedText>
    <insertedText><![CDATA[thisSocket]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1878" _type="Replace" date="Tue May 03 19:54:18 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3894" docExpressionCount="387" docLength="3894" endLine="86" insertionLength="13" int_docASTNodeCount="570" int_docActiveCodeLength="3881" int_docExpressionCount="386" int_docLength="3881" length="10" offset="3110" startLine="86" starttimestamp="1651619386199" timestamp="2671827">
    <deletedText><![CDATA[thisSocket]]></deletedText>
    <insertedText><![CDATA[socketChannel]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1880" _type="Replace" date="Tue May 03 19:54:18 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3897" docExpressionCount="387" docLength="3897" endLine="83" insertionLength="13" int_docASTNodeCount="569" int_docActiveCodeLength="3884" int_docExpressionCount="385" int_docLength="3884" length="10" offset="2972" startLine="83" starttimestamp="1651619386199" timestamp="2671845">
    <deletedText><![CDATA[thisSocket]]></deletedText>
    <insertedText><![CDATA[socketChannel]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1886" _type="Replace" date="Tue May 03 19:54:26 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3900" docExpressionCount="387" docLength="3900" endLine="32" insertionLength="13" int_docASTNodeCount="565" int_docActiveCodeLength="3887" int_docExpressionCount="385" int_docLength="3887" length="10" offset="1626" startLine="32" starttimestamp="1651619386199" timestamp="2680151">
    <deletedText><![CDATA[thisSocket]]></deletedText>
    <insertedText><![CDATA[socketChannel]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1888" _type="Replace" date="Tue May 03 19:54:26 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3903" docExpressionCount="387" docLength="3903" endLine="53" insertionLength="13" int_docASTNodeCount="570" int_docActiveCodeLength="3890" int_docExpressionCount="386" int_docLength="3890" length="10" offset="2287" startLine="53" starttimestamp="1651619386199" timestamp="2680167">
    <deletedText><![CDATA[thisSocket]]></deletedText>
    <insertedText><![CDATA[socketChannel]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1889" _type="Replace" date="Tue May 03 19:54:26 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3906" docExpressionCount="387" docLength="3906" endLine="64" insertionLength="13" int_docASTNodeCount="571" int_docActiveCodeLength="3893" int_docExpressionCount="387" int_docLength="3893" length="10" offset="2462" startLine="64" starttimestamp="1651619386199" timestamp="2680169">
    <deletedText><![CDATA[thisSocket]]></deletedText>
    <insertedText><![CDATA[socketChannel]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1890" _type="Replace" date="Tue May 03 19:54:26 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="72" insertionLength="13" int_docASTNodeCount="571" int_docActiveCodeLength="3896" int_docExpressionCount="387" int_docLength="3896" length="10" offset="2730" startLine="72" starttimestamp="1651619386199" timestamp="2680170">
    <deletedText><![CDATA[thisSocket]]></deletedText>
    <insertedText><![CDATA[socketChannel]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1912" _type="Replace" date="Tue May 03 19:54:49 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="94" insertionLength="10" int_docASTNodeCount="569" int_docActiveCodeLength="3899" int_docExpressionCount="385" int_docLength="3899" length="10" offset="3343" startLine="94" starttimestamp="1651619386199" timestamp="2703318">
    <deletedText><![CDATA[readThread]]></deletedText>
    <insertedText><![CDATA[thisReader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1914" _type="Replace" date="Tue May 03 19:54:49 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="95" insertionLength="10" int_docASTNodeCount="570" int_docActiveCodeLength="3899" int_docExpressionCount="386" int_docLength="3899" length="10" offset="3380" startLine="95" starttimestamp="1651619386199" timestamp="2703338">
    <deletedText><![CDATA[readThread]]></deletedText>
    <insertedText><![CDATA[thisReader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1916" _type="Replace" date="Tue May 03 19:54:51 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="37" insertionLength="10" int_docASTNodeCount="565" int_docActiveCodeLength="3899" int_docExpressionCount="384" int_docLength="3899" length="10" offset="1834" startLine="37" starttimestamp="1651619386199" timestamp="2705248">
    <deletedText><![CDATA[readThread]]></deletedText>
    <insertedText><![CDATA[thisReader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1918" _type="Replace" date="Tue May 03 19:54:51 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="24" insertionLength="10" int_docASTNodeCount="567" int_docActiveCodeLength="3899" int_docExpressionCount="384" int_docLength="3899" length="10" offset="1168" startLine="24" starttimestamp="1651619386199" timestamp="2705295">
    <deletedText><![CDATA[readThread]]></deletedText>
    <insertedText><![CDATA[thisReader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1927" _type="Delete" date="Tue May 03 19:55:02 EDT 2022" docASTNodeCount="511" docActiveCodeLength="3514" docExpressionCount="332" docLength="3514" endLine="19" length="395" offset="490" startLine="15" starttimestamp="1651619386199" timestamp="2716143">
    <text><![CDATA[import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;]]></text>
  </DocumentChange>
  <DocumentChange __id="1933" _type="Replace" date="Tue May 03 19:55:12 EDT 2022" docASTNodeCount="511" docActiveCodeLength="3505" docExpressionCount="332" docLength="3505" endLine="20" insertionLength="1" int_docASTNodeCount="507" int_docActiveCodeLength="3504" int_docExpressionCount="329" int_docLength="3504" length="10" offset="773" startLine="20" starttimestamp="1651619386199" timestamp="2726227">
    <deletedText><![CDATA[thisReader]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <Command __id="1934" _type="PauseCommand" date="Tue May 03 19:55:12 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2726227">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[4317]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1935" _type="InsertStringCommand" date="Tue May 03 19:55:12 EDT 2022" starttimestamp="1651619386199" timestamp="2726232" timestamp2="2726232">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1937" _type="InsertStringCommand" date="Tue May 03 19:55:12 EDT 2022" starttimestamp="1651619386199" timestamp="2726310" timestamp2="2726310">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1939" _type="InsertStringCommand" date="Tue May 03 19:55:12 EDT 2022" starttimestamp="1651619386199" timestamp="2726470" timestamp2="2726470">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1941" _type="InsertStringCommand" date="Tue May 03 19:55:12 EDT 2022" starttimestamp="1651619386199" timestamp="2726625" timestamp2="2726625">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1943" _type="InsertStringCommand" date="Tue May 03 19:55:13 EDT 2022" starttimestamp="1651619386199" timestamp="2726987" timestamp2="2726987">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1945" _type="InsertStringCommand" date="Tue May 03 19:55:13 EDT 2022" starttimestamp="1651619386199" timestamp="2727078" timestamp2="2727078">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1948" _type="PauseCommand" date="Tue May 03 19:55:14 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2728579">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1501]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="1947" _type="InsertStringCommand" date="Tue May 03 19:55:14 EDT 2022" starttimestamp="1651619386199" timestamp="2728579" timestamp2="2728579">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="1950" _type="InsertStringCommand" date="Tue May 03 19:55:15 EDT 2022" starttimestamp="1651619386199" timestamp="2729020" timestamp2="2729020">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1952" _type="InsertStringCommand" date="Tue May 03 19:55:15 EDT 2022" starttimestamp="1651619386199" timestamp="2729462" timestamp2="2729462">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1954" _type="InsertStringCommand" date="Tue May 03 19:55:15 EDT 2022" starttimestamp="1651619386199" timestamp="2729681" timestamp2="2729681">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1956" _type="InsertStringCommand" date="Tue May 03 19:55:15 EDT 2022" starttimestamp="1651619386199" timestamp="2729752" timestamp2="2729752">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1958" _type="InsertStringCommand" date="Tue May 03 19:55:16 EDT 2022" starttimestamp="1651619386199" timestamp="2729929" timestamp2="2729929">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1960" _type="PauseCommand" date="Tue May 03 19:55:19 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2733304">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3375]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="1961" _type="UndoCommand" date="Tue May 03 19:55:19 EDT 2022" starttimestamp="1651619386199" timestamp="2733314" />
  <Command __id="1963" _type="UndoCommand" date="Tue May 03 19:55:19 EDT 2022" starttimestamp="1651619386199" timestamp="2733781" />
  <Command __id="1965" _type="UndoCommand" date="Tue May 03 19:55:20 EDT 2022" starttimestamp="1651619386199" timestamp="2734188" />
  <Command __id="1967" _type="PauseCommand" date="Tue May 03 19:55:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2735257">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1069]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1969" _type="UndoCommand" date="Tue May 03 19:55:21 EDT 2022" starttimestamp="1651619386199" timestamp="2735289" />
  <Command __id="1971" _type="PauseCommand" date="Tue May 03 19:55:24 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2738302">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[3013]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1970" _type="CopyCommand" date="Tue May 03 19:55:24 EDT 2022" starttimestamp="1651619386199" timestamp="2738302" />
  <Command __id="1973" _type="PauseCommand" date="Tue May 03 19:55:27 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2741151">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[2849]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="1972" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:55:27 EDT 2022" starttimestamp="1651619386199" timestamp="2741151" />
  <Command __id="1974" _type="EclipseCommand" commandID="" date="Tue May 03 19:55:27 EDT 2022" starttimestamp="1651619386199" timestamp="2741284" />
  <Command __id="1975" _type="EclipseCommand" commandID="" date="Tue May 03 19:55:27 EDT 2022" starttimestamp="1651619386199" timestamp="2741313" />
  <Command __id="1977" _type="PauseCommand" date="Tue May 03 19:55:33 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2746907">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5594]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="1976" _type="CopyCommand" date="Tue May 03 19:55:33 EDT 2022" starttimestamp="1651619386199" timestamp="2746907" />
  <Command __id="1979" _type="ShellCommand" date="Tue May 03 19:55:33 EDT 2022" starttimestamp="1651619386199" timestamp="2747095" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1981" _type="PauseCommand" date="Tue May 03 19:55:38 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2752576">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[5481]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="1983" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:55:39 EDT 2022" forward="false" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2753316" wrapSearch="false">
    <searchString><![CDATA[readThread]]></searchString>
    <replaceString><![CDATA[thisReader]]></replaceString>
  </Command>
  <Command __id="1985" _type="PauseCommand" date="Tue May 03 19:55:41 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2755089">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[FindCommand]]></prev>
    <pause><![CDATA[1773]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[FindCommand]]></next>
  </Command>
  <Command __id="1984" _type="FindCommand" caseSensitive="true" date="Tue May 03 19:55:41 EDT 2022" forward="true" matchWord="false" offset="0" regexp="false" replaceAll="false" selection="Replace All" selectionScope="false" starttimestamp="1651619386199" timestamp="2755089" wrapSearch="false">
    <searchString><![CDATA[readThread]]></searchString>
    <replaceString><![CDATA[thisReader]]></replaceString>
  </Command>
  <Command __id="1986" _type="ShellCommand" date="Tue May 03 19:55:41 EDT 2022" starttimestamp="1651619386199" timestamp="2755700" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1988" _type="PauseCommand" date="Tue May 03 19:55:43 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2756969">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1269]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="1987" _type="MoveCaretCommand" caretOffset="1171" date="Tue May 03 19:55:43 EDT 2022" docOffset="1171" starttimestamp="1651619386199" timestamp="2756969" />
  <Command __id="1989" _type="SelectTextCommand" caretOffset="1178" date="Tue May 03 19:55:43 EDT 2022" end="1178" start="1168" starttimestamp="1651619386199" timestamp="2757123" />
  <Command __id="1991" _type="InsertStringCommand" date="Tue May 03 19:55:43 EDT 2022" starttimestamp="1651619386199" timestamp="2757445" timestamp2="2757445">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1993" _type="InsertStringCommand" date="Tue May 03 19:55:43 EDT 2022" starttimestamp="1651619386199" timestamp="2757553" timestamp2="2757553">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1995" _type="InsertStringCommand" date="Tue May 03 19:55:44 EDT 2022" starttimestamp="1651619386199" timestamp="2757835" timestamp2="2757835">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1997" _type="InsertStringCommand" date="Tue May 03 19:55:44 EDT 2022" starttimestamp="1651619386199" timestamp="2757934" timestamp2="2757934">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1999" _type="PauseCommand" date="Tue May 03 19:55:45 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2759053">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1119]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2000" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:55:45 EDT 2022" starttimestamp="1651619386199" timestamp="2759056" />
  <Command __id="2002" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:55:45 EDT 2022" starttimestamp="1651619386199" timestamp="2759186" />
  <Command __id="2004" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:55:45 EDT 2022" starttimestamp="1651619386199" timestamp="2759425" />
  <Command __id="2006" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:55:45 EDT 2022" starttimestamp="1651619386199" timestamp="2759616" />
  <Command __id="2008" _type="PasteCommand" date="Tue May 03 19:55:46 EDT 2022" starttimestamp="1651619386199" timestamp="2759941" />
  <Command __id="2009" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:55:46 EDT 2022" starttimestamp="1651619386199" timestamp="2760710" />
  <Command __id="2010" _type="EclipseCommand" commandID="" date="Tue May 03 19:55:46 EDT 2022" starttimestamp="1651619386199" timestamp="2760798" />
  <Command __id="2011" _type="EclipseCommand" commandID="" date="Tue May 03 19:55:47 EDT 2022" starttimestamp="1651619386199" timestamp="2760836" />
  <Command __id="2012" _type="MoveCaretCommand" caretOffset="1186" date="Tue May 03 19:55:47 EDT 2022" docOffset="1186" starttimestamp="1651619386199" timestamp="2761264" />
  <Command __id="2014" _type="PauseCommand" date="Tue May 03 19:55:50 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2764738">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3474]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2013" _type="SelectTextCommand" caretOffset="785" date="Tue May 03 19:55:50 EDT 2022" end="954" start="785" starttimestamp="1651619386199" timestamp="2764738" />
  <Command __id="2015" _type="MoveCaretCommand" caretOffset="790" date="Tue May 03 19:55:51 EDT 2022" docOffset="790" starttimestamp="1651619386199" timestamp="2764950" />
  <Command __id="2017" _type="PauseCommand" date="Tue May 03 19:55:52 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2766772">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1822]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2016" _type="SelectTextCommand" caretOffset="490" date="Tue May 03 19:55:52 EDT 2022" end="885" start="490" starttimestamp="1651619386199" timestamp="2766772" />
  <Command __id="2019" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:55:53 EDT 2022" starttimestamp="1651619386199" timestamp="2767220" />
  <Command __id="2021" _type="PauseCommand" date="Tue May 03 19:55:57 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2770889">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3669]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2020" _type="SelectTextCommand" caretOffset="901" date="Tue May 03 19:55:57 EDT 2022" end="947" start="901" starttimestamp="1651619386199" timestamp="2770889" />
  <Command __id="2023" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:55:57 EDT 2022" starttimestamp="1651619386199" timestamp="2770973" />
  <Command __id="2025" _type="PauseCommand" date="Tue May 03 19:55:58 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2772439">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1466]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2024" _type="SelectTextCommand" caretOffset="766" date="Tue May 03 19:55:58 EDT 2022" end="899" start="766" starttimestamp="1651619386199" timestamp="2772439" />
  <Command __id="2027" _type="CutCommand" date="Tue May 03 19:55:59 EDT 2022" starttimestamp="1651619386199" timestamp="2773242" />
  <Command __id="2028" _type="MoveCaretCommand" caretOffset="490" date="Tue May 03 19:56:00 EDT 2022" docOffset="490" starttimestamp="1651619386199" timestamp="2773890" />
  <Command __id="2030" _type="InsertStringCommand" date="Tue May 03 19:56:00 EDT 2022" starttimestamp="1651619386199" timestamp="2774568" timestamp2="2774568">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2032" _type="PasteCommand" date="Tue May 03 19:56:00 EDT 2022" starttimestamp="1651619386199" timestamp="2774787" />
  <Command __id="2034" _type="InsertStringCommand" date="Tue May 03 19:56:01 EDT 2022" starttimestamp="1651619386199" timestamp="2774923" timestamp2="2774923">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2035" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 19:56:01 EDT 2022" starttimestamp="1651619386199" timestamp="2775438" />
  <Command __id="2036" _type="EclipseCommand" commandID="" date="Tue May 03 19:56:01 EDT 2022" starttimestamp="1651619386199" timestamp="2775524" />
  <Command __id="2037" _type="EclipseCommand" commandID="" date="Tue May 03 19:56:01 EDT 2022" starttimestamp="1651619386199" timestamp="2775541" />
  <Command __id="2038" _type="MoveCaretCommand" caretOffset="490" date="Tue May 03 19:56:02 EDT 2022" docOffset="490" starttimestamp="1651619386199" timestamp="2776020" />
  <Command __id="2040" _type="PauseCommand" date="Tue May 03 19:56:05 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2779707">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3687]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2039" _type="ShellCommand" date="Tue May 03 19:56:05 EDT 2022" starttimestamp="1651619386199" timestamp="2779707" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2041" _type="ShellCommand" date="Tue May 03 19:56:06 EDT 2022" starttimestamp="1651619386199" timestamp="2779810" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2043" _type="PauseCommand" date="Tue May 03 19:56:10 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2783968">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4158]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2042" _type="MoveCaretCommand" caretOffset="2843" date="Tue May 03 19:56:10 EDT 2022" docOffset="2843" starttimestamp="1651619386199" timestamp="2783968" />
  <Command __id="2045" _type="PauseCommand" date="Tue May 03 19:56:12 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2786713">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2745]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2044" _type="MoveCaretCommand" caretOffset="99" date="Tue May 03 19:56:12 EDT 2022" docOffset="99" starttimestamp="1651619386199" timestamp="2786713" />
  <Command __id="2046" _type="SelectTextCommand" caretOffset="115" date="Tue May 03 19:56:13 EDT 2022" end="115" start="98" starttimestamp="1651619386199" timestamp="2787045" />
  <Command __id="2047" _type="SelectTextCommand" caretOffset="118" date="Tue May 03 19:56:13 EDT 2022" end="118" start="82" starttimestamp="1651619386199" timestamp="2787180" />
  <Command __id="2049" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 19:56:14 EDT 2022" starttimestamp="1651619386199" timestamp="2787816" />
  <Command __id="2056" _type="PauseCommand" date="Tue May 03 19:56:18 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2792163">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2598]]></pause>
    <nextType><![CDATA[Debug]]></nextType>
    <next><![CDATA[RunCommand]]></next>
  </Command>
  <Command __id="2055" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:56:18 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2792162" type="Run" />
  <Command __id="2058" _type="PauseCommand" date="Tue May 03 19:56:20 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2794044">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[1882]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2057" _type="ShellCommand" date="Tue May 03 19:56:20 EDT 2022" starttimestamp="1651619386199" timestamp="2794044" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2060" _type="PauseCommand" date="Tue May 03 19:56:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2795524">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1480]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2059" _type="ShellCommand" date="Tue May 03 19:56:21 EDT 2022" starttimestamp="1651619386199" timestamp="2795524" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2061" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:56:21 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2795665" type="Run" />
  <Command __id="2062" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 19:56:21 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2795665" type="Run" />
  <Command __id="2063" _type="ShellCommand" date="Tue May 03 19:56:22 EDT 2022" starttimestamp="1651619386199" timestamp="2796430" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2065" _type="PauseCommand" date="Tue May 03 19:56:24 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2797979">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1549]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2064" _type="ShellCommand" date="Tue May 03 19:56:24 EDT 2022" starttimestamp="1651619386199" timestamp="2797979" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2069" _type="PauseCommand" date="Tue May 03 19:56:43 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="2817529">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11505]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2068" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 19:56:43 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="2817529" />
  <Command __id="2070" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 19:56:43 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="2817529" />
  <Command __id="2071" _type="ShellCommand" date="Tue May 03 19:56:43 EDT 2022" starttimestamp="1651619386199" timestamp="2817655" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2072" _type="EclipseCommand" commandID="" date="Tue May 03 19:56:43 EDT 2022" starttimestamp="1651619386199" timestamp="2817674" />
  <Command __id="2073" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:56:43 EDT 2022" starttimestamp="1651619386199" timestamp="2817676" />
  <Command __id="2074" _type="EclipseCommand" commandID="" date="Tue May 03 19:56:43 EDT 2022" starttimestamp="1651619386199" timestamp="2817707" />
  <Command __id="2078" _type="PauseCommand" date="Tue May 03 19:56:57 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="2831014">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10919]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2077" _type="ShellCommand" date="Tue May 03 19:56:57 EDT 2022" starttimestamp="1651619386199" timestamp="2831014" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2079" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:56:57 EDT 2022" starttimestamp="1651619386199" timestamp="2831044" />
  <Command __id="2080" _type="EclipseCommand" commandID="" date="Tue May 03 19:56:57 EDT 2022" starttimestamp="1651619386199" timestamp="2831308" />
  <Command __id="2081" _type="EclipseCommand" commandID="" date="Tue May 03 19:56:57 EDT 2022" starttimestamp="1651619386199" timestamp="2831327" />
  <Command __id="2085" _type="PauseCommand" date="Tue May 03 19:57:11 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="2845525">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[10456]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2084" _type="ShellCommand" date="Tue May 03 19:57:11 EDT 2022" starttimestamp="1651619386199" timestamp="2845525" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2086" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:11 EDT 2022" starttimestamp="1651619386199" timestamp="2845546" />
  <Command __id="2087" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:57:11 EDT 2022" starttimestamp="1651619386199" timestamp="2845547" />
  <Command __id="2088" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:11 EDT 2022" starttimestamp="1651619386199" timestamp="2845593" />
  <Command __id="2092" _type="PauseCommand" date="Tue May 03 19:57:26 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2860059">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[9571]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2091" _type="ShellCommand" date="Tue May 03 19:57:26 EDT 2022" starttimestamp="1651619386199" timestamp="2860059" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2093" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:26 EDT 2022" starttimestamp="1651619386199" timestamp="2860089" />
  <Command __id="2094" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:57:26 EDT 2022" starttimestamp="1651619386199" timestamp="2860090" />
  <Command __id="2095" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:26 EDT 2022" starttimestamp="1651619386199" timestamp="2860128" />
  <Command __id="2097" _type="PauseCommand" date="Tue May 03 19:57:31 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2865383">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5255]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2096" _type="ConsoleOutput" date="Tue May 03 19:57:31 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2865383" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67636
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"22568"), Diff(INSERT,"67636"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2101" _type="PauseCommand" date="Tue May 03 19:57:39 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2873550">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6103]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2100" _type="ShellCommand" date="Tue May 03 19:57:39 EDT 2022" starttimestamp="1651619386199" timestamp="2873550" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2102" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:39 EDT 2022" starttimestamp="1651619386199" timestamp="2873587" />
  <Command __id="2103" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:57:39 EDT 2022" starttimestamp="1651619386199" timestamp="2873589" />
  <Command __id="2104" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:39 EDT 2022" starttimestamp="1651619386199" timestamp="2873660" />
  <Command __id="2106" _type="PauseCommand" date="Tue May 03 19:57:41 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2875308">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1648]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2105" _type="ConsoleOutput" date="Tue May 03 19:57:41 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="2875308" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67636"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2110" _type="PauseCommand" date="Tue May 03 19:57:55 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="2889775">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11804]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2109" _type="ShellCommand" date="Tue May 03 19:57:55 EDT 2022" starttimestamp="1651619386199" timestamp="2889775" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2111" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:55 EDT 2022" starttimestamp="1651619386199" timestamp="2889792" />
  <Command __id="2112" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:57:55 EDT 2022" starttimestamp="1651619386199" timestamp="2889793" />
  <Command __id="2113" _type="EclipseCommand" commandID="" date="Tue May 03 19:57:56 EDT 2022" starttimestamp="1651619386199" timestamp="2889807" />
  <Command __id="2117" _type="PauseCommand" date="Tue May 03 19:58:07 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2901255">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8674]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2116" _type="ShellCommand" date="Tue May 03 19:58:07 EDT 2022" starttimestamp="1651619386199" timestamp="2901255" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2118" _type="EclipseCommand" commandID="" date="Tue May 03 19:58:07 EDT 2022" starttimestamp="1651619386199" timestamp="2901273" />
  <Command __id="2119" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:58:07 EDT 2022" starttimestamp="1651619386199" timestamp="2901274" />
  <Command __id="2120" _type="EclipseCommand" commandID="" date="Tue May 03 19:58:07 EDT 2022" starttimestamp="1651619386199" timestamp="2901289" />
  <Command __id="2122" _type="PauseCommand" date="Tue May 03 19:58:09 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="2903202">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1913]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2121" _type="ShellCommand" date="Tue May 03 19:58:09 EDT 2022" starttimestamp="1651619386199" timestamp="2903202" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2124" _type="PauseCommand" date="Tue May 03 19:58:11 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2905337">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2135]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2123" _type="ShellCommand" date="Tue May 03 19:58:11 EDT 2022" starttimestamp="1651619386199" timestamp="2905337" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2128" _type="PauseCommand" date="Tue May 03 19:58:24 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2918257">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6747]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2127" _type="ShellCommand" date="Tue May 03 19:58:24 EDT 2022" starttimestamp="1651619386199" timestamp="2918257" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2129" _type="EclipseCommand" commandID="" date="Tue May 03 19:58:24 EDT 2022" starttimestamp="1651619386199" timestamp="2918283" />
  <Command __id="2130" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:58:24 EDT 2022" starttimestamp="1651619386199" timestamp="2918284" />
  <Command __id="2131" _type="EclipseCommand" commandID="" date="Tue May 03 19:58:24 EDT 2022" starttimestamp="1651619386199" timestamp="2918373" />
  <Command __id="2133" _type="PauseCommand" date="Tue May 03 19:58:28 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2922750">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4377]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2132" _type="ShellCommand" date="Tue May 03 19:58:28 EDT 2022" starttimestamp="1651619386199" timestamp="2922750" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2135" _type="PauseCommand" date="Tue May 03 19:58:37 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2931198">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8448]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2134" _type="ShellCommand" date="Tue May 03 19:58:37 EDT 2022" starttimestamp="1651619386199" timestamp="2931198" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2136" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:58:37 EDT 2022" starttimestamp="1651619386199" timestamp="2931213" />
  <Command __id="2140" _type="PauseCommand" date="Tue May 03 19:58:47 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2940998">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7608]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2139" _type="ShellCommand" date="Tue May 03 19:58:47 EDT 2022" starttimestamp="1651619386199" timestamp="2940998" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2141" _type="EclipseCommand" commandID="" date="Tue May 03 19:58:47 EDT 2022" starttimestamp="1651619386199" timestamp="2941034" />
  <Command __id="2142" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:58:47 EDT 2022" starttimestamp="1651619386199" timestamp="2941035" />
  <Command __id="2143" _type="EclipseCommand" commandID="" date="Tue May 03 19:58:47 EDT 2022" starttimestamp="1651619386199" timestamp="2941166" />
  <Command __id="2147" _type="PauseCommand" date="Tue May 03 19:59:03 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2957393">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8939]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2146" _type="ShellCommand" date="Tue May 03 19:59:03 EDT 2022" starttimestamp="1651619386199" timestamp="2957393" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2148" _type="EclipseCommand" commandID="" date="Tue May 03 19:59:03 EDT 2022" starttimestamp="1651619386199" timestamp="2957412" />
  <Command __id="2149" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:59:03 EDT 2022" starttimestamp="1651619386199" timestamp="2957412" />
  <Command __id="2150" _type="EclipseCommand" commandID="" date="Tue May 03 19:59:03 EDT 2022" starttimestamp="1651619386199" timestamp="2957430" />
  <Command __id="2154" _type="PauseCommand" date="Tue May 03 19:59:15 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2969280">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8245]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2153" _type="ShellCommand" date="Tue May 03 19:59:15 EDT 2022" starttimestamp="1651619386199" timestamp="2969280" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2155" _type="EclipseCommand" commandID="" date="Tue May 03 19:59:15 EDT 2022" starttimestamp="1651619386199" timestamp="2969297" />
  <Command __id="2156" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:59:15 EDT 2022" starttimestamp="1651619386199" timestamp="2969298" />
  <Command __id="2157" _type="EclipseCommand" commandID="" date="Tue May 03 19:59:15 EDT 2022" starttimestamp="1651619386199" timestamp="2969310" />
  <Command __id="2159" _type="PauseCommand" date="Tue May 03 19:59:20 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2974246">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4936]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2158" _type="ShellCommand" date="Tue May 03 19:59:20 EDT 2022" starttimestamp="1651619386199" timestamp="2974246" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2163" _type="PauseCommand" date="Tue May 03 19:59:28 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2982011">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[4039]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2162" _type="ShellCommand" date="Tue May 03 19:59:28 EDT 2022" starttimestamp="1651619386199" timestamp="2982011" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2164" _type="EclipseCommand" commandID="" date="Tue May 03 19:59:28 EDT 2022" starttimestamp="1651619386199" timestamp="2982029" />
  <Command __id="2165" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:59:28 EDT 2022" starttimestamp="1651619386199" timestamp="2982029" />
  <Command __id="2166" _type="EclipseCommand" commandID="" date="Tue May 03 19:59:28 EDT 2022" starttimestamp="1651619386199" timestamp="2982070" />
  <Command __id="2168" _type="PauseCommand" date="Tue May 03 19:59:30 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2984755">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2685]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2167" _type="ShellCommand" date="Tue May 03 19:59:30 EDT 2022" starttimestamp="1651619386199" timestamp="2984755" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2170" _type="PauseCommand" date="Tue May 03 19:59:34 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="2988779">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4024]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2169" _type="ShellCommand" date="Tue May 03 19:59:34 EDT 2022" starttimestamp="1651619386199" timestamp="2988779" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2172" _type="PauseCommand" date="Tue May 03 19:59:42 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="2995933">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7154]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2173" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 19:59:42 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="2996108" />
  <Command __id="2175" _type="PauseCommand" date="Tue May 03 19:59:46 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3000044">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3936]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2174" _type="ShellCommand" date="Tue May 03 19:59:46 EDT 2022" starttimestamp="1651619386199" timestamp="3000044" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2177" _type="PauseCommand" date="Tue May 03 19:59:47 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3001519">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1475]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2176" _type="ShellCommand" date="Tue May 03 19:59:47 EDT 2022" starttimestamp="1651619386199" timestamp="3001519" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2178" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 19:59:47 EDT 2022" starttimestamp="1651619386199" timestamp="3001535" />
  <Command __id="2182" _type="PauseCommand" date="Tue May 03 20:00:00 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3014622">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[11534]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2181" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 20:00:00 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3014622" />
  <Command __id="2183" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 20:00:00 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3014623" />
  <Command __id="2184" _type="ShellCommand" date="Tue May 03 20:00:01 EDT 2022" starttimestamp="1651619386199" timestamp="3014832" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2185" _type="EclipseCommand" commandID="" date="Tue May 03 20:00:01 EDT 2022" starttimestamp="1651619386199" timestamp="3014844" />
  <Command __id="2186" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:00:01 EDT 2022" starttimestamp="1651619386199" timestamp="3014845" />
  <Command __id="2187" _type="EclipseCommand" commandID="" date="Tue May 03 20:00:01 EDT 2022" starttimestamp="1651619386199" timestamp="3014935" />
  <Command __id="2189" _type="PauseCommand" date="Tue May 03 20:00:03 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3017351">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2416]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2188" _type="ShellCommand" date="Tue May 03 20:00:03 EDT 2022" starttimestamp="1651619386199" timestamp="3017351" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2191" _type="PauseCommand" date="Tue May 03 20:00:08 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3021973">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4622]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2190" _type="ShellCommand" date="Tue May 03 20:00:08 EDT 2022" starttimestamp="1651619386199" timestamp="3021973" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2193" _type="PauseCommand" date="Tue May 03 20:00:10 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3023969">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1996]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2192" _type="ShellCommand" date="Tue May 03 20:00:10 EDT 2022" starttimestamp="1651619386199" timestamp="3023969" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2195" _type="PauseCommand" date="Tue May 03 20:00:11 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3025732">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1763]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2194" _type="ShellCommand" date="Tue May 03 20:00:11 EDT 2022" starttimestamp="1651619386199" timestamp="3025732" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2196" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:00:11 EDT 2022" starttimestamp="1651619386199" timestamp="3025749" />
  <Command __id="2198" _type="PauseCommand" date="Tue May 03 20:00:13 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3026984">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1235]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2199" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:00:13 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3027153" />
  <Command __id="2200" _type="ShellCommand" date="Tue May 03 20:00:13 EDT 2022" starttimestamp="1651619386199" timestamp="3027522" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2201" _type="ShellCommand" date="Tue May 03 20:00:14 EDT 2022" starttimestamp="1651619386199" timestamp="3028351" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2205" _type="PauseCommand" date="Tue May 03 20:00:30 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3044125">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[13846]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2204" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 20:00:30 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3044125" />
  <Command __id="2206" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 20:00:30 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3044125" />
  <Command __id="2207" _type="ShellCommand" date="Tue May 03 20:00:30 EDT 2022" starttimestamp="1651619386199" timestamp="3044238" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2208" _type="EclipseCommand" commandID="" date="Tue May 03 20:00:30 EDT 2022" starttimestamp="1651619386199" timestamp="3044261" />
  <Command __id="2209" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:00:30 EDT 2022" starttimestamp="1651619386199" timestamp="3044262" />
  <Command __id="2210" _type="EclipseCommand" commandID="" date="Tue May 03 20:00:30 EDT 2022" starttimestamp="1651619386199" timestamp="3044302" />
  <Command __id="2212" _type="PauseCommand" date="Tue May 03 20:00:31 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3045338">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1036]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2213" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:00:31 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3045683" />
  <Command __id="2215" _type="PauseCommand" date="Tue May 03 20:00:35 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3049213">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3530]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2216" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:00:35 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3049391" />
  <Command __id="2217" _type="ShellCommand" date="Tue May 03 20:00:36 EDT 2022" starttimestamp="1651619386199" timestamp="3050362" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2219" _type="PauseCommand" date="Tue May 03 20:00:38 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3052056">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1694]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2218" _type="ShellCommand" date="Tue May 03 20:00:38 EDT 2022" starttimestamp="1651619386199" timestamp="3052056" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2220" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:00:38 EDT 2022" starttimestamp="1651619386199" timestamp="3052081" />
  <Command __id="2224" _type="PauseCommand" date="Tue May 03 20:00:46 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3060026">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6484]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2223" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 20:00:46 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3060026" />
  <Command __id="2225" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 20:00:46 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3060026" />
  <Command __id="2226" _type="ShellCommand" date="Tue May 03 20:00:46 EDT 2022" starttimestamp="1651619386199" timestamp="3060177" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2227" _type="EclipseCommand" commandID="" date="Tue May 03 20:00:46 EDT 2022" starttimestamp="1651619386199" timestamp="3060193" />
  <Command __id="2228" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:00:46 EDT 2022" starttimestamp="1651619386199" timestamp="3060194" />
  <Command __id="2229" _type="EclipseCommand" commandID="" date="Tue May 03 20:00:46 EDT 2022" starttimestamp="1651619386199" timestamp="3060264" />
  <Command __id="2231" _type="PauseCommand" date="Tue May 03 20:00:49 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3062871">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2607]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2230" _type="ShellCommand" date="Tue May 03 20:00:49 EDT 2022" starttimestamp="1651619386199" timestamp="3062871" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2233" _type="PauseCommand" date="Tue May 03 20:00:50 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3064544">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1673]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2232" _type="ShellCommand" date="Tue May 03 20:00:50 EDT 2022" starttimestamp="1651619386199" timestamp="3064544" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2234" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:00:50 EDT 2022" starttimestamp="1651619386199" timestamp="3064559" />
  <Command __id="2236" _type="PauseCommand" date="Tue May 03 20:00:51 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3065667">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1108]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2235" _type="ShellCommand" date="Tue May 03 20:00:51 EDT 2022" starttimestamp="1651619386199" timestamp="3065667" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2237" _type="ShellCommand" date="Tue May 03 20:00:52 EDT 2022" starttimestamp="1651619386199" timestamp="3066251" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2238" _type="ShellCommand" date="Tue May 03 20:00:53 EDT 2022" starttimestamp="1651619386199" timestamp="3066945" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2240" _type="PauseCommand" date="Tue May 03 20:00:54 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3068436">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1491]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2239" _type="ShellCommand" date="Tue May 03 20:00:54 EDT 2022" starttimestamp="1651619386199" timestamp="3068436" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2242" _type="MoveCaretCommand" caretOffset="4998" date="Tue May 03 20:00:55 EDT 2022" docOffset="6672" starttimestamp="1651619386199" timestamp="3069467" />
  <Command __id="2243" _type="ShellCommand" date="Tue May 03 20:00:56 EDT 2022" starttimestamp="1651619386199" timestamp="3070235" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2245" _type="PauseCommand" date="Tue May 03 20:00:58 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3072407">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2172]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2244" _type="ShellCommand" date="Tue May 03 20:00:58 EDT 2022" starttimestamp="1651619386199" timestamp="3072407" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2246" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:00:58 EDT 2022" starttimestamp="1651619386199" timestamp="3072434" />
  <Command __id="2248" _type="PauseCommand" date="Tue May 03 20:01:03 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3077691">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[5257]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2247" _type="ShellCommand" date="Tue May 03 20:01:03 EDT 2022" starttimestamp="1651619386199" timestamp="3077691" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2250" _type="PauseCommand" date="Tue May 03 20:01:16 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3090352">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[12661]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2251" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 20:01:16 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3090575" />
  <Command __id="2252" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 20:01:16 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3090575" />
  <Command __id="2253" _type="ShellCommand" date="Tue May 03 20:01:16 EDT 2022" starttimestamp="1651619386199" timestamp="3090759" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2254" _type="EclipseCommand" commandID="" date="Tue May 03 20:01:16 EDT 2022" starttimestamp="1651619386199" timestamp="3090783" />
  <Command __id="2255" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:01:16 EDT 2022" starttimestamp="1651619386199" timestamp="3090784" />
  <Command __id="2256" _type="ConsoleOutput" date="Tue May 03 20:01:16 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3090788" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateNoBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0

Number of traces > 800  turning tracing off
Test execution time (ms):112579
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"GIPCRMINIOClientMetaStateNoBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0¶¶Number of traces > 800  turning tracing off¶"), Diff(EQUAL,"Test execution time (ms):1125"), Diff(DELETE,"83"), Diff(INSERT,"79"), Diff(EQUAL,"¶Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="2257" _type="EclipseCommand" commandID="" date="Tue May 03 20:01:17 EDT 2022" starttimestamp="1651619386199" timestamp="3090843" />
  <Command __id="2259" _type="PauseCommand" date="Tue May 03 20:01:19 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3093394">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2551]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2260" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:01:19 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3093677" />
  <Command __id="2261" _type="ShellCommand" date="Tue May 03 20:01:20 EDT 2022" starttimestamp="1651619386199" timestamp="3093831" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2263" _type="PauseCommand" date="Tue May 03 20:01:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3095174">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1343]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2262" _type="ShellCommand" date="Tue May 03 20:01:21 EDT 2022" starttimestamp="1651619386199" timestamp="3095174" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2264" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:01:21 EDT 2022" starttimestamp="1651619386199" timestamp="3095192" />
  <Command __id="2265" _type="ConsoleOutput" date="Tue May 03 20:01:21 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3095202" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"GIPCRMINIOClientMetaStateNoBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0¶¶Number of traces > 800  turning tracing off¶Test execution time (ms):112579¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="2269" _type="PauseCommand" date="Tue May 03 20:01:37 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3110979">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[14056]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[AssistCommand]]></next>
  </Command>
  <Command __id="2268" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 20:01:37 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3110979" />
  <Command __id="2270" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 20:01:37 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3110979" />
  <Command __id="2271" _type="ShellCommand" date="Tue May 03 20:01:37 EDT 2022" starttimestamp="1651619386199" timestamp="3111126" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2272" _type="EclipseCommand" commandID="" date="Tue May 03 20:01:37 EDT 2022" starttimestamp="1651619386199" timestamp="3111152" />
  <Command __id="2273" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:01:37 EDT 2022" starttimestamp="1651619386199" timestamp="3111152" />
  <Command __id="2274" _type="EclipseCommand" commandID="" date="Tue May 03 20:01:37 EDT 2022" starttimestamp="1651619386199" timestamp="3111209" />
  <DocumentChange __id="1936" _type="Insert" date="Tue May 03 19:55:12 EDT 2022" docASTNodeCount="511" docActiveCodeLength="3516" docExpressionCount="332" docLength="3516" length="11" offset="774" repeat="11" starttimestamp="1651619386199" timestamp="2726306" timestamp2="2729926">
    <text><![CDATA[eaderThread]]></text>
  </DocumentChange>
  <DocumentChange __id="1959" _type="Delete" date="Tue May 03 19:55:19 EDT 2022" docASTNodeCount="511" docActiveCodeLength="3505" docExpressionCount="332" docLength="3505" endLine="20" length="11" offset="774" startLine="20" starttimestamp="1651619386199" timestamp="2733304">
    <text><![CDATA[eaderThread]]></text>
  </DocumentChange>
  <DocumentChange __id="1962" _type="Replace" date="Tue May 03 19:55:19 EDT 2022" docASTNodeCount="511" docActiveCodeLength="3514" docExpressionCount="332" docLength="3514" endLine="20" insertionLength="10" int_docASTNodeCount="507" int_docActiveCodeLength="3504" int_docExpressionCount="329" int_docLength="3504" length="1" offset="773" startLine="20" starttimestamp="1651619386199" timestamp="2733773">
    <deletedText><![CDATA[r]]></deletedText>
    <insertedText><![CDATA[thisReader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1964" _type="Insert" date="Tue May 03 19:55:20 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" length="395" offset="490" starttimestamp="1651619386199" timestamp="2734182">
    <text><![CDATA[import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;]]></text>
  </DocumentChange>
  <DocumentChange __id="1966" _type="Replace" date="Tue May 03 19:55:21 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="24" insertionLength="10" int_docASTNodeCount="567" int_docActiveCodeLength="3899" int_docExpressionCount="384" int_docLength="3899" length="10" offset="1168" startLine="24" starttimestamp="1651619386199" timestamp="2735257">
    <deletedText><![CDATA[thisReader]]></deletedText>
    <insertedText><![CDATA[readThread]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1968" _type="Replace" date="Tue May 03 19:55:21 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="37" insertionLength="10" int_docASTNodeCount="565" int_docActiveCodeLength="3899" int_docExpressionCount="384" int_docLength="3899" length="10" offset="1834" startLine="37" starttimestamp="1651619386199" timestamp="2735271">
    <deletedText><![CDATA[thisReader]]></deletedText>
    <insertedText><![CDATA[readThread]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1980" _type="Replace" date="Tue May 03 19:55:38 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="37" insertionLength="10" int_docASTNodeCount="565" int_docActiveCodeLength="3899" int_docExpressionCount="384" int_docLength="3899" length="10" offset="1834" startLine="37" starttimestamp="1651619386199" timestamp="2752576">
    <deletedText><![CDATA[readThread]]></deletedText>
    <insertedText><![CDATA[thisReader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1982" _type="Replace" date="Tue May 03 19:55:38 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" endLine="24" insertionLength="10" int_docASTNodeCount="567" int_docActiveCodeLength="3899" int_docExpressionCount="384" int_docLength="3899" length="10" offset="1168" startLine="24" starttimestamp="1651619386199" timestamp="2752592">
    <deletedText><![CDATA[readThread]]></deletedText>
    <insertedText><![CDATA[thisReader]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1990" _type="Replace" date="Tue May 03 19:55:43 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3900" docExpressionCount="387" docLength="3900" endLine="24" insertionLength="1" int_docASTNodeCount="567" int_docActiveCodeLength="3899" int_docExpressionCount="384" int_docLength="3899" length="10" offset="1168" startLine="24" starttimestamp="1651619386199" timestamp="2757440">
    <deletedText><![CDATA[thisReader]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1992" _type="Insert" date="Tue May 03 19:55:43 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3903" docExpressionCount="387" docLength="3903" length="3" offset="1169" repeat="3" starttimestamp="1651619386199" timestamp="2757549" timestamp2="2757930">
    <text><![CDATA[ead]]></text>
  </DocumentChange>
  <DocumentChange __id="1998" _type="Delete" date="Tue May 03 19:55:45 EDT 2022" docASTNodeCount="567" docActiveCodeLength="3899" docExpressionCount="384" docLength="3899" endLine="24" length="4" offset="1168" repeat="4" startLine="24" starttimestamp="1651619386199" timestamp="2759053" timestamp2="2759614">
    <text><![CDATA[read]]></text>
  </DocumentChange>
  <DocumentChange __id="2007" _type="Insert" date="Tue May 03 19:55:46 EDT 2022" docASTNodeCount="571" docActiveCodeLength="3909" docExpressionCount="387" docLength="3909" length="10" offset="1168" starttimestamp="1651619386199" timestamp="2759936">
    <text><![CDATA[readThread]]></text>
  </DocumentChange>
  <DocumentChange __id="2018" _type="Delete" date="Tue May 03 19:55:53 EDT 2022" docASTNodeCount="511" docActiveCodeLength="3514" docExpressionCount="332" docLength="3514" endLine="19" length="395" offset="490" startLine="15" starttimestamp="1651619386199" timestamp="2767212">
    <text><![CDATA[import inputport.nio.manager.factories.classes.AConnectCommandFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AReadingWritingConnectCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.factories.selectors.ConnectCommandFactorySelector;]]></text>
  </DocumentChange>
  <DocumentChange __id="2022" _type="Delete" date="Tue May 03 19:55:57 EDT 2022" docASTNodeCount="501" docActiveCodeLength="3468" docExpressionCount="323" docLength="3468" endLine="23" length="46" offset="901" startLine="23" starttimestamp="1651619386199" timestamp="2770971">
    <text><![CDATA[import util.trace.port.nio.SocketChannelBound;]]></text>
  </DocumentChange>
  <DocumentChange __id="2026" _type="Delete" date="Tue May 03 19:55:59 EDT 2022" docASTNodeCount="479" docActiveCodeLength="3335" docExpressionCount="304" docLength="3335" endLine="22" length="133" offset="766" startLine="20" starttimestamp="1651619386199" timestamp="2773227">
    <text><![CDATA[import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;]]></text>
  </DocumentChange>
  <DocumentChange __id="2029" _type="Insert" date="Tue May 03 19:56:00 EDT 2022" docASTNodeCount="501" docActiveCodeLength="3472" docExpressionCount="323" docLength="3472" length="137" offset="490" repeat="3" starttimestamp="1651619386199" timestamp="2774561" timestamp2="2774917">
    <text><![CDATA[
import readThread.ReadThreadInterface;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
]]></text>
  </DocumentChange>
  <DocumentChange __id="2048" _type="Delete" date="Tue May 03 19:56:14 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3436" docExpressionCount="318" docLength="3436" endLine="5" length="36" offset="82" startLine="4" starttimestamp="1651619386199" timestamp="2787807">
    <text><![CDATA[import java.net.InetSocketAddress;
]]></text>
  </DocumentChange>
  <Command __id="2171" _type="DiffBasedFileOpenCommand" date="Tue May 03 19:59:42 EDT 2022" docASTNodeCount="231" docActiveCodeLength="1793" docExpressionCount="141" docLength="1793" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="2995933">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteInterfaceGIPC.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientInterfaceGipc;
import client.ClientInterfaceRmi;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerRemoteInterfaceGIPC extends Remote{
	public void registerClient(ClientInterfaceRmi aClient) throws RemoteException;
	
	void registerClientGIPC(ClientInterfaceGipc aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientInterfaceGipc originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientInterfaceRmi client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientInterfaceGipc originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientInterfaceGipc aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientInterfaceGipc client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="2197" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:00:13 EDT 2022" docASTNodeCount="93" docActiveCodeLength="677" docExpressionCount="67" docLength="677" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3026984">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteInterfaceNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;


import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

public interface ServerRemoteInterfaceNIO extends SocketChannelAcceptListener, SocketChannelReadListener, SocketChannelWriteListener {

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	List<SocketChannel> getSocketList();

	SocketChannel getSocketChannel();

	void setFactories();

}]]></snapshot>
  </Command>
  <Command __id="2211" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:00:31 EDT 2022" docASTNodeCount="231" docActiveCodeLength="1790" docExpressionCount="141" docLength="1790" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3045338">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerInterfaceGipcRmi.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientInterfaceGipc;
import client.ClientInterfaceRmi;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC, DistributedTags.RMI})
public interface ServerInterfaceGipcRmi extends Remote{
	public void registerClient(ClientInterfaceRmi aClient) throws RemoteException;
	
	void registerClientGIPC(ClientInterfaceGipc aClient) throws RemoteException;
	
	public void broadcast(String aNewCommand, ClientInterfaceGipc originalClient, int aProposalNumber) throws RemoteException;
	
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientInterfaceRmi client) throws RemoteException;

	void createGIPCRegistry() throws RemoteException;

	void broadcastIPCMechanism(IPCMechanism mechanism, ClientInterfaceGipc originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;

	void registerClientRMI(ClientInterfaceGipc aClient) throws RemoteException;

	void fakeMethodThree(String stringOne, ClientInterfaceGipc client) throws RemoteException;

	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;

	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="2214" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:00:35 EDT 2022" docASTNodeCount="257" docActiveCodeLength="1943" docExpressionCount="157" docLength="1961" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3049213">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteInterfaceRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.rmi.Remote;
import java.rmi.RemoteException;

import client.ClientInterfaceGipc;
import client.ClientInterfaceRmi;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.tags.DistributedTags;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.RMI})
public interface ServerRemoteInterfaceRMI  extends Remote{
	public void registerClient(ClientInterfaceRmi aClient) throws RemoteException;
	public void broadcast(String aNewCommand, ClientInterfaceRmi originalClient, int aProposalNumber) throws RemoteException;
	void processArgs(String[] args) throws RemoteException;
	public void start(String[] args) throws RemoteException;
	
	//A5 fake methods:
	void fakeMethod(String stringOne, String stringTwo) throws RemoteException;
	void fakeMethodTwo(String stringOne, ClientInterfaceRmi client) throws RemoteException;
	void fakeMethodThree(String stringOne, ClientInterfaceGipc client) throws RemoteException;
	void fakeMethodFour(String stringOne, boolean trueFalse) throws RemoteException;
	void fakeMethodFive(String stringOne, IPCMechanism mechanism) throws RemoteException;
	void createGIPCRegistry() throws RemoteException;
	void registerClientRMI(ClientInterfaceGipc aClient) throws RemoteException;
	void registerClientGIPC(ClientInterfaceGipc aClient) throws RemoteException;
	void broadcast(String aNewCommand, ClientInterfaceGipc originalClient, int aProposalNumber) throws RemoteException;
	void broadcastIPCMechanism(IPCMechanism mechanism, ClientInterfaceGipc originalClient, int aProposalNumber,
			boolean broadcast) throws RemoteException;
	
	

}
]]></snapshot>
  </Command>
  <Command __id="2241" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:00:55 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9430" docExpressionCount="920" docLength="10635" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3069299">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteObjectGIPC.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package server.remote;¶¶import java.nio.ByteBuffer;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.rmi.RemoteException;¶import java.rmi.registry.LocateRegistry;¶import java.rmi.registry.Registry;¶import java.rmi.server.UnicastRemoteObject;¶import java.util.ArrayList;¶import java.util.List;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import assignments.util.mainArgs.ServerArgsProcessor;¶import client.ClientOutCoupler;¶import client.Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL,";¶import client.Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceR"), Diff(DELETE,"MI"), Diff(INSERT,"mi"), Diff(EQUAL,";¶import client.ClientR"), Diff(DELETE,"emoteObject"), Diff(INSERT,"miGipc"), Diff(EQUAL,";¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.misc.ThreadSupport;¶import util.tags.DistributedTags;¶¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.PortTraceUtility;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.ProposedStateSet;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.rpc.rmi.RMIRegistryLocated;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMIObjectRegistered;¶¶@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })¶public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements Server"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipcRmi"), Diff(EQUAL," {¶¶	List<Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL,"> clientListGIPC = new ArrayList<Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL,">();¶	List<Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL,"> clientListRMI = new ArrayList<Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL,">();¶¶	private static String RMI_SERVER_HOST_NAME;¶	private static int RMI_SERVER_PORT;¶	public static String SERVER_NAME;¶	private static int NIO_SERVER_PORT;¶¶	// A5¶	private static int GIPC_SERVER_PORT;¶	protected static GIPCRegistry gipcRegistry;¶¶	// int aProposalNumber = 0;¶¶	@Override¶	public void processArgs(String[] args) {¶		¶¶		// Make sure you set this property when processing args¶		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));¶		¶¶		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);¶		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);¶		SERVER_NAME = "SERVER";¶		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);¶		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);¶		// ClientArgsProcessor.getServerHost(args);¶		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);¶		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);¶		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);¶		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);¶		¶¶	}¶¶	@Override¶	public void registerClientGIPC(Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," aClient) {¶		¶		clientListGIPC.add(aClient);¶		System.out.println("Client registered GIPC");¶		System.out.println(aClient);¶		System.out.println(clientListGIPC);¶	}¶	¶	@Override¶	public void registerClientRMI(Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," aClient) {¶		¶		clientListRMI.add(aClient);¶		System.out.println("Client registered RMI");¶		System.out.println(aClient);¶		System.out.println(clientListRMI);¶	}¶¶	@Override¶	public void broadcast(String aNewCommand, Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," originalClient, int aProposalNumber){¶		List<Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL,"> clientList = clientListGIPC;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("Command recieved for broadcast: " + aNewCommand);¶		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶		¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		System.out.println(clientList);¶		System.out.println(clientList.size());¶		for (Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," client : clientList) {¶			System.out.println(client);¶			if (client.equals(originalClient)) {¶				if (aNewCommand.charAt(0) == 'q') {¶					// Need to quit¶					try {¶						client.quit(0);¶					} catch (RemoteException e) {¶						// TODO Auto-generated catch block¶						e.printStackTrace();¶					}¶				}¶				continue;¶			}¶			¶			if (aNewCommand.charAt(0) == 'q') {¶¶				try {¶					client.quit(0);¶				} catch (RemoteException e1) {¶					// TODO Auto-generated catch block¶					e1.printStackTrace();¶				}¶				continue;¶			}¶¶			try {¶				client.inCoupler(aNewCommand, aProposalNumber);¶			} catch (RemoteException e) {¶				// TODO Auto-generated catch block¶				e.printStackTrace();¶			}¶			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);¶¶			//if (aNewCommand.charAt(0) == 'q') {¶				// Need to quit¶			//	this.quit(0);¶			//}¶		}¶		if (aNewCommand.charAt(0) == 'q') {¶			// Need to quit¶			this.quit(0);¶		}¶¶	}¶¶	@Override¶	public void broadcastIPCMechanism(IPCMechanism mechanism, Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," originalClient, int aProposalNumber, boolean broadcast) {¶		List<Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL,"> clientList;¶		¶		// TODO Check is this is where delay is needed¶		long aDelay = getDelay();¶		if (aDelay > 0) {¶			ThreadSupport.sleep(aDelay);¶		}¶¶		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);¶		setIPCMechanism(mechanism);¶		setBroadcastMetaState(broadcast);¶		¶		¶¶		if(clientListGIPC.isEmpty()) {¶			clientList = clientListRMI;¶			System.out.println("USING RMI IN SERVER");¶		}¶		else {¶			clientList = clientListGIPC;¶			System.out.println("USING GIPC IN SERVER");¶		}¶		¶		if (broadcast) {¶			System.out.println("Broadcasting IPC mechanism: "+mechanism);¶			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			for (Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," client : clientList) {¶				if (client.equals(originalClient)) {¶					continue;¶				}¶¶				try {¶					client."), Diff(DELETE,"c"), Diff(INSERT,"makeC"), Diff(EQUAL,"hangeI"), Diff(DELETE,"PCMechanis"), Diff(INSERT,"pc"), Diff(EQUAL,"m(mechanism, aProposalNumber);¶					System.out.println("SEND NEW MECHANISM TO A CLIENT FROM SERVER");¶				} catch (RemoteException e) {¶					// TODO Auto-generated catch block¶					e.printStackTrace();¶				}¶				//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);¶			}¶		}¶¶	}¶¶	@Override¶	protected void setTracing() {¶		//A6¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶¶		¶		// A5¶		FactoryTraceUtility.setTracing();¶		BeanTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		GIPCRPCTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶¶		// A4¶		PortTraceUtility.setTracing();¶		RMITraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶		FactoryTraceUtility.setTracing();¶		ConsensusTraceUtility.setTracing();¶		ThreadDelayed.enablePrint();¶		trace(true);¶	}¶¶	@Override¶	protected void init(String[] args) {¶¶		setTracing();¶¶		this.processArgs(args);¶		createGIPCRegistry();¶¶		try {¶			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);¶			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);¶			// Create remote server object¶¶			// create proxy of remote server object¶			// UnicastRemoteObject.exportObject(server, 0);¶			UnicastRemoteObject.exportObject(this, 0);¶			// send server to RMI server¶			// rmiRegistry.rebind(SERVER_NAME, server);¶			rmiRegistry.rebind(SERVER_NAME, this);¶¶			RMIObjectRegistered.newCase(this, SERVER_NAME, (Server"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceR"), Diff(DELETE,"MI"), Diff(INSERT,"mi"), Diff(EQUAL,") this, rmiRegistry);¶¶			System.out.println("Server proxy sent to RMI Registry");¶¶		} catch (Exception e) {¶			e.printStackTrace();¶		}¶¶	}¶¶	@Override¶	public void start(String[] args) {¶		init(args);¶		// register a callback to process actions denoted by the user commands¶		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶		// use the calling back library¶		SimulationParametersControllerFactory.getSingleton().processCommands();		¶		//init(args);¶¶	}¶¶	@Override¶	public void fakeMethod(String stringOne, String stringTwo) {¶		// TODO Auto-generated method stub¶¶	}¶¶	@Override¶	public void fakeMethodTwo(String stringOne, Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceR"), Diff(DELETE,"MI"), Diff(INSERT,"mi"), Diff(EQUAL," client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodThree(String stringOne, Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," client) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFour(String stringOne, boolean trueFalse) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {¶		// TODO Auto-generated method stub¶¶	}¶	¶	@Override¶	public void createGIPCRegistry() {¶		System.out.println("GIPC_SERVER_PORT: ");¶		System.out.println(GIPC_SERVER_PORT);¶		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);¶		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);¶¶		final Server"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceR"), Diff(DELETE,"MI"), Diff(INSERT,"mi"), Diff(EQUAL," server = new ServerRemoteObjectGIPC();¶		gipcRegistry.rebind(SERVER_NAME, server);¶		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);¶		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));¶		System.out.println("ADDED CONNECTION LISTENER");¶	}¶¶	@Override¶	public void ipcMechanism(IPCMechanism mechanism) {¶		setIPCMechanism(mechanism);¶		¶		if(this.broadcastMetaState) {¶			int aProposalNumber = -1;¶			Client"), Diff(DELETE,"Remote"), Diff(EQUAL,"InterfaceG"), Diff(DELETE,"IPC"), Diff(INSERT,"ipc"), Diff(EQUAL," fake = new ClientR"), Diff(DELETE,"emoteObject"), Diff(INSERT,"miGipc"), Diff(EQUAL,"();¶			broadcastIPCMechanism(mechanism, fake, aProposalNumber , this.broadcastMetaState);¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientOutCoupler;
import client.ClientInterfaceGipc;
import client.ClientInterfaceRmi;
import client.ClientRmiGipc;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;

import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.ProposedStateSet;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({ DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC })
public class ServerRemoteObjectGIPC extends ServerRemoteObjectRMI implements ServerInterfaceGipcRmi {

	List<ClientInterfaceGipc> clientListGIPC = new ArrayList<ClientInterfaceGipc>();
	List<ClientInterfaceGipc> clientListRMI = new ArrayList<ClientInterfaceGipc>();

	private static String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	public static String SERVER_NAME;
	private static int NIO_SERVER_PORT;

	// A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;

	// int aProposalNumber = 0;

	@Override
	public void processArgs(String[] args) {
		

		// Make sure you set this property when processing args
		//System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));
		

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
		NIO_SERVER_PORT = ServerArgsProcessor.getNIOServerPort(args);
		// ClientArgsProcessor.getServerHost(args);
		System.out.println("RMI_SERVER_HOST_NAME: "+RMI_SERVER_HOST_NAME);
		System.out.println("RMI_SERVER_PORT: "+RMI_SERVER_PORT);
		System.out.println("GIPC_SERVER_PORT: "+GIPC_SERVER_PORT);
		System.out.println("NIO_SERVER_PORT: "+NIO_SERVER_PORT);
		

	}

	@Override
	public void registerClientGIPC(ClientInterfaceGipc aClient) {
		
		clientListGIPC.add(aClient);
		System.out.println("Client registered GIPC");
		System.out.println(aClient);
		System.out.println(clientListGIPC);
	}
	
	@Override
	public void registerClientRMI(ClientInterfaceGipc aClient) {
		
		clientListRMI.add(aClient);
		System.out.println("Client registered RMI");
		System.out.println(aClient);
		System.out.println(clientListRMI);
	}

	@Override
	public void broadcast(String aNewCommand, ClientInterfaceGipc originalClient, int aProposalNumber){
		List<ClientInterfaceGipc> clientList = clientListGIPC;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("Command recieved for broadcast: " + aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		System.out.println(clientList);
		System.out.println(clientList.size());
		for (ClientInterfaceGipc client : clientList) {
			System.out.println(client);
			if (client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					// Need to quit
					try {
						client.quit(0);
					} catch (RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
				continue;
			}
			
			if (aNewCommand.charAt(0) == 'q') {

				try {
					client.quit(0);
				} catch (RemoteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				continue;
			}

			try {
				client.inCoupler(aNewCommand, aProposalNumber);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);

			//if (aNewCommand.charAt(0) == 'q') {
				// Need to quit
			//	this.quit(0);
			//}
		}
		if (aNewCommand.charAt(0) == 'q') {
			// Need to quit
			this.quit(0);
		}

	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientInterfaceGipc originalClient, int aProposalNumber, boolean broadcast) {
		List<ClientInterfaceGipc> clientList;
		
		// TODO Check is this is where delay is needed
		long aDelay = getDelay();
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}

		System.out.println("IPC Mechanism recieved for broadcast: " + mechanism);
		setIPCMechanism(mechanism);
		setBroadcastMetaState(broadcast);
		
		

		if(clientListGIPC.isEmpty()) {
			clientList = clientListRMI;
			System.out.println("USING RMI IN SERVER");
		}
		else {
			clientList = clientListGIPC;
			System.out.println("USING GIPC IN SERVER");
		}
		
		if (broadcast) {
			System.out.println("Broadcasting IPC mechanism: "+mechanism);
			RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			for (ClientInterfaceGipc client : clientList) {
				if (client.equals(originalClient)) {
					continue;
				}

				try {
					client.makeChangeIpcm(mechanism, aProposalNumber);
					System.out.println("SEND NEW MECHANISM TO A CLIENT FROM SERVER");
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, mechanism);
			}
		}

	}

	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {

		setTracing();

		this.processArgs(args);
		createGIPCRegistry();

		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			// Create remote server object

			// create proxy of remote server object
			// UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			// send server to RMI server
			// rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);

			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerInterfaceRmi) this, rmiRegistry);

			System.out.println("Server proxy sent to RMI Registry");

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	@Override
	public void start(String[] args) {
		init(args);
		// register a callback to process actions denoted by the user commands
		SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
		// use the calling back library
		SimulationParametersControllerFactory.getSingleton().processCommands();		
		//init(args);

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientInterfaceRmi client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientInterfaceGipc client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void createGIPCRegistry() {
		System.out.println("GIPC_SERVER_PORT: ");
		System.out.println(GIPC_SERVER_PORT);
		gipcRegistry = GIPCLocateRegistry.createRegistry(GIPC_SERVER_PORT);
		GIPCRegistryCreated.newCase(this, GIPC_SERVER_PORT);

		final ServerInterfaceRmi server = new ServerRemoteObjectGIPC();
		gipcRegistry.rebind(SERVER_NAME, server);
		GIPCObjectRegistered.newCase(this, SERVER_NAME, this, gipcRegistry);
		gipcRegistry.getInputPort().addConnectionListener(new ATracingConnectionListener(gipcRegistry.getInputPort()));
		System.out.println("ADDED CONNECTION LISTENER");
	}

	@Override
	public void ipcMechanism(IPCMechanism mechanism) {
		setIPCMechanism(mechanism);
		
		if(this.broadcastMetaState) {
			int aProposalNumber = -1;
			ClientInterfaceGipc fake = new ClientRmiGipc();
			broadcastIPCMechanism(mechanism, fake, aProposalNumber , this.broadcastMetaState);
		}
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2249" _type="Replace" date="Tue May 03 20:01:16 EDT 2022" docASTNodeCount="1310" docActiveCodeLength="9421" docExpressionCount="920" docLength="10626" endLine="326" insertionLength="13" int_docASTNodeCount="1274" int_docActiveCodeLength="9408" int_docExpressionCount="890" int_docLength="10613" length="22" offset="10002" startLine="326" starttimestamp="1651619386199" timestamp="3090352">
    <deletedText><![CDATA[ServerRemoteObjectGIPC]]></deletedText>
    <insertedText><![CDATA[ServerRmiGipc]]></insertedText>
  </DocumentChange>
  <Command __id="2258" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:01:19 EDT 2022" docASTNodeCount="714" docActiveCodeLength="4961" docExpressionCount="513" docLength="5533" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3093394">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteObjectNIO.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import assignments.util.mainArgs.ServerArgsProcessor;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import utilRead.ReadThreadInterface;
import utilRead.ServerReadThread;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import nio.ServerReadExample;

public class ServerRemoteObjectNIO extends ServerRmiGipc implements ServerInterfaceNio{
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	int aServerPort;
	
	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	@Override
	protected void init(String[] args) {
		setTracing();
		setFactories();
		
		aServerPort = ServerArgsProcessor.getNIOServerPort(args);
			
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);
			
			//SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadThread(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		String name = "Read Thread";
		readThread.setName(name);
		//Start thread and do some action
		readThread.start();
		
		super.init(args);
	}
	
	@Override
	public void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	@Override
	public void socketChannelAccepted(ServerSocketChannel arg0, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
		
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		
		int aProposalNumber = Integer.parseInt( aMessageString.substring(aMessageString.length()-1) );
		aMessageString =  aMessageString.substring(0, aMessageString.length()-1);
		System.out.println("COMMAND IN SERVER: "+ aMessageString);
		
		System.out.println("PROPOSAL NUMBER: "+aProposalNumber);
		//RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		//ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aMessageString);
		reader.notifyThread();
		
	}

	@Override
	public void written(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		// TODO Auto-generated method stub
		return boundedBuffer;
	}

	@Override
	public List<SocketChannel> getSocketList() {
		// TODO Auto-generated method stub
		return socketList;
	}

	@Override
	public SocketChannel getSocketChannel() {
		// TODO Auto-generated method stub
		return currentSocket;
	}
	
	@Override
	protected void setTracing() {
		//A6
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();

		
		// A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();

		// A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

}
]]></snapshot>
  </Command>
  <Command __id="2276" _type="PauseCommand" date="Tue May 03 20:01:40 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3114608">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3399]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2277" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:01:41 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3114913" />
  <Command __id="2278" _type="ShellCommand" date="Tue May 03 20:01:41 EDT 2022" starttimestamp="1651619386199" timestamp="3115761" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2280" _type="PauseCommand" date="Tue May 03 20:01:43 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3117265">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1504]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2279" _type="ShellCommand" date="Tue May 03 20:01:43 EDT 2022" starttimestamp="1651619386199" timestamp="3117265" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2281" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:01:43 EDT 2022" starttimestamp="1651619386199" timestamp="3117280" />
  <Command __id="2283" _type="PauseCommand" date="Tue May 03 20:01:45 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3119345">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2065]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2282" _type="ShellCommand" date="Tue May 03 20:01:45 EDT 2022" starttimestamp="1651619386199" timestamp="3119345" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2285" _type="PauseCommand" date="Tue May 03 20:01:53 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3127473">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[8128]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2286" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Tue May 03 20:01:53 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3127724" />
  <Command __id="2287" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Tue May 03 20:01:53 EDT 2022" start_end="END" starttimestamp="1651619386199" timestamp="3127724" />
  <Command __id="2288" _type="ShellCommand" date="Tue May 03 20:01:54 EDT 2022" starttimestamp="1651619386199" timestamp="3127867" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2289" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.rename.element" date="Tue May 03 20:01:54 EDT 2022" starttimestamp="1651619386199" timestamp="3127884" />
  <Command __id="2290" _type="EclipseCommand" commandID="" date="Tue May 03 20:01:54 EDT 2022" starttimestamp="1651619386199" timestamp="3127884" />
  <Command __id="2291" _type="EclipseCommand" commandID="" date="Tue May 03 20:01:54 EDT 2022" starttimestamp="1651619386199" timestamp="3127969" />
  <Command __id="2293" _type="PauseCommand" date="Tue May 03 20:01:57 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3131225">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3256]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2292" _type="ShellCommand" date="Tue May 03 20:01:57 EDT 2022" starttimestamp="1651619386199" timestamp="3131225" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2294" _type="ShellCommand" date="Tue May 03 20:01:58 EDT 2022" starttimestamp="1651619386199" timestamp="3132059" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2296" _type="PauseCommand" date="Tue May 03 20:02:02 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3136013">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3954]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2295" _type="SelectTextCommand" caretOffset="562" date="Tue May 03 20:02:02 EDT 2022" end="589" start="562" starttimestamp="1651619386199" timestamp="3136013" />
  <Command __id="2297" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:02 EDT 2022" starttimestamp="1651619386199" timestamp="3136502" />
  <Command __id="2299" _type="PauseCommand" date="Tue May 03 20:02:06 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3139872">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3370]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2300" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:02:06 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3140034" />
  <Command __id="2302" _type="PauseCommand" date="Tue May 03 20:02:07 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3141698">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1664]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2301" _type="MoveCaretCommand" caretOffset="92" date="Tue May 03 20:02:07 EDT 2022" docOffset="141" starttimestamp="1651619386199" timestamp="3141698" />
  <Command __id="2303" _type="SelectTextCommand" caretOffset="103" date="Tue May 03 20:02:08 EDT 2022" end="103" start="91" starttimestamp="1651619386199" timestamp="3141851" />
  <Command __id="2304" _type="SelectTextCommand" caretOffset="108" date="Tue May 03 20:02:08 EDT 2022" end="108" start="85" starttimestamp="1651619386199" timestamp="3141947" />
  <Command __id="2306" _type="PauseCommand" date="Tue May 03 20:02:09 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3143107">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1160]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2307" _type="CutCommand" date="Tue May 03 20:02:09 EDT 2022" starttimestamp="1651619386199" timestamp="3143116" />
  <Command __id="2308" _type="MoveCaretCommand" caretOffset="138" date="Tue May 03 20:02:09 EDT 2022" docOffset="187" starttimestamp="1651619386199" timestamp="3143686" />
  <Command __id="2310" _type="InsertStringCommand" date="Tue May 03 20:02:10 EDT 2022" starttimestamp="1651619386199" timestamp="3144339" timestamp2="3144339">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2312" _type="InsertStringCommand" date="Tue May 03 20:02:10 EDT 2022" starttimestamp="1651619386199" timestamp="3144449" timestamp2="3144449">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2314" _type="PasteCommand" date="Tue May 03 20:02:10 EDT 2022" starttimestamp="1651619386199" timestamp="3144723" />
  <Command __id="2315" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:02:11 EDT 2022" starttimestamp="1651619386199" timestamp="3145144" />
  <Command __id="2316" _type="EclipseCommand" commandID="" date="Tue May 03 20:02:11 EDT 2022" starttimestamp="1651619386199" timestamp="3145281" />
  <Command __id="2317" _type="EclipseCommand" commandID="" date="Tue May 03 20:02:11 EDT 2022" starttimestamp="1651619386199" timestamp="3145290" />
  <Command __id="2319" _type="PauseCommand" date="Tue May 03 20:02:14 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3148412">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3122]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2320" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:02:15 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3148804" />
  <Command __id="2322" _type="PauseCommand" date="Tue May 03 20:02:16 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3150483">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1679]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2321" _type="MoveCaretCommand" caretOffset="132" date="Tue May 03 20:02:16 EDT 2022" docOffset="377" starttimestamp="1651619386199" timestamp="3150483" />
  <Command __id="2323" _type="SelectTextCommand" caretOffset="143" date="Tue May 03 20:02:16 EDT 2022" end="143" start="120" starttimestamp="1651619386199" timestamp="3150609" />
  <Command __id="2324" _type="SelectTextCommand" caretOffset="153" date="Tue May 03 20:02:16 EDT 2022" end="153" start="111" starttimestamp="1651619386199" timestamp="3150729" />
  <Command __id="2326" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:17 EDT 2022" starttimestamp="1651619386199" timestamp="3151427" />
  <Command __id="2328" _type="PauseCommand" date="Tue May 03 20:02:18 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3152541">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1114]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2327" _type="MoveCaretCommand" caretOffset="408" date="Tue May 03 20:02:18 EDT 2022" docOffset="653" starttimestamp="1651619386199" timestamp="3152541" />
  <Command __id="2329" _type="SelectTextCommand" caretOffset="411" date="Tue May 03 20:02:18 EDT 2022" end="411" start="407" starttimestamp="1651619386199" timestamp="3152683" />
  <Command __id="2330" _type="SelectTextCommand" caretOffset="435" date="Tue May 03 20:02:19 EDT 2022" end="435" start="397" starttimestamp="1651619386199" timestamp="3152810" />
  <Command __id="2332" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:19 EDT 2022" starttimestamp="1651619386199" timestamp="3152962" />
  <Command __id="2334" _type="PauseCommand" date="Tue May 03 20:02:20 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3154248">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1286]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2333" _type="SelectTextCommand" caretOffset="304" date="Tue May 03 20:02:20 EDT 2022" end="403" start="304" starttimestamp="1651619386199" timestamp="3154248" />
  <Command __id="2336" _type="CutCommand" date="Tue May 03 20:02:20 EDT 2022" starttimestamp="1651619386199" timestamp="3154788" />
  <Command __id="2338" _type="PauseCommand" date="Tue May 03 20:02:22 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3156335">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1547]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2337" _type="MoveCaretCommand" caretOffset="1249" date="Tue May 03 20:02:22 EDT 2022" docOffset="1494" starttimestamp="1651619386199" timestamp="3156335" />
  <Command __id="2340" _type="PauseCommand" date="Tue May 03 20:02:25 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3158874">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2539]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2339" _type="MoveCaretCommand" caretOffset="304" date="Tue May 03 20:02:25 EDT 2022" docOffset="549" starttimestamp="1651619386199" timestamp="3158874" />
  <Command __id="2342" _type="PasteCommand" date="Tue May 03 20:02:25 EDT 2022" starttimestamp="1651619386199" timestamp="3159563" />
  <Command __id="2343" _type="MoveCaretCommand" caretOffset="458" date="Tue May 03 20:02:26 EDT 2022" docOffset="703" starttimestamp="1651619386199" timestamp="3160330" />
  <Command __id="2344" _type="SelectTextCommand" caretOffset="465" date="Tue May 03 20:02:26 EDT 2022" end="465" start="456" starttimestamp="1651619386199" timestamp="3160480" />
  <Command __id="2345" _type="SelectTextCommand" caretOffset="479" date="Tue May 03 20:02:26 EDT 2022" end="479" start="441" starttimestamp="1651619386199" timestamp="3160599" />
  <Command __id="2347" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:27 EDT 2022" starttimestamp="1651619386199" timestamp="3161251" />
  <Command __id="2349" _type="PauseCommand" date="Tue May 03 20:02:28 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3162704">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1453]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2348" _type="MoveCaretCommand" caretOffset="507" date="Tue May 03 20:02:28 EDT 2022" docOffset="752" starttimestamp="1651619386199" timestamp="3162704" />
  <Command __id="2350" _type="MoveCaretCommand" caretOffset="582" date="Tue May 03 20:02:29 EDT 2022" docOffset="827" starttimestamp="1651619386199" timestamp="3163226" />
  <Command __id="2351" _type="SelectTextCommand" caretOffset="582" date="Tue May 03 20:02:29 EDT 2022" end="582" start="577" starttimestamp="1651619386199" timestamp="3163377" />
  <Command __id="2352" _type="SelectTextCommand" caretOffset="590" date="Tue May 03 20:02:29 EDT 2022" end="590" start="549" starttimestamp="1651619386199" timestamp="3163489" />
  <Command __id="2354" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:29 EDT 2022" starttimestamp="1651619386199" timestamp="3163669" />
  <Command __id="2356" _type="PauseCommand" date="Tue May 03 20:02:31 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3165310">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1641]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2355" _type="SelectTextCommand" caretOffset="641" date="Tue May 03 20:02:31 EDT 2022" end="641" start="588" starttimestamp="1651619386199" timestamp="3165310" />
  <Command __id="2358" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:31 EDT 2022" starttimestamp="1651619386199" timestamp="3165380" />
  <Command __id="2360" _type="PauseCommand" date="Tue May 03 20:02:33 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3167090">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1710]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2359" _type="MoveCaretCommand" caretOffset="617" date="Tue May 03 20:02:33 EDT 2022" docOffset="862" starttimestamp="1651619386199" timestamp="3167090" />
  <Command __id="2361" _type="SelectTextCommand" caretOffset="617" date="Tue May 03 20:02:33 EDT 2022" end="617" start="611" starttimestamp="1651619386199" timestamp="3167229" />
  <Command __id="2362" _type="SelectTextCommand" caretOffset="671" date="Tue May 03 20:02:33 EDT 2022" end="671" start="608" starttimestamp="1651619386199" timestamp="3167349" />
  <Command __id="2364" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:33 EDT 2022" starttimestamp="1651619386199" timestamp="3167538" />
  <Command __id="2366" _type="PauseCommand" date="Tue May 03 20:02:36 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3169975">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2437]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2365" _type="MoveCaretCommand" caretOffset="962" date="Tue May 03 20:02:36 EDT 2022" docOffset="1207" starttimestamp="1651619386199" timestamp="3169975" />
  <Command __id="2367" _type="SelectTextCommand" caretOffset="967" date="Tue May 03 20:02:36 EDT 2022" end="967" start="961" starttimestamp="1651619386199" timestamp="3170250" />
  <Command __id="2368" _type="SelectTextCommand" caretOffset="1006" date="Tue May 03 20:02:36 EDT 2022" end="1006" start="938" starttimestamp="1651619386199" timestamp="3170408" />
  <Command __id="2370" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:36 EDT 2022" starttimestamp="1651619386199" timestamp="3170686" />
  <Command __id="2372" _type="PauseCommand" date="Tue May 03 20:02:43 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3177042">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6356]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2371" _type="ShellCommand" date="Tue May 03 20:02:43 EDT 2022" starttimestamp="1651619386199" timestamp="3177042" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2373" _type="ShellCommand" date="Tue May 03 20:02:43 EDT 2022" starttimestamp="1651619386199" timestamp="3177132" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2375" _type="PauseCommand" date="Tue May 03 20:02:45 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3179242">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2110]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2374" _type="ShellCommand" date="Tue May 03 20:02:45 EDT 2022" starttimestamp="1651619386199" timestamp="3179242" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2376" _type="ShellCommand" date="Tue May 03 20:02:45 EDT 2022" starttimestamp="1651619386199" timestamp="3179338" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2378" _type="PauseCommand" date="Tue May 03 20:02:46 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3180755">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1417]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2377" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:02:46 EDT 2022" starttimestamp="1651619386199" timestamp="3180755" />
  <Command __id="2379" _type="EclipseCommand" commandID="" date="Tue May 03 20:02:47 EDT 2022" starttimestamp="1651619386199" timestamp="3180894" />
  <Command __id="2380" _type="EclipseCommand" commandID="" date="Tue May 03 20:02:47 EDT 2022" starttimestamp="1651619386199" timestamp="3180908" />
  <Command __id="2381" _type="MoveCaretCommand" caretOffset="1001" date="Tue May 03 20:02:47 EDT 2022" docOffset="1246" starttimestamp="1651619386199" timestamp="3181561" />
  <Command __id="2382" _type="SelectTextCommand" caretOffset="1013" date="Tue May 03 20:02:47 EDT 2022" end="1013" start="1001" starttimestamp="1651619386199" timestamp="3181672" />
  <Command __id="2383" _type="SelectTextCommand" caretOffset="1019" date="Tue May 03 20:02:48 EDT 2022" end="1019" start="975" starttimestamp="1651619386199" timestamp="3181830" />
  <Command __id="2384" _type="MoveCaretCommand" caretOffset="1040" date="Tue May 03 20:02:48 EDT 2022" docOffset="1285" starttimestamp="1651619386199" timestamp="3182258" />
  <Command __id="2385" _type="SelectTextCommand" caretOffset="1040" date="Tue May 03 20:02:48 EDT 2022" end="1040" start="1034" starttimestamp="1651619386199" timestamp="3182396" />
  <Command __id="2386" _type="SelectTextCommand" caretOffset="1065" date="Tue May 03 20:02:48 EDT 2022" end="1065" start="1019" starttimestamp="1651619386199" timestamp="3182522" />
  <Command __id="2388" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:02:49 EDT 2022" starttimestamp="1651619386199" timestamp="3183197" />
  <Command __id="2390" _type="PauseCommand" date="Tue May 03 20:02:56 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3189812">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6615]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2389" _type="ShellCommand" date="Tue May 03 20:02:56 EDT 2022" starttimestamp="1651619386199" timestamp="3189812" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2391" _type="ShellCommand" date="Tue May 03 20:02:56 EDT 2022" starttimestamp="1651619386199" timestamp="3190225" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2393" _type="PauseCommand" date="Tue May 03 20:03:03 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3197320">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[7095]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2392" _type="ShellCommand" date="Tue May 03 20:03:03 EDT 2022" starttimestamp="1651619386199" timestamp="3197320" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2394" _type="ShellCommand" date="Tue May 03 20:03:04 EDT 2022" starttimestamp="1651619386199" timestamp="3197847" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2396" _type="PauseCommand" date="Tue May 03 20:03:06 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3200074">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2227]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2397" _type="MoveCaretCommand" caretOffset="298" date="Tue May 03 20:03:06 EDT 2022" docOffset="298" starttimestamp="1651619386199" timestamp="3200217" />
  <Command __id="2399" _type="PauseCommand" date="Tue May 03 20:03:09 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3203075">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2858]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2398" _type="ConsoleOutput" date="Tue May 03 20:03:09 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3203075" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOClientMetaStateBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0

Test execution time (ms):112570
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Number of traces > 800  turning tracing off"), Diff(INSERT,"GIPCRMINIOClientMetaStateBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0¶¶Test execution time (ms):112570"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2401" _type="PauseCommand" date="Tue May 03 20:03:11 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3204866">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1791]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2400" _type="ShellCommand" date="Tue May 03 20:03:11 EDT 2022" starttimestamp="1651619386199" timestamp="3204866" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2403" _type="PauseCommand" date="Tue May 03 20:03:15 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3208944">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4078]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2402" _type="ShellCommand" date="Tue May 03 20:03:15 EDT 2022" starttimestamp="1651619386199" timestamp="3208944" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2405" _type="PauseCommand" date="Tue May 03 20:03:18 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3212731">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[3787]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2404" _type="ShellCommand" date="Tue May 03 20:03:18 EDT 2022" starttimestamp="1651619386199" timestamp="3212731" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2407" _type="PauseCommand" date="Tue May 03 20:05:01 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="3315697">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[102966]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2406" _type="ConsoleOutput" date="Tue May 03 20:05:01 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3315697" type="ConsoleOutput">
    <outputString><![CDATA[GIPCRMINIOServerMetaStateNoBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0

Test execution time (ms):112569
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Client"), Diff(INSERT,"Server"), Diff(EQUAL,"MetaState"), Diff(INSERT,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0¶¶Test execution time (ms):1125"), Diff(DELETE,"70"), Diff(INSERT,"69"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2409" _type="PauseCommand" date="Tue May 03 20:06:54 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="3428271">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[112574]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2408" _type="ConsoleOutput" date="Tue May 03 20:06:54 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3428271" type="ConsoleOutput">
    <outputString><![CDATA[
Test execution time (ms):112573
GIPCRMINIOServerMetaStateBroadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"¶Test execution time (ms):112573¶"), Diff(EQUAL,"GIPCRMINIOServerMetaState"), Diff(DELETE,"No"), Diff(EQUAL,"Broadcast did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0¶"), Diff(DELETE,"¶Test execution time (ms):112569¶")]]]></diff>
  </Command>
  <Command __id="2411" _type="PauseCommand" date="Tue May 03 20:07:44 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="3477899">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[49628]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2410" _type="ShellCommand" date="Tue May 03 20:07:44 EDT 2022" starttimestamp="1651619386199" timestamp="3477899" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2413" _type="PauseCommand" date="Tue May 03 20:07:50 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3484008">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[6109]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2412" _type="ShellCommand" date="Tue May 03 20:07:50 EDT 2022" starttimestamp="1651619386199" timestamp="3484008" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2415" _type="PauseCommand" date="Tue May 03 20:07:51 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3485100">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1092]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2414" _type="ConsoleOutput" date="Tue May 03 20:07:51 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3485100" type="ConsoleOutput">
    <outputString><![CDATA[Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateNoBroadcast@3c9a6366 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"¶Test execution time (ms):112573¶"), Diff(INSERT,"Re-running test gradingTools.comp533s20.assignment6.testcases."), Diff(EQUAL,"GIPCRMINIO"), Diff(DELETE,"Server"), Diff(INSERT,"Client"), Diff(EQUAL,"MetaState"), Diff(INSERT,"No"), Diff(EQUAL,"Broadcast"), Diff(DELETE," did not pass completely:In Server enabling RMI, no line found matching regex: .*?\{main\}.*?RMIObjectRegistered.*%0.0"), Diff(INSERT,"@3c9a6366 . Results may change."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2417" _type="PauseCommand" date="Tue May 03 20:07:54 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3488047">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[2947]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2416" _type="ShellCommand" date="Tue May 03 20:07:54 EDT 2022" starttimestamp="1651619386199" timestamp="3488047" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2418" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:07:54 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3488494" type="Run" />
  <Command __id="2419" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:07:54 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3488494" type="Run" />
  <Command __id="2421" _type="PauseCommand" date="Tue May 03 20:07:56 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3490793">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[2299]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2420" _type="ShellCommand" date="Tue May 03 20:07:56 EDT 2022" starttimestamp="1651619386199" timestamp="3490793" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2423" _type="PauseCommand" date="Tue May 03 20:08:01 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3495463">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4670]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2422" _type="ShellCommand" date="Tue May 03 20:08:01 EDT 2022" starttimestamp="1651619386199" timestamp="3495463" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2424" _type="EclipseCommand" commandID="" date="Tue May 03 20:08:01 EDT 2022" starttimestamp="1651619386199" timestamp="3495676" />
  <Command __id="2425" _type="EclipseCommand" commandID="" date="Tue May 03 20:08:01 EDT 2022" starttimestamp="1651619386199" timestamp="3495709" />
  <Command __id="2426" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:08:01 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3495779" type="Run" />
  <Command __id="2427" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:08:01 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3495779" type="Run" />
  <Command __id="2429" _type="PauseCommand" date="Tue May 03 20:08:04 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3498400">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2621]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2428" _type="ShellCommand" date="Tue May 03 20:08:04 EDT 2022" starttimestamp="1651619386199" timestamp="3498400" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2431" _type="PauseCommand" date="Tue May 03 20:08:28 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="3522328">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[23928]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2430" _type="ConsoleOutput" date="Tue May 03 20:08:28 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3522328" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):21869
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Re-running test gradingTools.comp533s20.assignment6.testcases.GIPCRMINIOClientMetaStateNoBroadcast@3c9a6366 . Results may change."), Diff(INSERT,"Test execution time (ms):21869"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2433" _type="PauseCommand" date="Tue May 03 20:08:43 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3536886">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14558]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2432" _type="ConsoleOutput" date="Tue May 03 20:08:43 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3536886" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14552
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"21869"), Diff(INSERT,"14552"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2435" _type="PauseCommand" date="Tue May 03 20:08:57 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3551442">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14556]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2434" _type="ConsoleOutput" date="Tue May 03 20:08:57 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3551442" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14553
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1455"), Diff(DELETE,"2"), Diff(INSERT,"3"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2437" _type="PauseCommand" date="Tue May 03 20:09:46 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="3600082">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[48640]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[BalloonCommand]]></next>
  </Command>
  <Command __id="2436" _type="BalloonCommand" date="Tue May 03 20:09:46 EDT 2022" message="*******************************************
Worked 34 minutes(fixed)/60 minutes(context based) from
Tue May 03 19:09:46 EDT 2022 to Tue May 03 20:08:57 EDT 2022
Edited 2 Projects: 
	533Assignment5
	533Assignment060
Edited 9 Files: 
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipcNio.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientRmiGipc.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\ClientReadExample.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientInterfaceGipc.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientConfigurer.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\ClientOutCoupler.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\server\RMIAndGIPCServer.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\ClientInterface.java
	C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nioExample\AnNIOManagerPrintClient.java
Number of insert: 1593
Number of delete: 6086
" starttimestamp="1651619386199" timestamp="3600082">
    <fineGrainedWorkTime><![CDATA[60]]></fineGrainedWorkTime>
    <insert><![CDATA[1593]]></insert>
    <startTime><![CDATA[1651619386253]]></startTime>
    <endTime><![CDATA[1651622937641]]></endTime>
    <workTime><![CDATA[34]]></workTime>
    <delete><![CDATA[6086]]></delete>
  </Command>
  <Command __id="2439" _type="PauseCommand" date="Tue May 03 20:10:43 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="3657451">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[BalloonCommand]]></prev>
    <pause><![CDATA[57369]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2438" _type="ConsoleOutput" date="Tue May 03 20:10:43 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3657451" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67586
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14553"), Diff(INSERT,"67586"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2441" _type="PauseCommand" date="Tue May 03 20:10:54 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3667887">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10436]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2440" _type="ConsoleOutput" date="Tue May 03 20:10:54 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3667887" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67586"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2443" _type="PauseCommand" date="Tue May 03 20:11:26 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="3700259">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[32372]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2442" _type="ShellCommand" date="Tue May 03 20:11:26 EDT 2022" starttimestamp="1651619386199" timestamp="3700259" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2445" _type="PauseCommand" date="Tue May 03 20:11:27 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3701433">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1174]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2444" _type="ShellCommand" date="Tue May 03 20:11:27 EDT 2022" starttimestamp="1651619386199" timestamp="3701433" type="ECLIPSE_MINIMIZED" />
  <Command __id="2446" _type="ShellCommand" date="Tue May 03 20:11:27 EDT 2022" starttimestamp="1651619386199" timestamp="3701447" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2448" _type="PauseCommand" date="Tue May 03 20:12:36 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="3770047">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[68600]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2447" _type="ConsoleOutput" date="Tue May 03 20:12:36 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3770047" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112591
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112591¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="2450" _type="PauseCommand" date="Tue May 03 20:12:58 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="3792644">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22597]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2449" _type="ConsoleOutput" date="Tue May 03 20:12:58 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3792644" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22592
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"259"), Diff(DELETE,"1¶Number of traces > 800  turning tracing off"), Diff(INSERT,"2"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2452" _type="PauseCommand" date="Tue May 03 20:13:21 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="3815295">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22651]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2451" _type="ConsoleOutput" date="Tue May 03 20:13:21 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3815295" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22599
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2259"), Diff(DELETE,"2"), Diff(INSERT,"9"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2453" _type="ShellCommand" date="Tue May 03 20:13:22 EDT 2022" starttimestamp="1651619386199" timestamp="3816183" type="ECLIPSE_MAXIMIZED" />
  <Command __id="2454" _type="ShellCommand" date="Tue May 03 20:13:22 EDT 2022" starttimestamp="1651619386199" timestamp="3816221" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2456" _type="PauseCommand" date="Tue May 03 20:13:24 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3818403">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2182]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2455" _type="ShellCommand" date="Tue May 03 20:13:24 EDT 2022" starttimestamp="1651619386199" timestamp="3818403" type="ECLIPSE_MINIMIZED" />
  <Command __id="2457" _type="ShellCommand" date="Tue May 03 20:13:24 EDT 2022" starttimestamp="1651619386199" timestamp="3818416" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2459" _type="PauseCommand" date="Tue May 03 20:13:44 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="3837832">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[19416]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2458" _type="ConsoleOutput" date="Tue May 03 20:13:44 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3837832" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22584
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"99"), Diff(INSERT,"84"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2461" _type="PauseCommand" date="Tue May 03 20:14:06 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="3860413">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22581]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="2460" _type="ConsoleOutput" date="Tue May 03 20:14:06 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="3860413" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22576
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"84"), Diff(INSERT,"76"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2463" _type="PauseCommand" date="Tue May 03 20:14:46 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="3900540">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[40127]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2462" _type="ShellCommand" date="Tue May 03 20:14:46 EDT 2022" starttimestamp="1651619386199" timestamp="3900540" type="ECLIPSE_MAXIMIZED" />
  <Command __id="2464" _type="ShellCommand" date="Tue May 03 20:14:46 EDT 2022" starttimestamp="1651619386199" timestamp="3900586" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2479" _type="PauseCommand" date="Tue May 03 20:15:13 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3927111">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1428]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2478" _type="SelectTextCommand" caretOffset="726" date="Tue May 03 20:15:13 EDT 2022" end="1423" start="726" starttimestamp="1651619386199" timestamp="3927111" />
  <Command __id="2480" _type="CopyCommand" date="Tue May 03 20:15:13 EDT 2022" starttimestamp="1651619386199" timestamp="3927644" />
  <Command __id="2482" _type="PauseCommand" date="Tue May 03 20:15:17 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3930836">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[3192]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2483" _type="MoveCaretCommand" caretOffset="1414" date="Tue May 03 20:15:17 EDT 2022" docOffset="1414" starttimestamp="1651619386199" timestamp="3931095" />
  <Command __id="2485" _type="PauseCommand" date="Tue May 03 20:15:18 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3932300">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2484" _type="MoveCaretCommand" caretOffset="1136" date="Tue May 03 20:15:18 EDT 2022" docOffset="1136" starttimestamp="1651619386199" timestamp="3932300" />
  <Command __id="2487" _type="InsertStringCommand" date="Tue May 03 20:15:19 EDT 2022" starttimestamp="1651619386199" timestamp="3933135" timestamp2="3933135">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2489" _type="PasteCommand" date="Tue May 03 20:15:19 EDT 2022" starttimestamp="1651619386199" timestamp="3933366" />
  <Command __id="2491" _type="PauseCommand" date="Tue May 03 20:15:21 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3934882">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1516]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2492" _type="UndoCommand" date="Tue May 03 20:15:21 EDT 2022" starttimestamp="1651619386199" timestamp="3934898" />
  <Command __id="2494" _type="PauseCommand" date="Tue May 03 20:15:22 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3936307">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[1409]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2493" _type="MoveCaretCommand" caretOffset="1451" date="Tue May 03 20:15:22 EDT 2022" docOffset="1451" starttimestamp="1651619386199" timestamp="3936307" />
  <Command __id="2275" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:01:40 EDT 2022" docASTNodeCount="914" docActiveCodeLength="6569" docExpressionCount="639" docLength="7389" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3114608">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\remote\ServerRemoteObjectRMI.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server.remote;

import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.List;

import assignments.util.mainArgs.ClientArgsProcessor;
import assignments.util.mainArgs.ServerArgsProcessor;
import client.ClientInterfaceGipc;
import client.ClientInterfaceRmi;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.misc.ThreadSupport;
import util.tags.DistributedTags;
import coupledsims.AStandAloneTwoCoupledHalloweenSimulations;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.PortTraceUtility;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMITraceUtility;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import 	util.trace.port.rpc.rmi.RMIObjectRegistered;

@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})
public class ServerRemoteObjectRMI extends AStandAloneTwoCoupledHalloweenSimulations implements ServerInterfaceRmi{
	List<ClientInterfaceRmi> clientList = new ArrayList<ClientInterfaceRmi>();
	
	private static  String RMI_SERVER_HOST_NAME;
	private static int RMI_SERVER_PORT;
	private static String SERVER_NAME;
	
	//A5
	private static int GIPC_SERVER_PORT;
	protected static GIPCRegistry gipcRegistry;
	
	//int aProposalNumber = 0;
	

	
	@Override
	public void processArgs(String[] args) {
		System.out.println("Registry host:" + ClientArgsProcessor.getRegistryHost(args));
		System.out.println("Registry port:" + ClientArgsProcessor.getRegistryPort(args));
		System.out.println("Server host:" + ClientArgsProcessor.getServerHost(args));
		System.out.println("Headless:" + ClientArgsProcessor.getHeadless(args));
		System.out.println("Client name:" + ClientArgsProcessor.getClientName(args));

		// Make sure you set this property when processing args
		System.setProperty("java.awt.headless", ClientArgsProcessor.getHeadless(args));

		RMI_SERVER_HOST_NAME = ServerArgsProcessor.getRegistryHost(args);
		RMI_SERVER_PORT = ServerArgsProcessor.getRegistryPort(args);
		SERVER_NAME = "SERVER";
		//SERVER_NAME = ClientArgsProcessor.getServerHost(args);
		
		GIPC_SERVER_PORT = ServerArgsProcessor.getGIPCServerPort(args);
				//ClientArgsProcessor.getServerHost(args);
		
		
	}
	
	@Override
	public void registerClient(ClientInterfaceRmi aClient) throws RemoteException {
		// TODO Auto-generated method stub
		clientList.add(aClient);
		System.out.println("Client registered");
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientInterfaceRmi originalClient, int aProposalNumber) throws RemoteException {
		
		//TODO Check is this is where delay is needed
		long aDelay = getDelay(); 
		if (aDelay > 0) {
			ThreadSupport.sleep(aDelay);
		}
		
		System.out.println("Command recieved for broadcast: "+ aNewCommand);
		RemoteProposeRequestReceived.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
		
		for (ClientInterfaceRmi client : clientList) {
			if(client.equals(originalClient)) {
				if (aNewCommand.charAt(0) == 'q') {
					//Need to quit
					this.quit(0);
				}
				continue;
			}
			
			client.inCoupler(aNewCommand, aProposalNumber);
			ProposalLearnedNotificationSent.newCase(this, SERVER_NAME, aProposalNumber, aNewCommand);
			
			if (aNewCommand.charAt(0) == 'q') {
				//Need to quit
				this.quit(0);
			}
		}
				
	}
	
	@Override
	protected void setTracing() {
		//A5
		FactoryTraceUtility.setTracing();
		BeanTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		GIPCRPCTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
				
		//A4
		PortTraceUtility.setTracing();
		RMITraceUtility.setTracing();
		NIOTraceUtility.setTracing();
		FactoryTraceUtility.setTracing();		
		ConsensusTraceUtility.setTracing();
		ThreadDelayed.enablePrint();
		trace(true);
	}

	@Override
	protected void init(String[] args) {
		
		setTracing();

		this.processArgs(args);
		
		
		try {
			final Registry rmiRegistry = LocateRegistry.getRegistry(RMI_SERVER_HOST_NAME, RMI_SERVER_PORT);
			RMIRegistryLocated.newCase(this, RMI_SERVER_HOST_NAME, RMI_SERVER_PORT, rmiRegistry);
			//Create remote server object
			final ServerInterfaceRmi server = new ServerRemoteObjectRMI();
			//create proxy of remote server object
			//UnicastRemoteObject.exportObject(server, 0);
			UnicastRemoteObject.exportObject(this, 0);
			//send server to RMI server
			//rmiRegistry.rebind(SERVER_NAME, server);
			rmiRegistry.rebind(SERVER_NAME, this);
			
			RMIObjectRegistered.newCase(this, SERVER_NAME, (ServerInterfaceRmi) this, rmiRegistry);
			
			System.out.println("Server proxy sent to RMI Registry");
			
			
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
	}
	
	@Override
	public void  start (String[] args) {
		System.out.println("inside RMI server start");
		init(args);
		

	}

	@Override
	public void fakeMethod(String stringOne, String stringTwo){
		// TODO Auto-generated method stub
		IPCMechanism mechanism = getIPCMechanism();
		setIPCMechanism(mechanism);
		boolean broadcast = true;
		setBroadcastMetaState(broadcast);
		
	}

	@Override
	public void fakeMethodTwo(String stringOne, ClientInterfaceRmi client) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	public void fakeMethodThree(String stringOne, ClientInterfaceGipc client) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFour(String stringOne, boolean trueFalse) {
		// TODO Auto-generated method stub

	}
	
	@Override
	public void fakeMethodFive(String stringOne, IPCMechanism mechanism) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createGIPCRegistry() throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientRMI(ClientInterfaceGipc aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void registerClientGIPC(ClientInterfaceGipc aClient) throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcast(String aNewCommand, ClientInterfaceGipc originalClient, int aProposalNumber)
			throws RemoteException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void broadcastIPCMechanism(IPCMechanism mechanism, ClientInterfaceGipc originalClient,
			int aProposalNumber, boolean broadcast) throws RemoteException {
		// TODO Auto-generated method stub
		
	}


}
]]></snapshot>
  </Command>
  <DocumentChange __id="2284" _type="Replace" date="Tue May 03 20:01:53 EDT 2022" docASTNodeCount="914" docActiveCodeLength="6567" docExpressionCount="639" docLength="7387" endLine="149" insertionLength="19" int_docASTNodeCount="869" int_docActiveCodeLength="6548" int_docExpressionCount="607" int_docLength="7368" length="21" offset="5098" startLine="149" starttimestamp="1651619386199" timestamp="3127473">
    <deletedText><![CDATA[ServerRemoteObjectRMI]]></deletedText>
    <insertedText><![CDATA[ServerObjectRmiGipc]]></insertedText>
  </DocumentChange>
  <Command __id="2298" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:02:06 EDT 2022" docASTNodeCount="30" docActiveCodeLength="217" docExpressionCount="18" docLength="217" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3139872">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\ClientInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nio;

import java.nio.ByteBuffer;
import java.util.concurrent.ArrayBlockingQueue;

public interface ClientInterface {

	void processInput();

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2305" _type="Delete" date="Tue May 03 20:02:09 EDT 2022" docASTNodeCount="27" docActiveCodeLength="194" docExpressionCount="17" docLength="194" endLine="8" length="23" offset="134" startLine="7" starttimestamp="1651619386199" timestamp="3143107">
    <text><![CDATA[	void processInput();
]]></text>
  </DocumentChange>
  <DocumentChange __id="2309" _type="Insert" date="Tue May 03 20:02:10 EDT 2022" docASTNodeCount="27" docActiveCodeLength="200" docExpressionCount="17" docLength="200" length="6" offset="187" repeat="2" starttimestamp="1651619386199" timestamp="3144337" timestamp2="3144447">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2313" _type="Replace" date="Tue May 03 20:02:10 EDT 2022" docASTNodeCount="30" docActiveCodeLength="222" docExpressionCount="18" docLength="222" endLine="10" insertionLength="23" int_docASTNodeCount="27" int_docActiveCodeLength="199" int_docExpressionCount="17" int_docLength="199" length="1" offset="192" startLine="10" starttimestamp="1651619386199" timestamp="3144720">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	void processInput();
]]></insertedText>
  </DocumentChange>
  <Command __id="2318" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:02:14 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1444" docExpressionCount="123" docLength="1680" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3148412">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\ClientReadExample.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nio;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import utilRead.ReadThreadInterface;

public class ClientReadExample implements ReadThreadInterface{
	//final AnNIOManagerPrintClient client;
	final ClientInterface client;
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();
	
	public ClientReadExample (final ClientInterface aClient) {
		client = aClient;
	}

	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		while(true) {
			synchronized (this) {
				try {
					wait();
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					break; // this breaks out of run loop then thread terminates
				}
			}
			
			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
			
			ArrayBlockingQueue<ByteBuffer> boundedBuffer = client.getBoundedBuffer();
			
			
					
			ByteBuffer originalMessage = null;
			try {
				originalMessage = boundedBuffer.take();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			String aMessageString = new String(originalMessage.array());
			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
			
		
		}
		
	}
	
	@Override
	public synchronized void notifyThread() {
		// TODO This should be when a line is read
		this.notify();
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2325" _type="Delete" date="Tue May 03 20:02:17 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1441" docExpressionCount="123" docLength="1638" endLine="13" length="42" offset="356" startLine="12" starttimestamp="1651619386199" timestamp="3151420">
    <text><![CDATA[	//final AnNIOManagerPrintClient client;
]]></text>
  </DocumentChange>
  <DocumentChange __id="2331" _type="Delete" date="Tue May 03 20:02:19 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1437" docExpressionCount="123" docLength="1600" endLine="22" length="38" offset="642" startLine="21" starttimestamp="1651619386199" timestamp="3152958">
    <text><![CDATA[		// TODO Auto-generated method stub
]]></text>
  </DocumentChange>
  <DocumentChange __id="2335" _type="Delete" date="Tue May 03 20:02:20 EDT 2022" docASTNodeCount="187" docActiveCodeLength="1338" docExpressionCount="115" docLength="1501" endLine="22" length="99" offset="549" startLine="19" starttimestamp="1651619386199" timestamp="3154776">
    <text><![CDATA[	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="2341" _type="Insert" date="Tue May 03 20:02:25 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1437" docExpressionCount="123" docLength="1600" length="99" offset="549" starttimestamp="1651619386199" timestamp="3159555">
    <text><![CDATA[	@Override
	public void socketChannelRead(SocketChannel arg0, ByteBuffer arg1, int arg2) {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="2346" _type="Delete" date="Tue May 03 20:02:27 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1433" docExpressionCount="123" docLength="1562" endLine="27" length="38" offset="686" startLine="26" starttimestamp="1651619386199" timestamp="3161247">
    <text><![CDATA[		// TODO Auto-generated method stub
]]></text>
  </DocumentChange>
  <DocumentChange __id="2353" _type="Delete" date="Tue May 03 20:02:29 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1426" docExpressionCount="123" docLength="1521" endLine="32" length="41" offset="794" startLine="31" starttimestamp="1651619386199" timestamp="3163664">
    <text><![CDATA[					// TODO Auto-generated catch block
]]></text>
  </DocumentChange>
  <DocumentChange __id="2357" _type="Delete" date="Tue May 03 20:02:31 EDT 2022" docASTNodeCount="205" docActiveCodeLength="1426" docExpressionCount="123" docLength="1468" endLine="32" length="53" offset="833" startLine="32" starttimestamp="1651619386199" timestamp="3165376">
    <text><![CDATA[// this breaks out of run loop then thread terminates]]></text>
  </DocumentChange>
  <DocumentChange __id="2363" _type="Delete" date="Tue May 03 20:02:33 EDT 2022" docASTNodeCount="198" docActiveCodeLength="1363" docExpressionCount="117" docLength="1405" endLine="37" length="63" offset="853" startLine="36" starttimestamp="1651619386199" timestamp="3167533">
    <text><![CDATA[			System.out.println("IN RUN METHOD OF CLIENT READ THREAD");
]]></text>
  </DocumentChange>
  <DocumentChange __id="2369" _type="Delete" date="Tue May 03 20:02:36 EDT 2022" docASTNodeCount="189" docActiveCodeLength="1295" docExpressionCount="109" docLength="1337" endLine="49" length="68" offset="1183" startLine="48" starttimestamp="1651619386199" timestamp="3170681">
    <text><![CDATA[			System.out.println("SERVER MESSAGE RECIEVED: "+aMessageString);
]]></text>
  </DocumentChange>
  <DocumentChange __id="2387" _type="Delete" date="Tue May 03 20:02:49 EDT 2022" docASTNodeCount="189" docActiveCodeLength="1291" docExpressionCount="109" docLength="1291" endLine="57" length="46" offset="1264" startLine="56" starttimestamp="1651619386199" timestamp="3183190">
    <text><![CDATA[		// TODO This should be when a line is read
]]></text>
  </DocumentChange>
  <Command __id="2395" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:03:06 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3385" docExpressionCount="318" docLength="3385" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3200074">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\NioClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nio;

import java.io.IOException;
import java.net.InetAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.Scanner;
import java.util.concurrent.ArrayBlockingQueue;

import assignments.util.MiscAssignmentUtils;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import utilRead.ReadThreadInterface;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelConnectListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;



public class NioClient implements SocketChannelConnectListener, SocketChannelWriteListener,
SocketChannelAcceptListener, SocketChannelReadListener, ClientInterface{
	protected NIOManager managerNio = NIOManagerFactory.getSingleton();
	protected SocketChannel socketChannel;
	protected Scanner scanner = new Scanner(System.in);
	
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread thisReader = null;

	protected NioClient(final int aServerPort) {
		setTracing();
		initialize(aServerPort);
	}



	@Override
	public void processInput() {
		scanner = new Scanner(System.in);
		while (true) {
			System.out.println("Enter a line of input to be printed remotely");
			final String aNextLine = scanner.nextLine();
			final ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());
			managerNio.write(socketChannel, aWriteMessage, this);
		}
	}

	void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	
	@Override
	public void socketChannelRead(final SocketChannel newSocketChannel, final ByteBuffer aMessage, final int aLength) {
		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);
		
		reader.notifyThread();		
	}

	@Override
	public void socketChannelAccepted(final ServerSocketChannel arg0, final SocketChannel arg1) {
				
	}

	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {
		return boundedBuffer;
	}

	void initialize(final int aServerPort) {
		try {
			socketChannel = SocketChannel.open();
			final InetAddress aServerAddress = InetAddress.getByName("localhost");
			
			managerNio.connect(socketChannel, aServerAddress, aServerPort, 
					SelectionKey.OP_READ,
					this);
		} catch (IOException exception) {
			exception.printStackTrace();
		}
		
		reader = new ClientReadExample(this);			
		thisReader = new Thread(reader);	
		thisReader.start();
	}

	@Override
	public void connected(final SocketChannel aSocketChannel) {
		managerNio.addReadListener(aSocketChannel, this);
		System.out.println("connected?????????????????????????????");
	}

	@Override
	public void notConnected(final SocketChannel theSocketChannel, final Exception exception) {

	}

	@Override
	public void written(SocketChannel newSocketChannel, final ByteBuffer theWriteBuffer, final int sendId) {
		System.out.println("step reached.........................");
	}

}]]></snapshot>
  </Command>
  <Command __id="2467" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:15:01 EDT 2022" docASTNodeCount="158" docActiveCodeLength="1007" docExpressionCount="116" docLength="1007" projectName="533Assignment5" starttimestamp="1651619386199" timestamp="3914943">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\registry\MyRegistry.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.registry;

import assignments.util.mainArgs.RegistryArgsProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.port.rpc.rmi.RMIRegistryCreated;
import util.trace.port.rpc.rmi.RMITraceUtility;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Scanner;


@Tags({DistributedTags.REGISTRY, DistributedTags.RMI})
public class MyRegistry {
    public static void main(String[] args) {
        try {
            RMITraceUtility.setTracing();
            int port = RegistryArgsProcessor.getRegistryPort(args);
            final Registry registry = LocateRegistry.createRegistry(port);
            RMIRegistryCreated.newCase(registry, port);
            @SuppressWarnings("resource")
			Scanner scanner = new Scanner(System.in);
            scanner.nextLine();
        } catch (RemoteException ex) {
            ex.printStackTrace();
        }
    }

}
]]></snapshot>
  </Command>
  <Command __id="2470" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:15:05 EDT 2022" docASTNodeCount="301" docActiveCodeLength="1996" docExpressionCount="237" docLength="3895" projectName="533Assignment5" starttimestamp="1651619386199" timestamp="3919102">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\server\RemoteServerObject.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package comp533.server;

import java.io.Serializable;
import java.rmi.NotBoundException;
import java.rmi.Remote;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.List;

import assignments.util.inputParameters.AnAbstractSimulationParametersBean;
import comp533.client.ClientInterface;
import comp533.client.GIPCClient;
import stringProcessors.AHalloweenCommandProcessor;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.tags.DistributedTags;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.communication.CommunicationStateNames;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.rmi.RMIObjectLookedUp;
import util.trace.port.rpc.rmi.RMIObjectRegistered;
import util.trace.port.rpc.rmi.RMIRegistryLocated;
import util.trace.port.rpc.rmi.RMITraceUtility;


@SuppressWarnings("serial")
@Tags({DistributedTags.SERVER_REMOTE_OBJECT, DistributedTags.RMI, DistributedTags.GIPC})

public class RemoteServerObject extends AnAbstractSimulationParametersBean implements Remote {
	/**
	 * 
	 */
//	private static final long serialVersionUID = 1L;
    private Registry rmiRegistry;
	private List<ClientInterface> clients;

//	@Override
//	public void setTracing() {
//        FactoryTraceUtility.setTracing();
//        RMITraceUtility.setTracing();
//        ConsensusTraceUtility.setTracing();
//        NIOTraceUtility.setTracing();
//        ThreadDelayed.enablePrint();
//        this.trace(true);
//    }

	
//	public void findRegistry(int registryPort, String registryHost) throws RemoteException {
//        this.rmiRegistry = LocateRegistry.getRegistry(registryPort);
//        RMIRegistryLocated.newCase(this, registryHost, registryPort, this.rmiRegistry);
//        setBroadcastMetaState(true);
//        setIPCMechanism(ipcMechanism);
//    }

//    @Override
//    public void exportServer(int serverPort) throws RemoteException {
//        UnicastRemoteObject.exportObject(this, serverPort);
//        this.rmiRegistry.rebind(RemoteServerInterface.class.getName(), this);
//        RMIObjectRegistered.newCase(this, RemoteServerInterface.class.getName(), this, rmiRegistry);
//    }


	
//	@Override
//    public void receiveRequest(String aCommand, RemoteClientInterface clientProxy) {
//        RemoteProposeRequestReceived.newCase(this, CommunicationStateNames.COMMAND, -1, aCommand);
//        for (RemoteClientInterface aClientProxy: this.clients) {
//            if (!aClientProxy.equals(clientProxy)) {
//                try {
//                    ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, aCommand);
//                    boolean atomicBroadcastStatus = this.isAtomicBroadcast();
//                    aClientProxy.receiveProposalLearnedNotification(aCommand, atomicBroadcastStatus);
//                } catch (RemoteException ex) {
//                    ex.printStackTrace();
//                }
//            }
//        }
//
//    }
	
//	@Override
//	public void registerClients() {
//		processCommands("haofan", "zhenfan");
//    }
	
	@Override
    public void quit(int aCode) {
        System.exit(aCode);
    }
	
	private void processCommands(String inputCommand, String anotherCommand) {
		setBroadcastMetaState(true);
        setIPCMechanism(ipcMechanism);
		HalloweenCommandProcessor processor = new AHalloweenCommandProcessor();
		processor.processCommand(null);
		
	}





}
]]></snapshot>
  </Command>
  <Command __id="2481" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:15:17 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3385" docExpressionCount="318" docLength="3385" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3930836">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\NioClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package nio;¶¶import java.io.IOException;¶import java.net.InetAddress;¶import java.nio.ByteBuffer;¶import java.nio.channels.SelectionKey;¶import java.nio.channels.ServerSocketChannel;¶import java.nio.channels.SocketChannel;¶import java.util.Scanner;¶import java.util.concurrent.ArrayBlockingQueue;¶¶import assignments.util.MiscAssignmentUtils;¶import inputport.nio.manager.NIOManager;¶import inputport.nio.manager.NIOManagerFactory;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.port.nio.NIOTraceUtility;¶import utilRead.ReadThreadInterface;¶import inputport.nio.manager.listeners.SocketChannelAcceptListener;¶import inputport.nio.manager.listeners.SocketChannelConnectListener;¶import inputport.nio.manager.listeners.SocketChannelReadListener;¶import inputport.nio.manager.listeners.SocketChannelWriteListener;¶¶¶¶public class NioClient implements SocketChannelConnectListener, SocketChannelWriteListener,¶SocketChannelAcceptListener, SocketChannelReadListener, ClientInterface{¶	protected NIOManager managerNio = NIOManagerFactory.getSingleton();¶	protected SocketChannel socketChannel;¶	protected Scanner scanner = new Scanner(System.in);¶	¶	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);¶	ReadThreadInterface reader = null;¶	Thread thisReader = null;¶¶	protected NioClient(final int aServerPort) {¶		setTracing();¶		initialize(aServerPort);¶	}¶¶¶¶	@Override¶	public void processInput() {¶		scanner = new Scanner(System.in);¶		while (true) {¶			System.out.println("Enter a line of input to be printed remotely");¶			final String aNextLine = scanner.nextLine();¶			final ByteBuffer aWriteMessage = ByteBuffer.wrap(aNextLine.getBytes());¶			managerNio.write(socketChannel, aWriteMessage, this);¶		}¶	}¶¶	void setTracing() {¶		FactoryTraceUtility.setTracing();¶		NIOTraceUtility.setTracing();¶	}¶¶	¶	@Override¶	public void socketChannelRead(final SocketChannel newSocketChannel, final ByteBuffer aMessage, final int aLength) {¶		final ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);¶		boundedBuffer.add(copy);¶		¶		reader.notifyThread();		¶	}¶¶	@Override¶	public void socketChannelAccepted(final ServerSocketChannel arg0, final SocketChannel arg1) {¶				¶	}¶¶	@Override¶	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer() {¶		return boundedBuffer;¶	}¶¶	void initialize(final int aServerPort) {¶		try {¶			socketChannel = SocketChannel.open();¶			final InetAddress aServerAddress = InetAddress.getByName("localhost");¶			¶			managerNio.connect(socketChannel, aServerAddress, aServerPort, ¶					SelectionKey.OP_READ,¶					this);¶		} catch (IOException exception) {¶			exception.printStackTrace();¶		}¶		¶		reader = new ClientReadExample(this);			¶		thisReader = new Thread(reader);	¶		thisReader.start();¶	}¶¶	@Override¶	public void connected(final SocketChannel aSocketChannel) {¶		managerNio.addReadListener(aSocketChannel, this);¶		System.out.println("connected?????????????????????????????");¶	}¶¶	@Override¶	public void notConnected(final SocketChannel theSocketChannel, final Exception exception) {¶¶	}¶¶	@Override¶	public void written(SocketChannel newSocketChannel, final ByteBuffer theWriteBuffer, final int sendId) {¶		System.out.println("step reached.........................");¶	}¶¶}")]]]></diff>
  </Command>
  <DocumentChange __id="2486" _type="Insert" date="Tue May 03 20:15:19 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3388" docExpressionCount="318" docLength="3388" length="3" offset="1136" starttimestamp="1651619386199" timestamp="3933130">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2488" _type="Replace" date="Tue May 03 20:15:19 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3414" docExpressionCount="318" docLength="4084" endLine="28" insertionLength="697" int_docASTNodeCount="495" int_docActiveCodeLength="3387" int_docExpressionCount="318" int_docLength="3387" length="1" offset="1138" startLine="28" starttimestamp="1651619386199" timestamp="3933358">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	
//	public void findRegistry(int registryPort, String registryHost) throws RemoteException {
//        this.rmiRegistry = LocateRegistry.getRegistry(registryPort);
//        RMIRegistryLocated.newCase(this, registryHost, registryPort, this.rmiRegistry);
//        setBroadcastMetaState(true);
//        setIPCMechanism(ipcMechanism);
//    }

//    @Override
//    public void exportServer(int serverPort) throws RemoteException {
//        UnicastRemoteObject.exportObject(this, serverPort);
//        this.rmiRegistry.rebind(RemoteServerInterface.class.getName(), this);
//        RMIObjectRegistered.newCase(this, RemoteServerInterface.class.getName(), this, rmiRegistry);
//    }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2490" _type="Replace" date="Tue May 03 20:15:21 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3388" docExpressionCount="318" docLength="3388" endLine="41" insertionLength="1" int_docASTNodeCount="495" int_docActiveCodeLength="3387" int_docExpressionCount="318" int_docLength="3387" length="697" offset="1138" startLine="28" starttimestamp="1651619386199" timestamp="3934882">
    <deletedText><![CDATA[	
//	public void findRegistry(int registryPort, String registryHost) throws RemoteException {
//        this.rmiRegistry = LocateRegistry.getRegistry(registryPort);
//        RMIRegistryLocated.newCase(this, registryHost, registryPort, this.rmiRegistry);
//        setBroadcastMetaState(true);
//        setIPCMechanism(ipcMechanism);
//    }

//    @Override
//    public void exportServer(int serverPort) throws RemoteException {
//        UnicastRemoteObject.exportObject(this, serverPort);
//        this.rmiRegistry.rebind(RemoteServerInterface.class.getName(), this);
//        RMIObjectRegistered.newCase(this, RemoteServerInterface.class.getName(), this, rmiRegistry);
//    }]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <Command __id="2496" _type="PauseCommand" date="Tue May 03 20:15:24 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3938203">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1896]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2497" _type="PasteCommand" date="Tue May 03 20:15:24 EDT 2022" starttimestamp="1651619386199" timestamp="3938212" />
  <Command __id="2498" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:15:25 EDT 2022" starttimestamp="1651619386199" timestamp="3939125" />
  <Command __id="2499" _type="EclipseCommand" commandID="" date="Tue May 03 20:15:25 EDT 2022" starttimestamp="1651619386199" timestamp="3939211" />
  <Command __id="2500" _type="EclipseCommand" commandID="" date="Tue May 03 20:15:25 EDT 2022" starttimestamp="1651619386199" timestamp="3939227" />
  <Command __id="2502" _type="PauseCommand" date="Tue May 03 20:15:31 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="3945286">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6059]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2503" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:15:31 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3945548" />
  <Command __id="2505" _type="PauseCommand" date="Tue May 03 20:15:35 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3949324">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3776]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2506" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:15:35 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3949490" />
  <Command __id="2508" _type="PauseCommand" date="Tue May 03 20:15:38 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3951909">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2419]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2507" _type="SelectTextCommand" caretOffset="278" date="Tue May 03 20:15:38 EDT 2022" end="312" start="278" starttimestamp="1651619386199" timestamp="3951909" />
  <Command __id="2510" _type="CutCommand" date="Tue May 03 20:15:38 EDT 2022" starttimestamp="1651619386199" timestamp="3952585" />
  <Command __id="2511" _type="SelectTextCommand" caretOffset="76" date="Tue May 03 20:15:39 EDT 2022" end="180" start="76" starttimestamp="1651619386199" timestamp="3953033" />
  <Command __id="2512" _type="ShellCommand" date="Tue May 03 20:15:39 EDT 2022" starttimestamp="1651619386199" timestamp="3953403" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2513" _type="ShellCommand" date="Tue May 03 20:15:40 EDT 2022" starttimestamp="1651619386199" timestamp="3954218" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2514" _type="MoveCaretCommand" caretOffset="180" date="Tue May 03 20:15:40 EDT 2022" docOffset="500" starttimestamp="1651619386199" timestamp="3954277" />
  <Command __id="2516" _type="PasteCommand" date="Tue May 03 20:15:41 EDT 2022" starttimestamp="1651619386199" timestamp="3955086" />
  <Command __id="2518" _type="InsertStringCommand" date="Tue May 03 20:15:41 EDT 2022" starttimestamp="1651619386199" timestamp="3955505" timestamp2="3955505">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2519" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:15:42 EDT 2022" starttimestamp="1651619386199" timestamp="3956037" />
  <Command __id="2520" _type="EclipseCommand" commandID="" date="Tue May 03 20:15:42 EDT 2022" starttimestamp="1651619386199" timestamp="3956122" />
  <Command __id="2521" _type="EclipseCommand" commandID="" date="Tue May 03 20:15:42 EDT 2022" starttimestamp="1651619386199" timestamp="3956132" />
  <Command __id="2523" _type="PauseCommand" date="Tue May 03 20:15:43 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3957363">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1231]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2524" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:15:43 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="3957757" />
  <Command __id="2526" _type="PauseCommand" date="Tue May 03 20:15:47 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3961731">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3973]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2525" _type="MoveCaretCommand" caretOffset="441" date="Tue May 03 20:15:47 EDT 2022" docOffset="1594" starttimestamp="1651619386199" timestamp="3961730" />
  <Command __id="2528" _type="PasteCommand" date="Tue May 03 20:15:48 EDT 2022" starttimestamp="1651619386199" timestamp="3962503" />
  <Command __id="2530" _type="UndoCommand" date="Tue May 03 20:15:49 EDT 2022" starttimestamp="1651619386199" timestamp="3963250" />
  <Command __id="2532" _type="PauseCommand" date="Tue May 03 20:15:51 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3965359">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[UndoCommand]]></prev>
    <pause><![CDATA[2109]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2533" _type="PasteCommand" date="Tue May 03 20:15:51 EDT 2022" starttimestamp="1651619386199" timestamp="3965376" />
  <Command __id="2535" _type="PauseCommand" date="Tue May 03 20:15:55 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3968815">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[3439]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2534" _type="SelectTextCommand" caretOffset="1371" date="Tue May 03 20:15:55 EDT 2022" end="1371" start="1249" starttimestamp="1651619386199" timestamp="3968815" />
  <Command __id="2537" _type="CutCommand" date="Tue May 03 20:15:55 EDT 2022" starttimestamp="1651619386199" timestamp="3969214" />
  <Command __id="2539" _type="PauseCommand" date="Tue May 03 20:15:56 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3970744">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[CutCommand]]></prev>
    <pause><![CDATA[1530]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2538" _type="MoveCaretCommand" caretOffset="1932" date="Tue May 03 20:15:56 EDT 2022" docOffset="3085" starttimestamp="1651619386199" timestamp="3970744" />
  <Command __id="2541" _type="InsertStringCommand" date="Tue May 03 20:15:57 EDT 2022" starttimestamp="1651619386199" timestamp="3971539" timestamp2="3971539">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2543" _type="PasteCommand" date="Tue May 03 20:15:58 EDT 2022" starttimestamp="1651619386199" timestamp="3972029" />
  <Command __id="2545" _type="PauseCommand" date="Tue May 03 20:15:59 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3973187">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1158]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2544" _type="MoveCaretCommand" caretOffset="2076" date="Tue May 03 20:15:59 EDT 2022" docOffset="3229" starttimestamp="1651619386199" timestamp="3973187" />
  <Command __id="2546" _type="SelectTextCommand" caretOffset="2077" date="Tue May 03 20:15:59 EDT 2022" end="2077" start="2071" starttimestamp="1651619386199" timestamp="3973323" />
  <Command __id="2547" _type="SelectTextCommand" caretOffset="2104" date="Tue May 03 20:15:59 EDT 2022" end="2104" start="2067" starttimestamp="1651619386199" timestamp="3973434" />
  <Command __id="2549" _type="InsertStringCommand" date="Tue May 03 20:16:00 EDT 2022" starttimestamp="1651619386199" timestamp="3974405" timestamp2="3974405">
    <data><![CDATA[\]]></data>
  </Command>
  <Command __id="2551" _type="PauseCommand" date="Tue May 03 20:16:02 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3976040">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1635]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2552" _type="UndoCommand" date="Tue May 03 20:16:02 EDT 2022" starttimestamp="1651619386199" timestamp="3976060" />
  <Command __id="2554" _type="UndoCommand" date="Tue May 03 20:16:02 EDT 2022" starttimestamp="1651619386199" timestamp="3976465" />
  <Command __id="2556" _type="UndoCommand" date="Tue May 03 20:16:03 EDT 2022" starttimestamp="1651619386199" timestamp="3977260" />
  <Command __id="2558" _type="UndoCommand" date="Tue May 03 20:16:03 EDT 2022" starttimestamp="1651619386199" timestamp="3977772" />
  <Command __id="2559" _type="MoveCaretCommand" caretOffset="1393" date="Tue May 03 20:16:04 EDT 2022" docOffset="2546" starttimestamp="1651619386199" timestamp="3978396" />
  <Command __id="2561" _type="PauseCommand" date="Tue May 03 20:16:06 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3979923">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1526]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2560" _type="MoveCaretCommand" caretOffset="2141" date="Tue May 03 20:16:06 EDT 2022" docOffset="3294" starttimestamp="1651619386199" timestamp="3979922" />
  <Command __id="2562" _type="MoveCaretCommand" caretOffset="2141" date="Tue May 03 20:16:06 EDT 2022" docOffset="3294" starttimestamp="1651619386199" timestamp="3980053" />
  <Command __id="2563" _type="ShellCommand" date="Tue May 03 20:16:06 EDT 2022" starttimestamp="1651619386199" timestamp="3980375" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2564" _type="ShellCommand" date="Tue May 03 20:16:07 EDT 2022" starttimestamp="1651619386199" timestamp="3981039" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2565" _type="MoveCaretCommand" caretOffset="2148" date="Tue May 03 20:16:07 EDT 2022" docOffset="3301" starttimestamp="1651619386199" timestamp="3981085" />
  <Command __id="2566" _type="SelectTextCommand" caretOffset="2154" date="Tue May 03 20:16:07 EDT 2022" end="2154" start="2148" starttimestamp="1651619386199" timestamp="3981231" />
  <Command __id="2567" _type="SelectTextCommand" caretOffset="2171" date="Tue May 03 20:16:07 EDT 2022" end="2171" start="2144" starttimestamp="1651619386199" timestamp="3981344" />
  <Command __id="2569" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:08 EDT 2022" starttimestamp="1651619386199" timestamp="3982042" />
  <Command __id="2570" _type="MoveCaretCommand" caretOffset="2069" date="Tue May 03 20:16:08 EDT 2022" docOffset="3222" starttimestamp="1651619386199" timestamp="3982580" />
  <Command __id="2571" _type="SelectTextCommand" caretOffset="2070" date="Tue May 03 20:16:08 EDT 2022" end="2070" start="2064" starttimestamp="1651619386199" timestamp="3982732" />
  <Command __id="2572" _type="SelectTextCommand" caretOffset="2097" date="Tue May 03 20:16:09 EDT 2022" end="2097" start="2060" starttimestamp="1651619386199" timestamp="3982862" />
  <Command __id="2574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:09 EDT 2022" starttimestamp="1651619386199" timestamp="3983028" />
  <Command __id="2575" _type="MoveCaretCommand" caretOffset="2157" date="Tue May 03 20:16:09 EDT 2022" docOffset="3310" starttimestamp="1651619386199" timestamp="3983585" />
  <Command __id="2576" _type="SelectTextCommand" caretOffset="2163" date="Tue May 03 20:16:09 EDT 2022" end="2163" start="2157" starttimestamp="1651619386199" timestamp="3983715" />
  <Command __id="2577" _type="SelectTextCommand" caretOffset="2184" date="Tue May 03 20:16:10 EDT 2022" end="2184" start="2147" starttimestamp="1651619386199" timestamp="3983852" />
  <Command __id="2579" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:10 EDT 2022" starttimestamp="1651619386199" timestamp="3984270" />
  <Command __id="2580" _type="MoveCaretCommand" caretOffset="2365" date="Tue May 03 20:16:10 EDT 2022" docOffset="3518" starttimestamp="1651619386199" timestamp="3984780" />
  <Command __id="2581" _type="SelectTextCommand" caretOffset="2377" date="Tue May 03 20:16:11 EDT 2022" end="2377" start="2363" starttimestamp="1651619386199" timestamp="3984920" />
  <Command __id="2582" _type="SelectTextCommand" caretOffset="2379" date="Tue May 03 20:16:11 EDT 2022" end="2379" start="2353" starttimestamp="1651619386199" timestamp="3985056" />
  <Command __id="2584" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:11 EDT 2022" starttimestamp="1651619386199" timestamp="3985221" />
  <Command __id="2586" _type="PauseCommand" date="Tue May 03 20:16:16 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3989935">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4714]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2585" _type="SelectTextCommand" caretOffset="3211" date="Tue May 03 20:16:16 EDT 2022" end="3217" start="3211" starttimestamp="1651619386199" timestamp="3989935" />
  <Command __id="2587" _type="SelectTextCommand" caretOffset="3157" date="Tue May 03 20:16:17 EDT 2022" end="3217" start="3157" starttimestamp="1651619386199" timestamp="3990810" />
  <Command __id="2589" _type="PauseCommand" date="Tue May 03 20:16:19 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3992957">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2147]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2588" _type="SelectTextCommand" caretOffset="2790" date="Tue May 03 20:16:19 EDT 2022" end="3223" start="2790" starttimestamp="1651619386199" timestamp="3992957" />
  <Command __id="2591" _type="PauseCommand" date="Tue May 03 20:16:20 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3994011">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1054]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Delete]]></next>
  </Command>
  <Command __id="2592" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:20 EDT 2022" starttimestamp="1651619386199" timestamp="3994017" />
  <Command __id="2594" _type="PauseCommand" date="Tue May 03 20:16:23 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="3997173">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[3156]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Replace]]></next>
  </Command>
  <Command __id="2595" _type="PasteCommand" date="Tue May 03 20:16:23 EDT 2022" starttimestamp="1651619386199" timestamp="3997192" />
  <Command __id="2597" _type="PauseCommand" date="Tue May 03 20:16:24 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3998546">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1354]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2596" _type="MoveCaretCommand" caretOffset="3756" date="Tue May 03 20:16:24 EDT 2022" docOffset="4909" starttimestamp="1651619386199" timestamp="3998546" />
  <Command __id="2599" _type="PauseCommand" date="Tue May 03 20:16:25 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="3999761">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1215]]></pause>
    <nextType><![CDATA[Save]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2598" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:16:25 EDT 2022" starttimestamp="1651619386199" timestamp="3999761" />
  <Command __id="2600" _type="EclipseCommand" commandID="" date="Tue May 03 20:16:26 EDT 2022" starttimestamp="1651619386199" timestamp="3999893" />
  <Command __id="2601" _type="EclipseCommand" commandID="" date="Tue May 03 20:16:26 EDT 2022" starttimestamp="1651619386199" timestamp="3999910" />
  <Command __id="2602" _type="MoveCaretCommand" caretOffset="3648" date="Tue May 03 20:16:26 EDT 2022" docOffset="4801" starttimestamp="1651619386199" timestamp="4000198" />
  <Command __id="2604" _type="PauseCommand" date="Tue May 03 20:16:28 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4002281">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2083]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2603" _type="MoveCaretCommand" caretOffset="3530" date="Tue May 03 20:16:28 EDT 2022" docOffset="4683" starttimestamp="1651619386199" timestamp="4002281" />
  <Command __id="2605" _type="SelectTextCommand" caretOffset="3531" date="Tue May 03 20:16:28 EDT 2022" end="3531" start="3522" starttimestamp="1651619386199" timestamp="4002435" />
  <Command __id="2606" _type="SelectTextCommand" caretOffset="3545" date="Tue May 03 20:16:28 EDT 2022" end="3545" start="3500" starttimestamp="1651619386199" timestamp="4002526" />
  <Command __id="2607" _type="MoveCaretCommand" caretOffset="3530" date="Tue May 03 20:16:29 EDT 2022" docOffset="4683" starttimestamp="1651619386199" timestamp="4003141" />
  <Command __id="2608" _type="SelectTextCommand" caretOffset="3531" date="Tue May 03 20:16:29 EDT 2022" end="3531" start="3522" starttimestamp="1651619386199" timestamp="4003257" />
  <Command __id="2609" _type="MoveCaretCommand" caretOffset="3524" date="Tue May 03 20:16:30 EDT 2022" docOffset="4677" starttimestamp="1651619386199" timestamp="4003803" />
  <DocumentChange __id="2495" _type="Insert" date="Tue May 03 20:15:24 EDT 2022" docASTNodeCount="495" docActiveCodeLength="3415" docExpressionCount="318" docLength="4085" length="697" offset="1451" starttimestamp="1651619386199" timestamp="3938203">
    <text><![CDATA[	
//	public void findRegistry(int registryPort, String registryHost) throws RemoteException {
//        this.rmiRegistry = LocateRegistry.getRegistry(registryPort);
//        RMIRegistryLocated.newCase(this, registryHost, registryPort, this.rmiRegistry);
//        setBroadcastMetaState(true);
//        setIPCMechanism(ipcMechanism);
//    }

//    @Override
//    public void exportServer(int serverPort) throws RemoteException {
//        UnicastRemoteObject.exportObject(this, serverPort);
//        this.rmiRegistry.rebind(RemoteServerInterface.class.getName(), this);
//        RMIObjectRegistered.newCase(this, RemoteServerInterface.class.getName(), this, rmiRegistry);
//    }]]></text>
  </DocumentChange>
  <Command __id="2501" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:15:31 EDT 2022" docASTNodeCount="35" docActiveCodeLength="232" docExpressionCount="20" docLength="232" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3945286">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\NioClientLaunch.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nio;

import assignments.util.mainArgs.ClientArgsProcessor;

public class NioClientLaunch {
	public static void main(String[] args) {
		new NioClient(ClientArgsProcessor.getNIOServerPort(args)).processInput();
	}

}]]></snapshot>
  </Command>
  <Command __id="2504" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:15:35 EDT 2022" docASTNodeCount="88" docActiveCodeLength="637" docExpressionCount="64" docLength="637" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3949324">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\NIOManagerPrintServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nio;

import java.nio.ByteBuffer;
import java.nio.channels.SocketChannel;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;

import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;

public interface NIOManagerPrintServer extends SocketChannelAcceptListener, SocketChannelReadListener, SocketChannelWriteListener {

	ArrayBlockingQueue<ByteBuffer> getBoundedBuffer();

	List<SocketChannel> getSocketList();

	SocketChannel getSocketChannel();

}]]></snapshot>
  </Command>
  <DocumentChange __id="2509" _type="Delete" date="Tue May 03 20:15:38 EDT 2022" docASTNodeCount="84" docActiveCodeLength="603" docExpressionCount="62" docLength="603" endLine="17" length="34" offset="598" startLine="17" starttimestamp="1651619386199" timestamp="3952564">
    <text><![CDATA[	SocketChannel getSocketChannel();]]></text>
  </DocumentChange>
  <DocumentChange __id="2515" _type="Insert" date="Tue May 03 20:15:41 EDT 2022" docASTNodeCount="88" docActiveCodeLength="640" docExpressionCount="64" docLength="640" length="37" offset="500" repeat="2" starttimestamp="1651619386199" timestamp="3955081" timestamp2="3955502">
    <text><![CDATA[	SocketChannel getSocketChannel();
	]]></text>
  </DocumentChange>
  <Command __id="2522" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:15:43 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3910" docExpressionCount="391" docLength="4531" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="3957363">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\nio\NioServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package nio;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import assignments.util.MiscAssignmentUtils;

import client.ClientInterfaceGipc;
import inputport.nio.manager.NIOManager;
import inputport.nio.manager.NIOManagerFactory;
import inputport.nio.manager.factories.classes.AReadingAcceptCommandFactory;
import inputport.nio.manager.factories.classes.AnAcceptCommandFactory;
import inputport.nio.manager.factories.selectors.AcceptCommandFactorySelector;
import inputport.nio.manager.listeners.SocketChannelAcceptListener;
import inputport.nio.manager.listeners.SocketChannelReadListener;
import inputport.nio.manager.listeners.SocketChannelWriteListener;
import inputport.nio.manager.listeners.WriteBoundedBufferListener;
import util.trace.factories.FactoryTraceUtility;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.nio.SocketChannelBound;
import utilRead.ReadThreadInterface;

public class NioServer implements NIOManagerPrintServer {

	List<SocketChannel> socketList = new ArrayList<SocketChannel>();
	ArrayBlockingQueue<ByteBuffer> boundedBuffer = new ArrayBlockingQueue<ByteBuffer>(500);
	ReadThreadInterface reader = null;
	Thread readThread = null;
	SocketChannel currentSocket = null;
	
	protected NIOManager nioManager = NIOManagerFactory.getSingleton();

	public NioServer(int aServerPort) {
		setTracing();
		setFactories();
		initialize(aServerPort);
	}

	void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	
	void setTracing() {
		FactoryTraceUtility.setTracing();
		NIOTraceUtility.setTracing();
	}

	void initialize(int aServerPort) {
		try {
			ServerSocketChannel aServerFactoryChannel = ServerSocketChannel.open();
			InetSocketAddress anInternetSocketAddress = new InetSocketAddress(aServerPort);
			aServerFactoryChannel.socket().bind(anInternetSocketAddress);
			SocketChannelBound.newCase(this, aServerFactoryChannel, anInternetSocketAddress);
			nioManager.enableListenableAccepts(aServerFactoryChannel, SelectionKey.OP_READ, // allow incoming writes
																							// that can be read
					this);

		} catch (IOException e) {
			e.printStackTrace();
		}
		
		//Create new read thread Runnable
		reader = new ServerReadExample(this);
				
		//Create new readThread
		readThread = new Thread(reader);
		
		//Start thread and do some action
		readThread.start();
	}

	@Override
	public void socketChannelAccepted(ServerSocketChannel aServerSocketChannel, SocketChannel aSocketChannel) {
		nioManager.addReadListener(aSocketChannel, this);

		// save aSocketChannel
		socketList.add(aSocketChannel);
	}

	@Override
	public void socketChannelRead(SocketChannel aSocketChannel, ByteBuffer aMessage, int aLength) {
		ByteBuffer copy = MiscAssignmentUtils.deepDuplicate(aMessage);
		boundedBuffer.add(copy);

		String aMessageString = new String(aMessage.array(), aMessage.position(), aLength);
		System.out.println(aMessageString + "<--" + aSocketChannel);

		currentSocket = aSocketChannel;
		/*
		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		*/
		System.out.println("notifying reader!!");
		reader.notifyThread();
		System.out.println("thread has completed action and is now waiting");

	}
	
	@Override
	public ArrayBlockingQueue<ByteBuffer> getBoundedBuffer(){
		return boundedBuffer;
		
	}
	
	@Override
	public List<SocketChannel> getSocketList(){
		return socketList;
	}
	
	@Override
	public SocketChannel getSocketChannel() {
		return currentSocket;
	}

	@Override
	public void written(SocketChannel socket, ByteBuffer aMessage, int aLength) {
		// TODO Auto-generated method stub
		String aMessageString = new String(aMessage.array());
		System.out.println("SERVER SENT MESSAGE TO CLIENT: " + aMessageString + "-->" + socket);
	}

}
]]></snapshot>
  </Command>
  <DocumentChange __id="2527" _type="Insert" date="Tue May 03 20:15:48 EDT 2022" docASTNodeCount="565" docActiveCodeLength="3944" docExpressionCount="393" docLength="4565" length="34" offset="1594" starttimestamp="1651619386199" timestamp="3962420">
    <text><![CDATA[	SocketChannel getSocketChannel();]]></text>
  </DocumentChange>
  <DocumentChange __id="2529" _type="Delete" date="Tue May 03 20:15:49 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3910" docExpressionCount="391" docLength="4531" endLine="37" length="34" offset="1594" startLine="37" starttimestamp="1651619386199" timestamp="3963236">
    <text><![CDATA[	SocketChannel getSocketChannel();]]></text>
  </DocumentChange>
  <DocumentChange __id="2531" _type="Insert" date="Tue May 03 20:15:51 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3937" docExpressionCount="391" docLength="5228" length="697" offset="1594" starttimestamp="1651619386199" timestamp="3965359">
    <text><![CDATA[	
//	public void findRegistry(int registryPort, String registryHost) throws RemoteException {
//        this.rmiRegistry = LocateRegistry.getRegistry(registryPort);
//        RMIRegistryLocated.newCase(this, registryHost, registryPort, this.rmiRegistry);
//        setBroadcastMetaState(true);
//        setIPCMechanism(ipcMechanism);
//    }

//    @Override
//    public void exportServer(int serverPort) throws RemoteException {
//        UnicastRemoteObject.exportObject(this, serverPort);
//        this.rmiRegistry.rebind(RemoteServerInterface.class.getName(), this);
//        RMIObjectRegistered.newCase(this, RemoteServerInterface.class.getName(), this, rmiRegistry);
//    }]]></text>
  </DocumentChange>
  <DocumentChange __id="2536" _type="Delete" date="Tue May 03 20:15:55 EDT 2022" docASTNodeCount="547" docActiveCodeLength="3815" docExpressionCount="382" docLength="5106" endLine="60" length="122" offset="2402" startLine="57" starttimestamp="1651619386199" timestamp="3969200">
    <text><![CDATA[void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2540" _type="Insert" date="Tue May 03 20:15:57 EDT 2022" docASTNodeCount="547" docActiveCodeLength="3819" docExpressionCount="382" docLength="5110" length="4" offset="3085" starttimestamp="1651619386199" timestamp="3971533">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2542" _type="Replace" date="Tue May 03 20:15:58 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3944" docExpressionCount="373" docLength="5235" endLine="76" insertionLength="127" int_docASTNodeCount="547" int_docActiveCodeLength="3817" int_docExpressionCount="382" int_docLength="5108" length="2" offset="3087" startLine="76" starttimestamp="1651619386199" timestamp="3972020">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		void setFactories() {
			AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
		}
		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2548" _type="Replace" date="Tue May 03 20:16:00 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3941" docExpressionCount="373" docLength="5199" endLine="82" insertionLength="1" int_docASTNodeCount="538" int_docActiveCodeLength="3940" int_docExpressionCount="373" int_docLength="5198" length="37" offset="3220" startLine="81" starttimestamp="1651619386199" timestamp="3974394">
    <deletedText><![CDATA[		//Create new read thread Runnable
]]></deletedText>
    <insertedText><![CDATA[\]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2550" _type="Replace" date="Tue May 03 20:16:02 EDT 2022" docASTNodeCount="538" docActiveCodeLength="3944" docExpressionCount="373" docLength="5235" endLine="81" insertionLength="37" int_docASTNodeCount="538" int_docActiveCodeLength="3940" int_docExpressionCount="373" int_docLength="5198" length="1" offset="3220" startLine="81" starttimestamp="1651619386199" timestamp="3976040">
    <deletedText><![CDATA[\]]></deletedText>
    <insertedText><![CDATA[		//Create new read thread Runnable
]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2553" _type="Replace" date="Tue May 03 20:16:02 EDT 2022" docASTNodeCount="547" docActiveCodeLength="3819" docExpressionCount="382" docLength="5110" endLine="79" insertionLength="2" int_docASTNodeCount="547" int_docActiveCodeLength="3817" int_docExpressionCount="382" int_docLength="5108" length="127" offset="3087" startLine="76" starttimestamp="1651619386199" timestamp="3976451">
    <deletedText><![CDATA[		void setFactories() {
			AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
		}
		]]></deletedText>
    <insertedText><![CDATA[		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2555" _type="Delete" date="Tue May 03 20:16:03 EDT 2022" docASTNodeCount="547" docActiveCodeLength="3815" docExpressionCount="382" docLength="5106" endLine="76" length="4" offset="3085" startLine="75" starttimestamp="1651619386199" timestamp="3977252">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2557" _type="Insert" date="Tue May 03 20:16:03 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3937" docExpressionCount="391" docLength="5228" length="122" offset="2402" starttimestamp="1651619386199" timestamp="3977764">
    <text><![CDATA[void setFactories() {
		AcceptCommandFactorySelector.setFactory(new AnAcceptCommandFactory(SelectionKey.OP_READ));
	}
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2568" _type="Delete" date="Tue May 03 20:16:08 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3933" docExpressionCount="391" docLength="5201" endLine="84" length="27" offset="3297" startLine="83" starttimestamp="1651619386199" timestamp="3982036">
    <text><![CDATA[		//Create new readThread
]]></text>
  </DocumentChange>
  <DocumentChange __id="2573" _type="Delete" date="Tue May 03 20:16:09 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3929" docExpressionCount="391" docLength="5164" endLine="81" length="37" offset="3213" startLine="80" starttimestamp="1651619386199" timestamp="3983023">
    <text><![CDATA[		//Create new read thread Runnable
]]></text>
  </DocumentChange>
  <DocumentChange __id="2578" _type="Delete" date="Tue May 03 20:16:10 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3925" docExpressionCount="391" docLength="5127" endLine="85" length="37" offset="3300" startLine="84" starttimestamp="1651619386199" timestamp="3984265">
    <text><![CDATA[		//Start thread and do some action
]]></text>
  </DocumentChange>
  <DocumentChange __id="2583" _type="Delete" date="Tue May 03 20:16:11 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3921" docExpressionCount="391" docLength="5101" endLine="92" length="26" offset="3506" startLine="91" starttimestamp="1651619386199" timestamp="3985216">
    <text><![CDATA[		// save aSocketChannel
]]></text>
  </DocumentChange>
  <DocumentChange __id="2590" _type="Delete" date="Tue May 03 20:16:20 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3921" docExpressionCount="391" docLength="4668" endLine="117" length="433" offset="3943" startLine="103" starttimestamp="1651619386199" timestamp="3994011">
    <text><![CDATA[/*
		// Pop value off the bounded buffer
		ByteBuffer originalMessage = null;
		try {
			originalMessage = boundedBuffer.take();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		// Echo recieve message to all clients (except original message sender)
		for (SocketChannel socket : socketList) {
			if (!socket.equals(aSocketChannel)) {
				nioManager.write(socket, originalMessage, this);
			}
		}
		*/]]></text>
  </DocumentChange>
  <DocumentChange __id="2593" _type="Replace" date="Tue May 03 20:16:23 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3947" docExpressionCount="391" docLength="5376" endLine="103" insertionLength="710" int_docASTNodeCount="561" int_docActiveCodeLength="3919" int_docExpressionCount="391" int_docLength="4666" length="2" offset="3941" startLine="103" starttimestamp="1651619386199" timestamp="3997173">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		
//		public void findRegistry(int registryPort, String registryHost) throws RemoteException {
//	        this.rmiRegistry = LocateRegistry.getRegistry(registryPort);
//	        RMIRegistryLocated.newCase(this, registryHost, registryPort, this.rmiRegistry);
//	        setBroadcastMetaState(true);
//	        setIPCMechanism(ipcMechanism);
//	    }

//	    @Override
//	    public void exportServer(int serverPort) throws RemoteException {
//	        UnicastRemoteObject.exportObject(this, serverPort);
//	        this.rmiRegistry.rebind(RemoteServerInterface.class.getName(), this);
//	        RMIObjectRegistered.newCase(this, RemoteServerInterface.class.getName(), this, rmiRegistry);
//	    }]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2612" _type="Replace" date="Tue May 03 20:16:32 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3930" docExpressionCount="391" docLength="5359" endLine="117" insertionLength="1" int_docASTNodeCount="561" int_docActiveCodeLength="3929" int_docExpressionCount="391" int_docLength="5358" length="18" offset="4675" startLine="117" starttimestamp="1651619386199" timestamp="4006341">
    <deletedText><![CDATA[notifying reader!!]]></deletedText>
    <insertedText><![CDATA[i]]></insertedText>
  </DocumentChange>
  <Command __id="2611" _type="PauseCommand" date="Tue May 03 20:16:31 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4005564">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1761]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2610" _type="SelectTextCommand" caretOffset="3540" date="Tue May 03 20:16:31 EDT 2022" end="3540" start="3522" starttimestamp="1651619386199" timestamp="4005564" />
  <Command __id="2613" _type="InsertStringCommand" date="Tue May 03 20:16:32 EDT 2022" starttimestamp="1651619386199" timestamp="4006349" timestamp2="4006349">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2615" _type="InsertStringCommand" date="Tue May 03 20:16:32 EDT 2022" starttimestamp="1651619386199" timestamp="4006407" timestamp2="4006407">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2617" _type="InsertStringCommand" date="Tue May 03 20:16:32 EDT 2022" starttimestamp="1651619386199" timestamp="4006532" timestamp2="4006532">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2619" _type="InsertStringCommand" date="Tue May 03 20:16:33 EDT 2022" starttimestamp="1651619386199" timestamp="4006906" timestamp2="4006906">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="2621" _type="InsertStringCommand" date="Tue May 03 20:16:33 EDT 2022" starttimestamp="1651619386199" timestamp="4007026" timestamp2="4007026">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2623" _type="InsertStringCommand" date="Tue May 03 20:16:33 EDT 2022" starttimestamp="1651619386199" timestamp="4007116" timestamp2="4007116">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2625" _type="InsertStringCommand" date="Tue May 03 20:16:33 EDT 2022" starttimestamp="1651619386199" timestamp="4007286" timestamp2="4007286">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2627" _type="InsertStringCommand" date="Tue May 03 20:16:33 EDT 2022" starttimestamp="1651619386199" timestamp="4007447" timestamp2="4007447">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2629" _type="InsertStringCommand" date="Tue May 03 20:16:34 EDT 2022" starttimestamp="1651619386199" timestamp="4008339" timestamp2="4008339">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="2631" _type="InsertStringCommand" date="Tue May 03 20:16:34 EDT 2022" starttimestamp="1651619386199" timestamp="4008530" timestamp2="4008530">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2633" _type="InsertStringCommand" date="Tue May 03 20:16:34 EDT 2022" starttimestamp="1651619386199" timestamp="4008668" timestamp2="4008668">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2635" _type="InsertStringCommand" date="Tue May 03 20:16:34 EDT 2022" starttimestamp="1651619386199" timestamp="4008789" timestamp2="4008789">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2637" _type="InsertStringCommand" date="Tue May 03 20:16:35 EDT 2022" starttimestamp="1651619386199" timestamp="4008886" timestamp2="4008886">
    <data><![CDATA[g]]></data>
  </Command>
  <Command __id="2640" _type="PauseCommand" date="Tue May 03 20:16:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4009897">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1011]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2639" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4009897" timestamp2="4009897">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2642" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010398" timestamp2="4010398">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2644" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010427" timestamp2="4010427">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2646" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010457" timestamp2="4010457">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2648" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010488" timestamp2="4010488">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2650" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010519" timestamp2="4010519">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2652" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010548" timestamp2="4010548">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2654" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010578" timestamp2="4010578">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2656" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010609" timestamp2="4010609">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2658" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010651" timestamp2="4010651">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2660" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010668" timestamp2="4010668">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2662" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010698" timestamp2="4010698">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2664" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010728" timestamp2="4010728">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2666" _type="InsertStringCommand" date="Tue May 03 20:16:36 EDT 2022" starttimestamp="1651619386199" timestamp="4010758" timestamp2="4010758">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2668" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4010802" timestamp2="4010802">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2670" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4010825" timestamp2="4010825">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2672" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4010855" timestamp2="4010855">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2674" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4010885" timestamp2="4010885">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2676" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4010915" timestamp2="4010915">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2678" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4010945" timestamp2="4010945">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2680" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4010975" timestamp2="4010975">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2682" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4011005" timestamp2="4011005">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2684" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4011034" timestamp2="4011034">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2686" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4011065" timestamp2="4011065">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2688" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4011096" timestamp2="4011096">
    <data><![CDATA[%]]></data>
  </Command>
  <Command __id="2690" _type="InsertStringCommand" date="Tue May 03 20:16:37 EDT 2022" starttimestamp="1651619386199" timestamp="4011156" timestamp2="4011156">
    <data><![CDATA[%]]></data>
  </Command>
  <DocumentChange __id="2614" _type="Insert" date="Tue May 03 20:16:32 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3968" docExpressionCount="391" docLength="5397" length="38" offset="4676" repeat="38" starttimestamp="1651619386199" timestamp="4006402" timestamp2="4011153">
    <text><![CDATA[s here wrong%%%%%%%%%%%%%%%%%%%%%%%%%%]]></text>
  </DocumentChange>
  <DocumentChange __id="2693" _type="Replace" date="Tue May 03 20:16:41 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3923" docExpressionCount="391" docLength="5352" endLine="119" insertionLength="1" int_docASTNodeCount="561" int_docActiveCodeLength="3922" int_docExpressionCount="391" int_docLength="5351" length="46" offset="4767" startLine="119" starttimestamp="1651619386199" timestamp="4014921">
    <deletedText><![CDATA[thread has completed action and is now waiting]]></deletedText>
    <insertedText><![CDATA[p]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2695" _type="Insert" date="Tue May 03 20:16:41 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3927" docExpressionCount="391" docLength="5356" length="4" offset="4768" repeat="4" starttimestamp="1651619386199" timestamp="4015031" timestamp2="4015827">
    <text><![CDATA[ased]]></text>
  </DocumentChange>
  <DocumentChange __id="2703" _type="Delete" date="Tue May 03 20:16:42 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3925" docExpressionCount="391" docLength="5354" endLine="119" length="2" offset="4770" repeat="2" startLine="119" starttimestamp="1651619386199" timestamp="4016229" timestamp2="4016359">
    <text><![CDATA[ed]]></text>
  </DocumentChange>
  <Command __id="2692" _type="PauseCommand" date="Tue May 03 20:16:40 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4014370">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[3214]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2691" _type="SelectTextCommand" caretOffset="3660" date="Tue May 03 20:16:40 EDT 2022" end="3660" start="3614" starttimestamp="1651619386199" timestamp="4014370" />
  <Command __id="2694" _type="InsertStringCommand" date="Tue May 03 20:16:41 EDT 2022" starttimestamp="1651619386199" timestamp="4014928" timestamp2="4014928">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2696" _type="InsertStringCommand" date="Tue May 03 20:16:41 EDT 2022" starttimestamp="1651619386199" timestamp="4015035" timestamp2="4015035">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2698" _type="InsertStringCommand" date="Tue May 03 20:16:41 EDT 2022" starttimestamp="1651619386199" timestamp="4015363" timestamp2="4015363">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2700" _type="InsertStringCommand" date="Tue May 03 20:16:41 EDT 2022" starttimestamp="1651619386199" timestamp="4015757" timestamp2="4015757">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2702" _type="InsertStringCommand" date="Tue May 03 20:16:42 EDT 2022" starttimestamp="1651619386199" timestamp="4015831" timestamp2="4015831">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2704" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:42 EDT 2022" starttimestamp="1651619386199" timestamp="4016231" />
  <Command __id="2706" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:42 EDT 2022" starttimestamp="1651619386199" timestamp="4016361" />
  <Command __id="2708" _type="InsertStringCommand" date="Tue May 03 20:16:42 EDT 2022" starttimestamp="1651619386199" timestamp="4016504" timestamp2="4016504">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2710" _type="InsertStringCommand" date="Tue May 03 20:16:42 EDT 2022" starttimestamp="1651619386199" timestamp="4016744" timestamp2="4016744">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2712" _type="InsertStringCommand" date="Tue May 03 20:16:43 EDT 2022" starttimestamp="1651619386199" timestamp="4016804" timestamp2="4016804">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2715" _type="PauseCommand" date="Tue May 03 20:16:44 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4018048">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[1244]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[InsertStringCommand]]></next>
  </Command>
  <Command __id="2714" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018048" timestamp2="4018048">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2717" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018554" timestamp2="4018554">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2719" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018584" timestamp2="4018584">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2721" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018615" timestamp2="4018615">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2723" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018644" timestamp2="4018644">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2725" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018675" timestamp2="4018675">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2727" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018704" timestamp2="4018704">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2729" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018734" timestamp2="4018734">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2731" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018764" timestamp2="4018764">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2733" _type="InsertStringCommand" date="Tue May 03 20:16:44 EDT 2022" starttimestamp="1651619386199" timestamp="4018795" timestamp2="4018795">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2735" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4018825" timestamp2="4018825">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2737" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4018855" timestamp2="4018855">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2739" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4018902" timestamp2="4018902">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2741" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4018914" timestamp2="4018914">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2743" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4018945" timestamp2="4018945">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2745" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4018975" timestamp2="4018975">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2747" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019005" timestamp2="4019005">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2749" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019043" timestamp2="4019043">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2751" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019064" timestamp2="4019064">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2753" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019095" timestamp2="4019095">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2755" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019125" timestamp2="4019125">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2757" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019155" timestamp2="4019155">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2759" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019186" timestamp2="4019186">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2761" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019215" timestamp2="4019215">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2763" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019245" timestamp2="4019245">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2765" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019276" timestamp2="4019276">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2767" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019306" timestamp2="4019306">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2769" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019335" timestamp2="4019335">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2771" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019366" timestamp2="4019366">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2773" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019395" timestamp2="4019395">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2775" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019427" timestamp2="4019427">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2777" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019466" timestamp2="4019466">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2779" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019497" timestamp2="4019497">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2781" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019526" timestamp2="4019526">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2783" _type="InsertStringCommand" date="Tue May 03 20:16:45 EDT 2022" starttimestamp="1651619386199" timestamp="4019576" timestamp2="4019576">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2785" _type="PauseCommand" date="Tue May 03 20:16:48 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4022226">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[InsertStringCommand]]></prev>
    <pause><![CDATA[2650]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="2784" _type="SelectTextCommand" caretOffset="3864" date="Tue May 03 20:16:48 EDT 2022" end="3947" start="3864" starttimestamp="1651619386199" timestamp="4022226" />
  <Command __id="2787" _type="CutCommand" date="Tue May 03 20:16:48 EDT 2022" starttimestamp="1651619386199" timestamp="4022769" />
  <Command __id="2788" _type="MoveCaretCommand" caretOffset="4151" date="Tue May 03 20:16:49 EDT 2022" docOffset="5304" starttimestamp="1651619386199" timestamp="4023730" />
  <Command __id="2790" _type="InsertStringCommand" date="Tue May 03 20:16:50 EDT 2022" starttimestamp="1651619386199" timestamp="4024359" timestamp2="4024359">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2792" _type="PasteCommand" date="Tue May 03 20:16:50 EDT 2022" starttimestamp="1651619386199" timestamp="4024690" />
  <Command __id="2794" _type="PauseCommand" date="Tue May 03 20:16:51 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4025790">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[PasteCommand]]></prev>
    <pause><![CDATA[1100]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2793" _type="MoveCaretCommand" caretOffset="3981" date="Tue May 03 20:16:51 EDT 2022" docOffset="5134" starttimestamp="1651619386199" timestamp="4025790" />
  <Command __id="2795" _type="SelectTextCommand" caretOffset="3984" date="Tue May 03 20:16:52 EDT 2022" end="3984" start="3975" starttimestamp="1651619386199" timestamp="4025936" />
  <Command __id="2796" _type="SelectTextCommand" caretOffset="3998" date="Tue May 03 20:16:52 EDT 2022" end="3998" start="3960" starttimestamp="1651619386199" timestamp="4026061" />
  <Command __id="2798" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:16:52 EDT 2022" starttimestamp="1651619386199" timestamp="4026784" />
  <Command __id="2800" _type="PauseCommand" date="Tue May 03 20:16:59 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="4033330">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[6546]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2799" _type="ShellCommand" date="Tue May 03 20:16:59 EDT 2022" starttimestamp="1651619386199" timestamp="4033330" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2801" _type="ShellCommand" date="Tue May 03 20:16:59 EDT 2022" starttimestamp="1651619386199" timestamp="4033450" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2803" _type="PauseCommand" date="Tue May 03 20:17:02 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4035830">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[2380]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2802" _type="ShellCommand" date="Tue May 03 20:17:02 EDT 2022" starttimestamp="1651619386199" timestamp="4035830" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2804" _type="ShellCommand" date="Tue May 03 20:17:02 EDT 2022" starttimestamp="1651619386199" timestamp="4035920" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2808" _type="PauseCommand" date="Tue May 03 20:17:03 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4037050">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1110]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2807" _type="ShellCommand" date="Tue May 03 20:17:03 EDT 2022" starttimestamp="1651619386199" timestamp="4037050" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2809" _type="ShellCommand" date="Tue May 03 20:17:03 EDT 2022" starttimestamp="1651619386199" timestamp="4037127" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2813" _type="PauseCommand" date="Tue May 03 20:17:04 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4038620">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1475]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2812" _type="ShellCommand" date="Tue May 03 20:17:04 EDT 2022" starttimestamp="1651619386199" timestamp="4038620" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2814" _type="ShellCommand" date="Tue May 03 20:17:04 EDT 2022" starttimestamp="1651619386199" timestamp="4038726" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2818" _type="PauseCommand" date="Tue May 03 20:17:06 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4039993">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1250]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2817" _type="ShellCommand" date="Tue May 03 20:17:06 EDT 2022" starttimestamp="1651619386199" timestamp="4039993" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2819" _type="ShellCommand" date="Tue May 03 20:17:06 EDT 2022" starttimestamp="1651619386199" timestamp="4040079" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2823" _type="PauseCommand" date="Tue May 03 20:17:07 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4041229">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1132]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2822" _type="ShellCommand" date="Tue May 03 20:17:07 EDT 2022" starttimestamp="1651619386199" timestamp="4041229" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2824" _type="ShellCommand" date="Tue May 03 20:17:07 EDT 2022" starttimestamp="1651619386199" timestamp="4041340" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2826" _type="PauseCommand" date="Tue May 03 20:17:08 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4042440">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1100]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2825" _type="ShellCommand" date="Tue May 03 20:17:08 EDT 2022" starttimestamp="1651619386199" timestamp="4042440" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2827" _type="ShellCommand" date="Tue May 03 20:17:08 EDT 2022" starttimestamp="1651619386199" timestamp="4042551" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2828" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:17:09 EDT 2022" starttimestamp="1651619386199" timestamp="4043001" />
  <Command __id="2829" _type="EclipseCommand" commandID="" date="Tue May 03 20:17:09 EDT 2022" starttimestamp="1651619386199" timestamp="4043079" />
  <Command __id="2830" _type="EclipseCommand" commandID="" date="Tue May 03 20:17:09 EDT 2022" starttimestamp="1651619386199" timestamp="4043095" />
  <Command __id="2832" _type="PauseCommand" date="Tue May 03 20:17:10 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4044586">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1491]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2831" _type="ShellCommand" date="Tue May 03 20:17:10 EDT 2022" starttimestamp="1651619386199" timestamp="4044586" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2833" _type="ShellCommand" date="Tue May 03 20:17:10 EDT 2022" starttimestamp="1651619386199" timestamp="4044676" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2837" _type="PauseCommand" date="Tue May 03 20:17:13 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4047479">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[2785]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2836" _type="ShellCommand" date="Tue May 03 20:17:13 EDT 2022" starttimestamp="1651619386199" timestamp="4047479" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2838" _type="ShellCommand" date="Tue May 03 20:17:13 EDT 2022" starttimestamp="1651619386199" timestamp="4047586" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2842" _type="PauseCommand" date="Tue May 03 20:17:14 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4048706">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1101]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2841" _type="ShellCommand" date="Tue May 03 20:17:14 EDT 2022" starttimestamp="1651619386199" timestamp="4048706" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2843" _type="ShellCommand" date="Tue May 03 20:17:14 EDT 2022" starttimestamp="1651619386199" timestamp="4048799" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2847" _type="PauseCommand" date="Tue May 03 20:17:16 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4050016">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1198]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2846" _type="ShellCommand" date="Tue May 03 20:17:16 EDT 2022" starttimestamp="1651619386199" timestamp="4050016" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2848" _type="ShellCommand" date="Tue May 03 20:17:16 EDT 2022" starttimestamp="1651619386199" timestamp="4050142" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2852" _type="PauseCommand" date="Tue May 03 20:17:17 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4051329">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[Insert]]></prev>
    <pause><![CDATA[1172]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2851" _type="ShellCommand" date="Tue May 03 20:17:17 EDT 2022" starttimestamp="1651619386199" timestamp="4051329" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2853" _type="ShellCommand" date="Tue May 03 20:17:17 EDT 2022" starttimestamp="1651619386199" timestamp="4051433" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2854" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:17:18 EDT 2022" starttimestamp="1651619386199" timestamp="4052310" />
  <Command __id="2855" _type="EclipseCommand" commandID="" date="Tue May 03 20:17:18 EDT 2022" starttimestamp="1651619386199" timestamp="4052394" />
  <Command __id="2856" _type="EclipseCommand" commandID="" date="Tue May 03 20:17:18 EDT 2022" starttimestamp="1651619386199" timestamp="4052410" />
  <Command __id="2858" _type="PauseCommand" date="Tue May 03 20:17:20 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4054668">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2258]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2857" _type="ShellCommand" date="Tue May 03 20:17:20 EDT 2022" starttimestamp="1651619386199" timestamp="4054668" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2859" _type="ShellCommand" date="Tue May 03 20:17:20 EDT 2022" starttimestamp="1651619386199" timestamp="4054749" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2867" _type="PauseCommand" date="Tue May 03 20:17:59 EDT 2022" range="30s-1m" starttimestamp="1651619386199" timestamp="4093216">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[37078]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[CopyCommand]]></next>
  </Command>
  <Command __id="2866" _type="CopyCommand" date="Tue May 03 20:17:59 EDT 2022" starttimestamp="1651619386199" timestamp="4093216" />
  <Command __id="2869" _type="PauseCommand" date="Tue May 03 20:18:03 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4097311">
    <prevType><![CDATA[Edit]]></prevType>
    <prev><![CDATA[CopyCommand]]></prev>
    <pause><![CDATA[4095]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[PasteCommand]]></next>
  </Command>
  <Command __id="2868" _type="PasteCommand" date="Tue May 03 20:18:03 EDT 2022" starttimestamp="1651619386199" timestamp="4097311" />
  <Command __id="2870" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:03 EDT 2022" starttimestamp="1651619386199" timestamp="4097398" />
  <Command __id="2871" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:03 EDT 2022" starttimestamp="1651619386199" timestamp="4097428" />
  <Command __id="2873" _type="PauseCommand" date="Tue May 03 20:18:05 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4099477">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2049]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2874" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:18:06 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4099864" />
  <Command __id="2878" _type="PauseCommand" date="Tue May 03 20:18:26 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4120701">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1456]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2877" _type="ShellCommand" date="Tue May 03 20:18:26 EDT 2022" starttimestamp="1651619386199" timestamp="4120701" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2879" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:26 EDT 2022" starttimestamp="1651619386199" timestamp="4120717" />
  <Command __id="2880" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue May 03 20:18:26 EDT 2022" starttimestamp="1651619386199" timestamp="4120718" />
  <Command __id="2881" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:26 EDT 2022" starttimestamp="1651619386199" timestamp="4120723" />
  <Command __id="2885" _type="PauseCommand" date="Tue May 03 20:18:30 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4124319">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1205]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2884" _type="ShellCommand" date="Tue May 03 20:18:30 EDT 2022" starttimestamp="1651619386199" timestamp="4124319" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2886" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:30 EDT 2022" starttimestamp="1651619386199" timestamp="4124333" />
  <Command __id="2887" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:30 EDT 2022" starttimestamp="1651619386199" timestamp="4124338" />
  <Command __id="2889" _type="PauseCommand" date="Tue May 03 20:18:41 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="4135041">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[10703]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2888" _type="ShellCommand" date="Tue May 03 20:18:41 EDT 2022" starttimestamp="1651619386199" timestamp="4135041" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2891" _type="PauseCommand" date="Tue May 03 20:18:42 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4136523">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1482]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2890" _type="ShellCommand" date="Tue May 03 20:18:42 EDT 2022" starttimestamp="1651619386199" timestamp="4136523" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2892" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:43 EDT 2022" starttimestamp="1651619386199" timestamp="4136884" />
  <Command __id="2893" _type="EclipseCommand" commandID="" date="Tue May 03 20:18:43 EDT 2022" starttimestamp="1651619386199" timestamp="4136924" />
  <Command __id="2918" _type="PauseCommand" date="Tue May 03 20:19:14 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4168539">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1439]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2917" _type="MoveCaretCommand" caretOffset="3200" date="Tue May 03 20:19:14 EDT 2022" docOffset="4527" starttimestamp="1651619386199" timestamp="4168539" />
  <Command __id="2925" _type="PauseCommand" date="Tue May 03 20:19:26 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="4180406">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[9167]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2924" _type="EclipseCommand" commandID="" date="Tue May 03 20:19:26 EDT 2022" starttimestamp="1651619386199" timestamp="4180406" />
  <Command __id="2926" _type="EclipseCommand" commandID="" date="Tue May 03 20:19:26 EDT 2022" starttimestamp="1651619386199" timestamp="4180459" />
  <Command __id="2928" _type="PauseCommand" date="Tue May 03 20:19:30 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4184612">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[4153]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2929" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:19:31 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4184802" />
  <Command __id="2931" _type="PauseCommand" date="Tue May 03 20:19:32 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4186009">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1207]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2932" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:19:32 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4186381" />
  <Command __id="2936" _type="PauseCommand" date="Tue May 03 20:19:48 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4202444">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1644]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="2935" _type="ShellCommand" date="Tue May 03 20:19:48 EDT 2022" starttimestamp="1651619386199" timestamp="4202444" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2937" _type="EclipseCommand" commandID="" date="Tue May 03 20:19:48 EDT 2022" starttimestamp="1651619386199" timestamp="4202459" />
  <Command __id="2938" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue May 03 20:19:48 EDT 2022" starttimestamp="1651619386199" timestamp="4202459" />
  <Command __id="2939" _type="EclipseCommand" commandID="" date="Tue May 03 20:19:48 EDT 2022" starttimestamp="1651619386199" timestamp="4202474" />
  <Command __id="2947" _type="PauseCommand" date="Tue May 03 20:20:06 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="4220425">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[11801]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[EclipseCommand]]></next>
  </Command>
  <Command __id="2946" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:06 EDT 2022" starttimestamp="1651619386199" timestamp="4220425" />
  <Command __id="2948" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:06 EDT 2022" starttimestamp="1651619386199" timestamp="4220468" />
  <DocumentChange __id="2707" _type="Insert" date="Tue May 03 20:16:42 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3963" docExpressionCount="391" docLength="5392" length="38" offset="4770" repeat="38" starttimestamp="1651619386199" timestamp="4016500" timestamp2="4019572">
    <text><![CDATA[sed)))))))))))))))))))))))))))))))))))]]></text>
  </DocumentChange>
  <DocumentChange __id="2786" _type="Delete" date="Tue May 03 20:16:48 EDT 2022" docASTNodeCount="551" docActiveCodeLength="3880" docExpressionCount="386" docLength="5309" endLine="137" length="83" offset="5017" startLine="134" starttimestamp="1651619386199" timestamp="4022755">
    <text><![CDATA[	@Override
	public SocketChannel getSocketChannel() {
		return currentSocket;
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="2789" _type="Insert" date="Tue May 03 20:16:50 EDT 2022" docASTNodeCount="551" docActiveCodeLength="3883" docExpressionCount="386" docLength="5312" length="3" offset="5304" starttimestamp="1651619386199" timestamp="4024354">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <DocumentChange __id="2791" _type="Replace" date="Tue May 03 20:16:50 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3965" docExpressionCount="391" docLength="5394" endLine="143" insertionLength="83" int_docASTNodeCount="551" int_docActiveCodeLength="3882" int_docExpressionCount="386" int_docLength="5311" length="1" offset="5306" startLine="143" starttimestamp="1651619386199" timestamp="4024678">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@Override
	public SocketChannel getSocketChannel() {
		return currentSocket;
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2797" _type="Delete" date="Tue May 03 20:16:52 EDT 2022" docASTNodeCount="561" docActiveCodeLength="3961" docExpressionCount="391" docLength="5356" endLine="139" length="38" offset="5113" startLine="138" starttimestamp="1651619386199" timestamp="4026779">
    <text><![CDATA[		// TODO Auto-generated method stub
]]></text>
  </DocumentChange>
  <DocumentChange __id="2805" _type="Insert" date="Tue May 03 20:17:02 EDT 2022" docASTNodeCount="562" docActiveCodeLength="3967" docExpressionCount="391" docLength="5362" length="6" offset="3590" repeat="2" starttimestamp="1651619386199" timestamp="4035940" timestamp2="4035944">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2810" _type="Insert" date="Tue May 03 20:17:03 EDT 2022" docASTNodeCount="563" docActiveCodeLength="3973" docExpressionCount="391" docLength="5368" length="6" offset="3626" repeat="2" starttimestamp="1651619386199" timestamp="4037145" timestamp2="4037149">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2815" _type="Insert" date="Tue May 03 20:17:04 EDT 2022" docASTNodeCount="564" docActiveCodeLength="3979" docExpressionCount="391" docLength="5374" length="6" offset="3653" repeat="2" starttimestamp="1651619386199" timestamp="4038743" timestamp2="4038755">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2820" _type="Insert" date="Tue May 03 20:17:06 EDT 2022" docASTNodeCount="565" docActiveCodeLength="3985" docExpressionCount="391" docLength="5380" length="6" offset="3773" repeat="2" starttimestamp="1651619386199" timestamp="4040097" timestamp2="4040100">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2834" _type="Insert" date="Tue May 03 20:17:10 EDT 2022" docASTNodeCount="566" docActiveCodeLength="3991" docExpressionCount="391" docLength="5386" length="6" offset="3677" repeat="2" starttimestamp="1651619386199" timestamp="4044694" timestamp2="4044697">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2839" _type="Insert" date="Tue May 03 20:17:13 EDT 2022" docASTNodeCount="567" docActiveCodeLength="3997" docExpressionCount="391" docLength="5392" length="6" offset="2641" repeat="2" starttimestamp="1651619386199" timestamp="4047605" timestamp2="4047608">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2844" _type="Insert" date="Tue May 03 20:17:15 EDT 2022" docASTNodeCount="568" docActiveCodeLength="4003" docExpressionCount="391" docLength="5398" length="6" offset="2679" repeat="2" starttimestamp="1651619386199" timestamp="4048818" timestamp2="4048821">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2849" _type="Insert" date="Tue May 03 20:17:16 EDT 2022" docASTNodeCount="569" docActiveCodeLength="4009" docExpressionCount="391" docLength="5404" length="6" offset="2761" repeat="2" starttimestamp="1651619386199" timestamp="4050157" timestamp2="4050160">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <DocumentChange __id="2860" _type="Insert" date="Tue May 03 20:17:20 EDT 2022" docASTNodeCount="570" docActiveCodeLength="4015" docExpressionCount="391" docLength="5410" length="6" offset="2311" repeat="2" starttimestamp="1651619386199" timestamp="4054770" timestamp2="4054773">
    <text><![CDATA[final ]]></text>
  </DocumentChange>
  <Command __id="2872" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:18:05 EDT 2022" docASTNodeCount="740" docActiveCodeLength="5310" docExpressionCount="520" docLength="5507" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4099477">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\RMIAndGIPCClient.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package client;

import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;

import assignments.util.mainArgs.ClientArgsProcessor;
import comp533.server.GIPCServer;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import util.annotations.Tags;
import util.interactiveMethodInvocation.IPCMechanism;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.port.PerformanceExperimentEnded;
import util.trace.port.PerformanceExperimentStarted;
import util.trace.port.consensus.RemoteProposeRequestSent;
import util.trace.port.consensus.communication.CommunicationStateNames;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryLocated;

@SuppressWarnings("serial")
@Tags({DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC})
public class RMIAndGIPCClient extends RMIClient implements GIPCClient{

	private static int number = 0;
    private GIPCRegistry registry;
    protected GIPCServer proxyServer;
    
    public static final String tryCommand = "move 1 -1";
    protected int commands = 500;
    
    private static ClientInterface thisClient = new RMIAndGIPCClient();
    
    @Override
    public void start(String[] arguments) {
        this.init(arguments);
        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
        SimulationParametersControllerFactory.getSingleton().processCommands();
    }

    public static void main(String[] arguments) {
        ClientInterface thisClient = new RMIAndGIPCClient();
        thisClient.start(arguments);
    }
    

    @Override
    public void setTracing() {
        super.setTracing();
        BeanTraceUtility.setTracing();
        GIPCRPCTraceUtility.setTracing();
    }

    public RMIAndGIPCClient() {
        number++;
    }
    public static ClientInterface getSingleton() {
        return thisClient;
    }
    @Override
    protected void init(final String[] arguments) {
        this.setTracing();
        super.init(arguments);
        
        String hostName = ClientArgsProcessor.getServerHost(arguments);
        final int port = ClientArgsProcessor.getGIPCPort(arguments);
        
        this.locateGIPCRegistry(port, hostName);
        this.lookupGIPCServerProxy();

		try {
			this.exportGIPCClientProxy();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        System.out.println("should be registered");
        System.out.println(this.proxyServer);
//        System.out.println(thisClient.getClass());
//        System.out.println(thisClient.getClass().getName());
        System.out.println(this);
        this.proxyServer.registerGIPCClients();
    }
    
    protected void exportGIPCClientProxy() throws RemoteException {
//    	UnicastRemoteObject.exportObject(this, 0);
        this.registry.rebind(RMIAndGIPCClient.class.getName(), this);
        GIPCObjectRegistered.newCase(this, RMIAndGIPCClient.class.getName(), this, this.registry);

    }


    @Override
    public void ReceiveNotification(final String newCommand, final Object newProposal) {
        this.receiveNotifications(CommunicationStateNames.COMMAND, newCommand);
    }

    @Override
    public void experimentInput() {
        long start = System.currentTimeMillis();
        PerformanceExperimentStarted.newCase(this, start, commands);
        boolean oldTrace = isTrace();
        this.trace(false);
        for (int i = 0; i < commands; i++) {
            this.simulationCommand(tryCommand);
        }
        this.trace(oldTrace);
        long end = System.currentTimeMillis();
        PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);
        
        
        System.out.println("Printing out the time:");
        System.out.println(end - start);
    }


    protected void sendCommand(final String newCommand) {
        this.thisProcessor.setInputString(newCommand);
        RemoteProposeRequestSent.newCase(this, CommunicationStateNames.IPC_MECHANISM, -1, ipcMechanism);
        this.proxyServer.receiveCommandViaGIPC(newCommand, this);
    }

    @Override
    public void simulationCommand(final String newCommand) {
        if (this.ipcMechanism.equals(IPCMechanism.RMI)) {
            super.simulationCommand(newCommand);
        } else {
            this.sendCommand(newCommand);
        }
    }

    protected void locateGIPCRegistry(final int port, final String hostName) {
        this.registry = GIPCLocateRegistry.getRegistry(hostName, port, GIPCClient.CLIENT_NAME + number);
        GIPCRegistryLocated.newCase(this, hostName,port, GIPCClient.class.getName());
    }

    protected void lookupGIPCServerProxy() {
    	System.out.println("I am not here");
    	System.out.println(GIPCServer.class);
    	System.out.println(GIPCServer.class.getName());
    	
        this.proxyServer = (GIPCServer) registry.lookup(GIPCServer.class, GIPCServer.class.getName());
        System.out.println("I am here");
        GIPCObjectLookedUp.newCase(this, this.proxyServer, GIPCServer.class, GIPCServer.class.getName(), this.registry);
    }


    
}
]]></snapshot>
  </Command>
  <Command __id="2894" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:18:45 EDT 2022" docASTNodeCount="740" docActiveCodeLength="5310" docExpressionCount="520" docLength="5507" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4138809">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\RMIAndGIPCClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.RemoteException;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import comp533.server.GIPCServer;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC})¶public class RMIAndGIPCClient extends RMIClient implements GIPCClient{¶¶	private static int number = 0;¶    private GIPCRegistry registry;¶    protected GIPCServer proxyServer;¶    ¶    public static final String tryCommand = "move 1 -1";¶    protected int commands = 500;¶    ¶    private static ClientInterface thisClient = new RMIAndGIPCClient();¶    ¶    @Override¶    public void start(String[] arguments) {¶        this.init(arguments);¶        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶        SimulationParametersControllerFactory.getSingleton().processCommands();¶    }¶¶    public static void main(String[] arguments) {¶        ClientInterface thisClient = new RMIAndGIPCClient();¶        thisClient.start(arguments);¶    }¶    ¶¶    @Override¶    public void setTracing() {¶        super.setTracing();¶        BeanTraceUtility.setTracing();¶        GIPCRPCTraceUtility.setTracing();¶    }¶¶    public RMIAndGIPCClient() {¶        number++;¶    }¶    public static ClientInterface getSingleton() {¶        return thisClient;¶    }¶    @Override¶    protected void init(final String[] arguments) {¶        this.setTracing();¶        super.init(arguments);¶        ¶        String hostName = ClientArgsProcessor.getServerHost(arguments);¶        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶        ¶        this.locateGIPCRegistry(port, hostName);¶        this.lookupGIPCServerProxy();¶¶		try {¶			this.exportGIPCClientProxy();¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶        System.out.println("should be registered");¶        System.out.println(this.proxyServer);¶//        System.out.println(thisClient.getClass());¶//        System.out.println(thisClient.getClass().getName());¶        System.out.println(this);¶        this.proxyServer.registerGIPCClients();¶    }¶    ¶    protected void exportGIPCClientProxy() throws RemoteException {¶//    	UnicastRemoteObject.exportObject(this, 0);¶        this.registry.rebind(RMIAndGIPCClient.class.getName(), this);¶        GIPCObjectRegistered.newCase(this, RMIAndGIPCClient.class.getName(), this, this.registry);¶¶    }¶¶¶    @Override¶    public void ReceiveNotification(final String newCommand, final Object newProposal) {¶        this.receiveNotifications(CommunicationStateNames.COMMAND, newCommand);¶    }¶¶    @Override¶    public void experimentInput() {¶        long start = System.currentTimeMillis();¶        PerformanceExperimentStarted.newCase(this, start, commands);¶        boolean oldTrace = isTrace();¶        this.trace(false);¶        for (int i = 0; i < commands; i++) {¶            this.simulationCommand(tryCommand);¶        }¶        this.trace(oldTrace);¶        long end = System.currentTimeMillis();¶        PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶        ¶        ¶        System.out.println("Printing out the time:");¶        System.out.println(end - start);¶    }¶¶¶    protected void sendCommand(final String newCommand) {¶        this.thisProcessor.setInputString(newCommand);¶        RemoteProposeRequestSent.newCase(this, CommunicationStateNames.IPC_MECHANISM, -1, ipcMechanism);¶        this.proxyServer.receiveCommandViaGIPC(newCommand, this);¶    }¶¶    @Override¶    public void simulationCommand(final String newCommand) {¶        if (this.ipcMechanism.equals(IPCMechanism.RMI)) {¶            super.simulationCommand(newCommand);¶        } else {¶            this.sendCommand(newCommand);¶        }¶    }¶¶    protected void locateGIPCRegistry(final int port, final String hostName) {¶        this.registry = GIPCLocateRegistry.getRegistry(hostName, port, GIPCClient.CLIENT_NAME + number);¶        GIPCRegistryLocated.newCase(this, hostName,port, GIPCClient.class.getName());¶    }¶¶    protected void lookupGIPCServerProxy() {¶    	System.out.println("I am not here");¶    	System.out.println(GIPCServer.class);¶    	System.out.println(GIPCServer.class.getName());¶    	¶        this.proxyServer = (GIPCServer) registry.lookup(GIPCServer.class, GIPCServer.class.getName());¶        System.out.println("I am here");¶        GIPCObjectLookedUp.newCase(this, this.proxyServer, GIPCServer.class, GIPCServer.class.getName(), this.registry);¶    }¶¶¶    ¶}¶")]]]></diff>
  </Command>
  <Command __id="2897" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:18:57 EDT 2022" docASTNodeCount="748" docActiveCodeLength="5423" docExpressionCount="557" docLength="5680" projectName="533Assignment5" starttimestamp="1651619386199" timestamp="4151082">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\server\RMIAndGIPCServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.server;¶¶import assignments.util.mainArgs.ServerArgsProcessor;¶import comp533.client.GIPCClient;¶import comp533.client.RMIAndGIPCClient;¶import comp533.client.RMIClientInterface;¶//import coupledsims.client.Ov;¶import inputport.ConnectionListener;¶import inputport.InputPort;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶import java.rmi.RemoteException;¶import java.util.ArrayList;¶import java.util.List;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC})¶public class RMIAndGIPCServer extends RMIServer implements GIPCServer{¶¶	private static ServerInterface thisServer = new RMIAndGIPCServer();¶    private List<GIPCClient> clients;¶    private GIPCRegistry registry;¶¶    public RMIAndGIPCServer() {¶        this.clients = new ArrayList<>();¶    }¶¶    public static ServerInterface getSingleton() {¶        return thisServer;¶    }¶¶    @Override¶    public void start(String[] arguments) {¶        this.init(arguments);¶        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶        SimulationParametersControllerFactory.getSingleton().processCommands();¶    }¶¶    public static void main(String[] arguments) {¶        ServerInterface thisServer = getSingleton();¶        thisServer.start(arguments);¶    }¶    ¶    protected void init(final String[] arguments) {¶        this.setTracing();¶        super.init(arguments);¶        final int gipcServerPort = ServerArgsProcessor.getGIPCServerPort(arguments);¶        this.registry = GIPCLocateRegistry.createRegistry(gipcServerPort);¶        GIPCRegistryCreated.newCase(this, gipcServerPort);¶        this.registry.rebind(GIPCServer.class.getName(), this);¶        GIPCObjectRegistered.newCase(this, RMIServerInterface.class.getName(), this, this.registry);¶        final InputPort port = this.registry.getInputPort();¶        final ConnectionListener listener = new ATracingConnectionListener(port);¶        port.addConnectionListener(listener);¶    }¶    ¶    @Override¶    public void setTracing() {¶        FactoryTraceUtility.setTracing();¶        BeanTraceUtility.setTracing();¶        RMITraceUtility.setTracing();¶        ConsensusTraceUtility.setTracing();¶        ThreadDelayed.enablePrint();¶        GIPCRPCTraceUtility.setTracing();¶        NIOTraceUtility.setTracing();¶        super.trace(true);¶    }¶¶    ¶¶¶    protected void receiveRequestViaGIPC(final String newCommand, final GIPCClient thisClient) {¶        try {¶            RemoteProposeRequestReceived.newCase(this, CommunicationStateNames.COMMAND, -1, newCommand);¶        	System.out.println("@@@??????????????????????");¶        	System.out.println(this.clients);¶        	System.out.println("@@@!!!!!!!!!!!!!!!!!!!!!!");¶            for (GIPCClient otherClientProxy : this.clients) {¶            	¶            	System.out.println("?????????????????????????");¶            	System.out.println(otherClientProxy);¶            	System.out.println(thisClient);¶            	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");¶                if (!otherClientProxy.equals(thisClient)) {¶                    ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);¶                    otherClientProxy.NotificationReceiver(CommunicationStateNames.COMMAND, newCommand);¶                }¶            }¶        } catch (RemoteException ex) {¶            ex.printStackTrace();¶        }¶    }¶¶    @Override¶    public void receiveCommandViaGIPC(String newCommand, GIPCClient thisClient) {¶        this.receiveRequestViaGIPC(newCommand, thisClient);¶    }¶¶    @Override¶    public void registerGIPCClients() {¶    	System.out.println("register called");¶    	//final RMIClientInterface clientProxy = (RMIClientInterface) this.rmiRegistry.lookup(RMIClientInterface.class.getName());¶        final GIPCClient clientProxy = (GIPCClient) this.registry.lookup(RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName());¶        GIPCObjectLookedUp.newCase(this, clientProxy, RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName(), this.registry);¶        this.clients.add(clientProxy);¶//        System.out.println(GIPCClient.class);¶//        System.out.println(GIPCClient.class.getName());¶        System.out.println(this.clients);¶        System.out.println(clientProxy);¶        System.out.println(this.registry.getInputPort());¶        System.out.println(this.registry.getRPCClientPort());¶        System.out.println(this.registry.getRPCServerPort());¶    	System.out.println("register finished");¶¶    }¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2900" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:19:06 EDT 2022" docASTNodeCount="53" docActiveCodeLength="356" docExpressionCount="37" docLength="356" projectName="533Assignment5" starttimestamp="1651619386199" timestamp="4160641">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\client\GIPCClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.client;¶¶import java.rmi.RemoteException;¶¶import util.annotations.Tags;¶import util.tags.DistributedTags;¶¶@Tags({DistributedTags.CLIENT_REMOTE_INTERFACE, DistributedTags.GIPC})¶public interface GIPCClient {¶    String CLIENT_NAME="Client ";¶    void ReceiveNotification(String name, Object proposal) throws RemoteException;¶}¶")]]]></diff>
  </Command>
  <Command __id="2907" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:19:10 EDT 2022" docASTNodeCount="748" docActiveCodeLength="5423" docExpressionCount="557" docLength="5680" projectName="533Assignment5" starttimestamp="1651619386199" timestamp="4164681">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\server\RMIAndGIPCServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.server;¶¶import assignments.util.mainArgs.ServerArgsProcessor;¶import comp533.client.GIPCClient;¶import comp533.client.RMIAndGIPCClient;¶import comp533.client.RMIClientInterface;¶//import coupledsims.client.Ov;¶import inputport.ConnectionListener;¶import inputport.InputPort;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶import java.rmi.RemoteException;¶import java.util.ArrayList;¶import java.util.List;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC})¶public class RMIAndGIPCServer extends RMIServer implements GIPCServer{¶¶	private static ServerInterface thisServer = new RMIAndGIPCServer();¶    private List<GIPCClient> clients;¶    private GIPCRegistry registry;¶¶    public RMIAndGIPCServer() {¶        this.clients = new ArrayList<>();¶    }¶¶    public static ServerInterface getSingleton() {¶        return thisServer;¶    }¶¶    @Override¶    public void start(String[] arguments) {¶        this.init(arguments);¶        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶        SimulationParametersControllerFactory.getSingleton().processCommands();¶    }¶¶    public static void main(String[] arguments) {¶        ServerInterface thisServer = getSingleton();¶        thisServer.start(arguments);¶    }¶    ¶    protected void init(final String[] arguments) {¶        this.setTracing();¶        super.init(arguments);¶        final int gipcServerPort = ServerArgsProcessor.getGIPCServerPort(arguments);¶        this.registry = GIPCLocateRegistry.createRegistry(gipcServerPort);¶        GIPCRegistryCreated.newCase(this, gipcServerPort);¶        this.registry.rebind(GIPCServer.class.getName(), this);¶        GIPCObjectRegistered.newCase(this, RMIServerInterface.class.getName(), this, this.registry);¶        final InputPort port = this.registry.getInputPort();¶        final ConnectionListener listener = new ATracingConnectionListener(port);¶        port.addConnectionListener(listener);¶    }¶    ¶    @Override¶    public void setTracing() {¶        FactoryTraceUtility.setTracing();¶        BeanTraceUtility.setTracing();¶        RMITraceUtility.setTracing();¶        ConsensusTraceUtility.setTracing();¶        ThreadDelayed.enablePrint();¶        GIPCRPCTraceUtility.setTracing();¶        NIOTraceUtility.setTracing();¶        super.trace(true);¶    }¶¶    ¶¶¶    protected void receiveRequestViaGIPC(final String newCommand, final GIPCClient thisClient) {¶        try {¶            RemoteProposeRequestReceived.newCase(this, CommunicationStateNames.COMMAND, -1, newCommand);¶        	System.out.println("@@@??????????????????????");¶        	System.out.println(this.clients);¶        	System.out.println("@@@!!!!!!!!!!!!!!!!!!!!!!");¶            for (GIPCClient otherClientProxy : this.clients) {¶            	¶            	System.out.println("?????????????????????????");¶            	System.out.println(otherClientProxy);¶            	System.out.println(thisClient);¶            	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");¶                if (!otherClientProxy.equals(thisClient)) {¶                    ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);¶                    otherClientProxy.NotificationReceiver(CommunicationStateNames.COMMAND, newCommand);¶                }¶            }¶        } catch (RemoteException ex) {¶            ex.printStackTrace();¶        }¶    }¶¶    @Override¶    public void receiveCommandViaGIPC(String newCommand, GIPCClient thisClient) {¶        this.receiveRequestViaGIPC(newCommand, thisClient);¶    }¶¶    @Override¶    public void registerGIPCClients() {¶    	System.out.println("register called");¶    	//final RMIClientInterface clientProxy = (RMIClientInterface) this.rmiRegistry.lookup(RMIClientInterface.class.getName());¶        final GIPCClient clientProxy = (GIPCClient) this.registry.lookup(RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName());¶        GIPCObjectLookedUp.newCase(this, clientProxy, RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName(), this.registry);¶        this.clients.add(clientProxy);¶//        System.out.println(GIPCClient.class);¶//        System.out.println(GIPCClient.class.getName());¶        System.out.println(this.clients);¶        System.out.println(clientProxy);¶        System.out.println(this.registry.getInputPort());¶        System.out.println(this.registry.getRPCClientPort());¶        System.out.println(this.registry.getRPCServerPort());¶    	System.out.println("register finished");¶¶    }¶¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="2912" _type="Replace" date="Tue May 03 20:19:12 EDT 2022" docASTNodeCount="748" docActiveCodeLength="5422" docExpressionCount="557" docLength="5679" endLine="104" insertionLength="19" int_docASTNodeCount="746" int_docActiveCodeLength="5403" int_docExpressionCount="555" int_docLength="5660" length="20" offset="4342" startLine="104" starttimestamp="1651619386199" timestamp="4165935">
    <deletedText><![CDATA[NotificationReceiver]]></deletedText>
    <insertedText><![CDATA[ReceiveNotification]]></insertedText>
  </DocumentChange>
  <Command __id="2919" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:19:16 EDT 2022" docASTNodeCount="740" docActiveCodeLength="5310" docExpressionCount="520" docLength="5507" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4170375">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\RMIAndGIPCClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.RemoteException;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import comp533.server.GIPCServer;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC})¶public class RMIAndGIPCClient extends RMIClient implements GIPCClient{¶¶	private static int number = 0;¶    private GIPCRegistry registry;¶    protected GIPCServer proxyServer;¶    ¶    public static final String tryCommand = "move 1 -1";¶    protected int commands = 500;¶    ¶    private static ClientInterface thisClient = new RMIAndGIPCClient();¶    ¶    @Override¶    public void start(String[] arguments) {¶        this.init(arguments);¶        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶        SimulationParametersControllerFactory.getSingleton().processCommands();¶    }¶¶    public static void main(String[] arguments) {¶        ClientInterface thisClient = new RMIAndGIPCClient();¶        thisClient.start(arguments);¶    }¶    ¶¶    @Override¶    public void setTracing() {¶        super.setTracing();¶        BeanTraceUtility.setTracing();¶        GIPCRPCTraceUtility.setTracing();¶    }¶¶    public RMIAndGIPCClient() {¶        number++;¶    }¶    public static ClientInterface getSingleton() {¶        return thisClient;¶    }¶    @Override¶    protected void init(final String[] arguments) {¶        this.setTracing();¶        super.init(arguments);¶        ¶        String hostName = ClientArgsProcessor.getServerHost(arguments);¶        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶        ¶        this.locateGIPCRegistry(port, hostName);¶        this.lookupGIPCServerProxy();¶¶		try {¶			this.exportGIPCClientProxy();¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶        System.out.println("should be registered");¶        System.out.println(this.proxyServer);¶//        System.out.println(thisClient.getClass());¶//        System.out.println(thisClient.getClass().getName());¶        System.out.println(this);¶        this.proxyServer.registerGIPCClients();¶    }¶    ¶    protected void exportGIPCClientProxy() throws RemoteException {¶//    	UnicastRemoteObject.exportObject(this, 0);¶        this.registry.rebind(RMIAndGIPCClient.class.getName(), this);¶        GIPCObjectRegistered.newCase(this, RMIAndGIPCClient.class.getName(), this, this.registry);¶¶    }¶¶¶    @Override¶    public void ReceiveNotification(final String newCommand, final Object newProposal) {¶        this.receiveNotifications(CommunicationStateNames.COMMAND, newCommand);¶    }¶¶    @Override¶    public void experimentInput() {¶        long start = System.currentTimeMillis();¶        PerformanceExperimentStarted.newCase(this, start, commands);¶        boolean oldTrace = isTrace();¶        this.trace(false);¶        for (int i = 0; i < commands; i++) {¶            this.simulationCommand(tryCommand);¶        }¶        this.trace(oldTrace);¶        long end = System.currentTimeMillis();¶        PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶        ¶        ¶        System.out.println("Printing out the time:");¶        System.out.println(end - start);¶    }¶¶¶    protected void sendCommand(final String newCommand) {¶        this.thisProcessor.setInputString(newCommand);¶        RemoteProposeRequestSent.newCase(this, CommunicationStateNames.IPC_MECHANISM, -1, ipcMechanism);¶        this.proxyServer.receiveCommandViaGIPC(newCommand, this);¶    }¶¶    @Override¶    public void simulationCommand(final String newCommand) {¶        if (this.ipcMechanism.equals(IPCMechanism.RMI)) {¶            super.simulationCommand(newCommand);¶        } else {¶            this.sendCommand(newCommand);¶        }¶    }¶¶    protected void locateGIPCRegistry(final int port, final String hostName) {¶        this.registry = GIPCLocateRegistry.getRegistry(hostName, port, GIPCClient.CLIENT_NAME + number);¶        GIPCRegistryLocated.newCase(this, hostName,port, GIPCClient.class.getName());¶    }¶¶    protected void lookupGIPCServerProxy() {¶    	System.out.println("I am not here");¶    	System.out.println(GIPCServer.class);¶    	System.out.println(GIPCServer.class.getName());¶    	¶        this.proxyServer = (GIPCServer) registry.lookup(GIPCServer.class, GIPCServer.class.getName());¶        System.out.println("I am here");¶        GIPCObjectLookedUp.newCase(this, this.proxyServer, GIPCServer.class, GIPCServer.class.getName(), this.registry);¶    }¶¶¶    ¶}¶")]]]></diff>
  </Command>
  <Command __id="2922" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:19:17 EDT 2022" docASTNodeCount="748" docActiveCodeLength="5422" docExpressionCount="557" docLength="5679" projectName="533Assignment5" starttimestamp="1651619386199" timestamp="4171054">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment5\src\comp533\server\RMIAndGIPCServer.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package comp533.server;¶¶import assignments.util.mainArgs.ServerArgsProcessor;¶import comp533.client.GIPCClient;¶import comp533.client.RMIAndGIPCClient;¶import comp533.client.RMIClientInterface;¶//import coupledsims.client.Ov;¶import inputport.ConnectionListener;¶import inputport.InputPort;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import port.ATracingConnectionListener;¶import stringProcessors.HalloweenCommandProcessor;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.factories.FactoryTraceUtility;¶import util.trace.misc.ThreadDelayed;¶import util.trace.port.consensus.ConsensusTraceUtility;¶import util.trace.port.consensus.ProposalLearnedNotificationSent;¶import util.trace.port.consensus.RemoteProposeRequestReceived;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.nio.NIOTraceUtility;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryCreated;¶import util.trace.port.rpc.rmi.RMITraceUtility;¶¶import java.rmi.RemoteException;¶import java.util.ArrayList;¶import java.util.List;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC})¶public class RMIAndGIPCServer extends RMIServer implements GIPCServer{¶¶	private static ServerInterface thisServer = new RMIAndGIPCServer();¶    private List<GIPCClient> clients;¶    private GIPCRegistry registry;¶¶    public RMIAndGIPCServer() {¶        this.clients = new ArrayList<>();¶    }¶¶    public static ServerInterface getSingleton() {¶        return thisServer;¶    }¶¶    @Override¶    public void start(String[] arguments) {¶        this.init(arguments);¶        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶        SimulationParametersControllerFactory.getSingleton().processCommands();¶    }¶¶    public static void main(String[] arguments) {¶        ServerInterface thisServer = getSingleton();¶        thisServer.start(arguments);¶    }¶    ¶    protected void init(final String[] arguments) {¶        this.setTracing();¶        super.init(arguments);¶        final int gipcServerPort = ServerArgsProcessor.getGIPCServerPort(arguments);¶        this.registry = GIPCLocateRegistry.createRegistry(gipcServerPort);¶        GIPCRegistryCreated.newCase(this, gipcServerPort);¶        this.registry.rebind(GIPCServer.class.getName(), this);¶        GIPCObjectRegistered.newCase(this, RMIServerInterface.class.getName(), this, this.registry);¶        final InputPort port = this.registry.getInputPort();¶        final ConnectionListener listener = new ATracingConnectionListener(port);¶        port.addConnectionListener(listener);¶    }¶    ¶    @Override¶    public void setTracing() {¶        FactoryTraceUtility.setTracing();¶        BeanTraceUtility.setTracing();¶        RMITraceUtility.setTracing();¶        ConsensusTraceUtility.setTracing();¶        ThreadDelayed.enablePrint();¶        GIPCRPCTraceUtility.setTracing();¶        NIOTraceUtility.setTracing();¶        super.trace(true);¶    }¶¶    ¶¶¶    protected void receiveRequestViaGIPC(final String newCommand, final GIPCClient thisClient) {¶        try {¶            RemoteProposeRequestReceived.newCase(this, CommunicationStateNames.COMMAND, -1, newCommand);¶        	System.out.println("@@@??????????????????????");¶        	System.out.println(this.clients);¶        	System.out.println("@@@!!!!!!!!!!!!!!!!!!!!!!");¶            for (GIPCClient otherClientProxy : this.clients) {¶            	¶            	System.out.println("?????????????????????????");¶            	System.out.println(otherClientProxy);¶            	System.out.println(thisClient);¶            	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");¶                if (!otherClientProxy.equals(thisClient)) {¶                    ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);¶                    otherClientProxy."), Diff(INSERT,"Receive"), Diff(EQUAL,"Notification"), Diff(DELETE,"Receiver"), Diff(EQUAL,"(CommunicationStateNames.COMMAND, newCommand);¶                }¶            }¶        } catch (RemoteException ex) {¶            ex.printStackTrace();¶        }¶    }¶¶    @Override¶    public void receiveCommandViaGIPC(String newCommand, GIPCClient thisClient) {¶        this.receiveRequestViaGIPC(newCommand, thisClient);¶    }¶¶    @Override¶    public void registerGIPCClients() {¶    	System.out.println("register called");¶    	//final RMIClientInterface clientProxy = (RMIClientInterface) this.rmiRegistry.lookup(RMIClientInterface.class.getName());¶        final GIPCClient clientProxy = (GIPCClient) this.registry.lookup(RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName());¶        GIPCObjectLookedUp.newCase(this, clientProxy, RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName(), this.registry);¶        this.clients.add(clientProxy);¶//        System.out.println(GIPCClient.class);¶//        System.out.println(GIPCClient.class.getName());¶        System.out.println(this.clients);¶        System.out.println(clientProxy);¶        System.out.println(this.registry.getInputPort());¶        System.out.println(this.registry.getRPCClientPort());¶        System.out.println(this.registry.getRPCServerPort());¶    	System.out.println("register finished");¶¶    }¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package comp533.server;

import assignments.util.mainArgs.ServerArgsProcessor;
import comp533.client.GIPCClient;
import comp533.client.RMIAndGIPCClient;
import comp533.client.RMIClientInterface;
//import coupledsims.client.Ov;
import inputport.ConnectionListener;
import inputport.InputPort;
import inputport.rpc.GIPCLocateRegistry;
import inputport.rpc.GIPCRegistry;
import port.ATracingConnectionListener;
import stringProcessors.HalloweenCommandProcessor;
import util.annotations.Tags;
import util.interactiveMethodInvocation.SimulationParametersControllerFactory;
import util.tags.DistributedTags;
import util.trace.bean.BeanTraceUtility;
import util.trace.factories.FactoryTraceUtility;
import util.trace.misc.ThreadDelayed;
import util.trace.port.consensus.ConsensusTraceUtility;
import util.trace.port.consensus.ProposalLearnedNotificationSent;
import util.trace.port.consensus.RemoteProposeRequestReceived;
import util.trace.port.consensus.communication.CommunicationStateNames;
import util.trace.port.nio.NIOTraceUtility;
import util.trace.port.rpc.gipc.GIPCObjectLookedUp;
import util.trace.port.rpc.gipc.GIPCObjectRegistered;
import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;
import util.trace.port.rpc.gipc.GIPCRegistryCreated;
import util.trace.port.rpc.rmi.RMITraceUtility;

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("serial")
@Tags({DistributedTags.SERVER, DistributedTags.RMI, DistributedTags.GIPC})
public class RMIAndGIPCServer extends RMIServer implements GIPCServer{

	private static ServerInterface thisServer = new RMIAndGIPCServer();
    private List<GIPCClient> clients;
    private GIPCRegistry registry;

    public RMIAndGIPCServer() {
        this.clients = new ArrayList<>();
    }

    public static ServerInterface getSingleton() {
        return thisServer;
    }

    @Override
    public void start(String[] arguments) {
        this.init(arguments);
        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);
        SimulationParametersControllerFactory.getSingleton().processCommands();
    }

    public static void main(String[] arguments) {
        ServerInterface thisServer = getSingleton();
        thisServer.start(arguments);
    }
    
    protected void init(final String[] arguments) {
        this.setTracing();
        super.init(arguments);
        final int gipcServerPort = ServerArgsProcessor.getGIPCServerPort(arguments);
        this.registry = GIPCLocateRegistry.createRegistry(gipcServerPort);
        GIPCRegistryCreated.newCase(this, gipcServerPort);
        this.registry.rebind(GIPCServer.class.getName(), this);
        GIPCObjectRegistered.newCase(this, RMIServerInterface.class.getName(), this, this.registry);
        final InputPort port = this.registry.getInputPort();
        final ConnectionListener listener = new ATracingConnectionListener(port);
        port.addConnectionListener(listener);
    }
    
    @Override
    public void setTracing() {
        FactoryTraceUtility.setTracing();
        BeanTraceUtility.setTracing();
        RMITraceUtility.setTracing();
        ConsensusTraceUtility.setTracing();
        ThreadDelayed.enablePrint();
        GIPCRPCTraceUtility.setTracing();
        NIOTraceUtility.setTracing();
        super.trace(true);
    }

    


    protected void receiveRequestViaGIPC(final String newCommand, final GIPCClient thisClient) {
        try {
            RemoteProposeRequestReceived.newCase(this, CommunicationStateNames.COMMAND, -1, newCommand);
        	System.out.println("@@@??????????????????????");
        	System.out.println(this.clients);
        	System.out.println("@@@!!!!!!!!!!!!!!!!!!!!!!");
            for (GIPCClient otherClientProxy : this.clients) {
            	
            	System.out.println("?????????????????????????");
            	System.out.println(otherClientProxy);
            	System.out.println(thisClient);
            	System.out.println("!!!!!!!!!!!!!!!!!!!!!!!!!");
                if (!otherClientProxy.equals(thisClient)) {
                    ProposalLearnedNotificationSent.newCase(this, CommunicationStateNames.BROADCAST_MODE, -1, newCommand);
                    otherClientProxy.ReceiveNotification(CommunicationStateNames.COMMAND, newCommand);
                }
            }
        } catch (RemoteException ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public void receiveCommandViaGIPC(String newCommand, GIPCClient thisClient) {
        this.receiveRequestViaGIPC(newCommand, thisClient);
    }

    @Override
    public void registerGIPCClients() {
    	System.out.println("register called");
    	//final RMIClientInterface clientProxy = (RMIClientInterface) this.rmiRegistry.lookup(RMIClientInterface.class.getName());
        final GIPCClient clientProxy = (GIPCClient) this.registry.lookup(RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName());
        GIPCObjectLookedUp.newCase(this, clientProxy, RMIAndGIPCClient.class, RMIAndGIPCClient.class.getName(), this.registry);
        this.clients.add(clientProxy);
//        System.out.println(GIPCClient.class);
//        System.out.println(GIPCClient.class.getName());
        System.out.println(this.clients);
        System.out.println(clientProxy);
        System.out.println(this.registry.getInputPort());
        System.out.println(this.registry.getRPCClientPort());
        System.out.println(this.registry.getRPCServerPort());
    	System.out.println("register finished");

    }


}
]]></snapshot>
  </Command>
  <Command __id="2927" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:19:30 EDT 2022" docASTNodeCount="740" docActiveCodeLength="5310" docExpressionCount="520" docLength="5507" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4184612">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\client\RMIAndGIPCClient.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package client;¶¶import java.rmi.RemoteException;¶import java.rmi.server.UnicastRemoteObject;¶¶import assignments.util.mainArgs.ClientArgsProcessor;¶import comp533.server.GIPCServer;¶import inputport.rpc.GIPCLocateRegistry;¶import inputport.rpc.GIPCRegistry;¶import util.annotations.Tags;¶import util.interactiveMethodInvocation.IPCMechanism;¶import util.interactiveMethodInvocation.SimulationParametersControllerFactory;¶import util.tags.DistributedTags;¶import util.trace.bean.BeanTraceUtility;¶import util.trace.port.PerformanceExperimentEnded;¶import util.trace.port.PerformanceExperimentStarted;¶import util.trace.port.consensus.RemoteProposeRequestSent;¶import util.trace.port.consensus.communication.CommunicationStateNames;¶import util.trace.port.rpc.gipc.GIPCObjectLookedUp;¶import util.trace.port.rpc.gipc.GIPCObjectRegistered;¶import util.trace.port.rpc.gipc.GIPCRPCTraceUtility;¶import util.trace.port.rpc.gipc.GIPCRegistryLocated;¶¶@SuppressWarnings("serial")¶@Tags({DistributedTags.CLIENT, DistributedTags.RMI, DistributedTags.GIPC})¶public class RMIAndGIPCClient extends RMIClient implements GIPCClient{¶¶	private static int number = 0;¶    private GIPCRegistry registry;¶    protected GIPCServer proxyServer;¶    ¶    public static final String tryCommand = "move 1 -1";¶    protected int commands = 500;¶    ¶    private static ClientInterface thisClient = new RMIAndGIPCClient();¶    ¶    @Override¶    public void start(String[] arguments) {¶        this.init(arguments);¶        SimulationParametersControllerFactory.getSingleton().addSimulationParameterListener(this);¶        SimulationParametersControllerFactory.getSingleton().processCommands();¶    }¶¶    public static void main(String[] arguments) {¶        ClientInterface thisClient = new RMIAndGIPCClient();¶        thisClient.start(arguments);¶    }¶    ¶¶    @Override¶    public void setTracing() {¶        super.setTracing();¶        BeanTraceUtility.setTracing();¶        GIPCRPCTraceUtility.setTracing();¶    }¶¶    public RMIAndGIPCClient() {¶        number++;¶    }¶    public static ClientInterface getSingleton() {¶        return thisClient;¶    }¶    @Override¶    protected void init(final String[] arguments) {¶        this.setTracing();¶        super.init(arguments);¶        ¶        String hostName = ClientArgsProcessor.getServerHost(arguments);¶        final int port = ClientArgsProcessor.getGIPCPort(arguments);¶        ¶        this.locateGIPCRegistry(port, hostName);¶        this.lookupGIPCServerProxy();¶¶		try {¶			this.exportGIPCClientProxy();¶		} catch (RemoteException e) {¶			// TODO Auto-generated catch block¶			e.printStackTrace();¶		}¶        System.out.println("should be registered");¶        System.out.println(this.proxyServer);¶//        System.out.println(thisClient.getClass());¶//        System.out.println(thisClient.getClass().getName());¶        System.out.println(this);¶        this.proxyServer.registerGIPCClients();¶    }¶    ¶    protected void exportGIPCClientProxy() throws RemoteException {¶//    	UnicastRemoteObject.exportObject(this, 0);¶        this.registry.rebind(RMIAndGIPCClient.class.getName(), this);¶        GIPCObjectRegistered.newCase(this, RMIAndGIPCClient.class.getName(), this, this.registry);¶¶    }¶¶¶    @Override¶    public void ReceiveNotification(final String newCommand, final Object newProposal) {¶        this.receiveNotifications(CommunicationStateNames.COMMAND, newCommand);¶    }¶¶    @Override¶    public void experimentInput() {¶        long start = System.currentTimeMillis();¶        PerformanceExperimentStarted.newCase(this, start, commands);¶        boolean oldTrace = isTrace();¶        this.trace(false);¶        for (int i = 0; i < commands; i++) {¶            this.simulationCommand(tryCommand);¶        }¶        this.trace(oldTrace);¶        long end = System.currentTimeMillis();¶        PerformanceExperimentEnded.newCase(this, start, end, end - start, commands);¶        ¶        ¶        System.out.println("Printing out the time:");¶        System.out.println(end - start);¶    }¶¶¶    protected void sendCommand(final String newCommand) {¶        this.thisProcessor.setInputString(newCommand);¶        RemoteProposeRequestSent.newCase(this, CommunicationStateNames.IPC_MECHANISM, -1, ipcMechanism);¶        this.proxyServer.receiveCommandViaGIPC(newCommand, this);¶    }¶¶    @Override¶    public void simulationCommand(final String newCommand) {¶        if (this.ipcMechanism.equals(IPCMechanism.RMI)) {¶            super.simulationCommand(newCommand);¶        } else {¶            this.sendCommand(newCommand);¶        }¶    }¶¶    protected void locateGIPCRegistry(final int port, final String hostName) {¶        this.registry = GIPCLocateRegistry.getRegistry(hostName, port, GIPCClient.CLIENT_NAME + number);¶        GIPCRegistryLocated.newCase(this, hostName,port, GIPCClient.class.getName());¶    }¶¶    protected void lookupGIPCServerProxy() {¶    	System.out.println("I am not here");¶    	System.out.println(GIPCServer.class);¶    	System.out.println(GIPCServer.class.getName());¶    	¶        this.proxyServer = (GIPCServer) registry.lookup(GIPCServer.class, GIPCServer.class.getName());¶        System.out.println("I am here");¶        GIPCObjectLookedUp.newCase(this, this.proxyServer, GIPCServer.class, GIPCServer.class.getName(), this.registry);¶    }¶¶¶    ¶}¶")]]]></diff>
  </Command>
  <Command __id="2930" _type="DiffBasedFileOpenCommand" date="Tue May 03 20:19:32 EDT 2022" docASTNodeCount="47" docActiveCodeLength="339" docExpressionCount="32" docLength="339" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4186009">
    <filePath><![CDATA[C:\Users\KaihaoLiu\eclipse-workspace\533Assignment060\src\server\GIPCServer.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package server;


import comp533.client.GIPCClient;
import util.annotations.Tags;
import util.tags.DistributedTags;

@Tags({DistributedTags.SERVER_REMOTE_INTERFACE, DistributedTags.GIPC})

public interface GIPCServer {
    void registerGIPCClients();
    void receiveCommandViaGIPC(String aCommand, GIPCClient clientProxy);
}
]]></snapshot>
  </Command>
  <Command __id="2950" _type="PauseCommand" date="Tue May 03 20:20:08 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4222513">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2045]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2951" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:20:08 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4222778" />
  <Command __id="2953" _type="PauseCommand" date="Tue May 03 20:20:11 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4224941">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2163]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2952" _type="MoveCaretCommand" caretOffset="19" date="Tue May 03 20:20:11 EDT 2022" docOffset="19" starttimestamp="1651619386199" timestamp="4224941" />
  <Command __id="2955" _type="PauseCommand" date="Tue May 03 20:20:12 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4226313">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1372]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2954" _type="MoveCaretCommand" caretOffset="100" date="Tue May 03 20:20:12 EDT 2022" docOffset="100" starttimestamp="1651619386199" timestamp="4226313" />
  <Command __id="2956" _type="SelectTextCommand" caretOffset="104" date="Tue May 03 20:20:12 EDT 2022" end="104" start="97" starttimestamp="1651619386199" timestamp="4226449" />
  <Command __id="2957" _type="SelectTextCommand" caretOffset="130" date="Tue May 03 20:20:12 EDT 2022" end="130" start="90" starttimestamp="1651619386199" timestamp="4226714" />
  <Command __id="2959" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:20:13 EDT 2022" starttimestamp="1651619386199" timestamp="4227564" />
  <Command __id="2960" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:20:14 EDT 2022" starttimestamp="1651619386199" timestamp="4228523" />
  <Command __id="2961" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:14 EDT 2022" starttimestamp="1651619386199" timestamp="4228654" />
  <Command __id="2962" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:14 EDT 2022" starttimestamp="1651619386199" timestamp="4228664" />
  <Command __id="2964" _type="PauseCommand" date="Tue May 03 20:20:16 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4230550">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1886]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2965" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:20:17 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4230810" />
  <Command __id="2967" _type="PauseCommand" date="Tue May 03 20:20:18 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4232717">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1907]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2966" _type="MoveCaretCommand" caretOffset="181" date="Tue May 03 20:20:18 EDT 2022" docOffset="181" starttimestamp="1651619386199" timestamp="4232717" />
  <Command __id="2968" _type="SelectTextCommand" caretOffset="181" date="Tue May 03 20:20:19 EDT 2022" end="181" start="174" starttimestamp="1651619386199" timestamp="4232871" />
  <Command __id="2969" _type="SelectTextCommand" caretOffset="210" date="Tue May 03 20:20:19 EDT 2022" end="210" start="167" starttimestamp="1651619386199" timestamp="4233130" />
  <Command __id="2971" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:20:20 EDT 2022" starttimestamp="1651619386199" timestamp="4233946" />
  <Command __id="2972" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:20:20 EDT 2022" starttimestamp="1651619386199" timestamp="4234291" />
  <Command __id="2973" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:21 EDT 2022" starttimestamp="1651619386199" timestamp="4235080" />
  <Command __id="2974" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:21 EDT 2022" starttimestamp="1651619386199" timestamp="4235092" />
  <Command __id="2976" _type="PauseCommand" date="Tue May 03 20:20:22 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4236427">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1335]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2977" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:20:22 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4236648" />
  <Command __id="2979" _type="PauseCommand" date="Tue May 03 20:20:25 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4238933">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2285]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="2980" _type="SelectTextCommand" caretOffset="212" date="Tue May 03 20:20:25 EDT 2022" end="212" start="167" starttimestamp="1651619386199" timestamp="4239193" />
  <Command __id="2982" _type="PauseCommand" date="Tue May 03 20:20:28 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4241874">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2681]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2981" _type="MoveCaretCommand" caretOffset="532" date="Tue May 03 20:20:28 EDT 2022" docOffset="532" starttimestamp="1651619386199" timestamp="4241874" />
  <Command __id="2983" _type="SelectTextCommand" caretOffset="538" date="Tue May 03 20:20:28 EDT 2022" end="538" start="520" starttimestamp="1651619386199" timestamp="4241929" />
  <Command __id="2984" _type="SelectTextCommand" caretOffset="577" date="Tue May 03 20:20:28 EDT 2022" end="577" start="473" starttimestamp="1651619386199" timestamp="4242106" />
  <Command __id="2986" _type="PauseCommand" date="Tue May 03 20:20:29 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4243355">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1249]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="2987" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:20:29 EDT 2022" starttimestamp="1651619386199" timestamp="4243364" />
  <Command __id="2989" _type="PauseCommand" date="Tue May 03 20:20:30 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4244542">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1178]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="2988" _type="MoveCaretCommand" caretOffset="645" date="Tue May 03 20:20:30 EDT 2022" docOffset="645" starttimestamp="1651619386199" timestamp="4244542" />
  <Command __id="2990" _type="SelectTextCommand" caretOffset="655" date="Tue May 03 20:20:30 EDT 2022" end="655" start="637" starttimestamp="1651619386199" timestamp="4244672" />
  <Command __id="2991" _type="SelectTextCommand" caretOffset="694" date="Tue May 03 20:20:30 EDT 2022" end="694" start="579" starttimestamp="1651619386199" timestamp="4244797" />
  <Command __id="2993" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:20:31 EDT 2022" starttimestamp="1651619386199" timestamp="4245411" />
  <Command __id="2994" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:20:32 EDT 2022" starttimestamp="1651619386199" timestamp="4245856" />
  <Command __id="2995" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:32 EDT 2022" starttimestamp="1651619386199" timestamp="4245989" />
  <Command __id="2996" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:32 EDT 2022" starttimestamp="1651619386199" timestamp="4246016" />
  <Command __id="2997" _type="MoveCaretCommand" caretOffset="645" date="Tue May 03 20:20:32 EDT 2022" docOffset="645" starttimestamp="1651619386199" timestamp="4246267" />
  <Command __id="2999" _type="PauseCommand" date="Tue May 03 20:20:34 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4248494">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2227]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3000" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:20:34 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4248687" />
  <Command __id="3002" _type="PauseCommand" date="Tue May 03 20:20:36 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4250563">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1876]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3001" _type="MoveCaretCommand" caretOffset="385" date="Tue May 03 20:20:36 EDT 2022" docOffset="1532" starttimestamp="1651619386199" timestamp="4250563" />
  <Command __id="3003" _type="SelectTextCommand" caretOffset="397" date="Tue May 03 20:20:36 EDT 2022" end="397" start="379" starttimestamp="1651619386199" timestamp="4250701" />
  <Command __id="3004" _type="SelectTextCommand" caretOffset="422" date="Tue May 03 20:20:37 EDT 2022" end="422" start="362" starttimestamp="1651619386199" timestamp="4250839" />
  <Command __id="3006" _type="PauseCommand" date="Tue May 03 20:20:38 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4251895">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1056]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3007" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:20:38 EDT 2022" starttimestamp="1651619386199" timestamp="4251921" />
  <Command __id="3009" _type="PauseCommand" date="Tue May 03 20:20:39 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4253410">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1489]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3008" _type="MoveCaretCommand" caretOffset="513" date="Tue May 03 20:20:39 EDT 2022" docOffset="1660" starttimestamp="1651619386199" timestamp="4253410" />
  <Command __id="3010" _type="MoveCaretCommand" caretOffset="513" date="Tue May 03 20:20:39 EDT 2022" docOffset="1660" starttimestamp="1651619386199" timestamp="4253563" />
  <Command __id="3011" _type="SelectTextCommand" caretOffset="536" date="Tue May 03 20:20:39 EDT 2022" end="536" start="480" starttimestamp="1651619386199" timestamp="4253683" />
  <Command __id="3013" _type="PauseCommand" date="Tue May 03 20:20:40 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4254711">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[1028]]></pause>
    <nextType><![CDATA[Edit]]></nextType>
    <next><![CDATA[Insert]]></next>
  </Command>
  <Command __id="3014" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:20:40 EDT 2022" starttimestamp="1651619386199" timestamp="4254719" />
  <Command __id="3015" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:20:41 EDT 2022" starttimestamp="1651619386199" timestamp="4255321" />
  <Command __id="3016" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:41 EDT 2022" starttimestamp="1651619386199" timestamp="4255453" />
  <Command __id="3017" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:41 EDT 2022" starttimestamp="1651619386199" timestamp="4255484" />
  <Command __id="3019" _type="PauseCommand" date="Tue May 03 20:20:43 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4256883">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[1399]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3018" _type="MoveCaretCommand" caretOffset="625" date="Tue May 03 20:20:43 EDT 2022" docOffset="1772" starttimestamp="1651619386199" timestamp="4256883" />
  <Command __id="3021" _type="PauseCommand" date="Tue May 03 20:20:45 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4259082">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2199]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3020" _type="MoveCaretCommand" caretOffset="168" date="Tue May 03 20:20:45 EDT 2022" docOffset="168" starttimestamp="1651619386199" timestamp="4259082" />
  <Command __id="3022" _type="SelectTextCommand" caretOffset="172" date="Tue May 03 20:20:45 EDT 2022" end="172" start="166" starttimestamp="1651619386199" timestamp="4259219" />
  <Command __id="3023" _type="SelectTextCommand" caretOffset="194" date="Tue May 03 20:20:45 EDT 2022" end="194" start="151" starttimestamp="1651619386199" timestamp="4259497" />
  <Command __id="3025" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:20:46 EDT 2022" starttimestamp="1651619386199" timestamp="4260126" />
  <Command __id="3026" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:20:46 EDT 2022" starttimestamp="1651619386199" timestamp="4260559" />
  <Command __id="3027" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:46 EDT 2022" starttimestamp="1651619386199" timestamp="4260694" />
  <Command __id="3028" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:46 EDT 2022" starttimestamp="1651619386199" timestamp="4260710" />
  <Command __id="3032" _type="PauseCommand" date="Tue May 03 20:20:53 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4267056">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1199]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3031" _type="ShellCommand" date="Tue May 03 20:20:53 EDT 2022" starttimestamp="1651619386199" timestamp="4267056" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3033" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:53 EDT 2022" starttimestamp="1651619386199" timestamp="4267073" />
  <Command __id="3034" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue May 03 20:20:53 EDT 2022" starttimestamp="1651619386199" timestamp="4267076" />
  <Command __id="3035" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:53 EDT 2022" starttimestamp="1651619386199" timestamp="4267096" />
  <Command __id="3037" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:20:54 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4268343" />
  <Command __id="3041" _type="PauseCommand" date="Tue May 03 20:20:58 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4272324">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1164]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3040" _type="ShellCommand" date="Tue May 03 20:20:58 EDT 2022" starttimestamp="1651619386199" timestamp="4272324" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3042" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:58 EDT 2022" starttimestamp="1651619386199" timestamp="4272339" />
  <Command __id="3043" _type="EclipseCommand" commandID="org.eclipse.ui.edit.delete" date="Tue May 03 20:20:58 EDT 2022" starttimestamp="1651619386199" timestamp="4272341" />
  <Command __id="3044" _type="EclipseCommand" commandID="" date="Tue May 03 20:20:58 EDT 2022" starttimestamp="1651619386199" timestamp="4272345" />
  <Command __id="3046" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:20:59 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4273499" />
  <Command __id="3048" _type="PauseCommand" date="Tue May 03 20:21:01 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4275644">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2145]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3047" _type="MoveCaretCommand" caretOffset="394" date="Tue May 03 20:21:01 EDT 2022" docOffset="1561" starttimestamp="1651619386199" timestamp="4275644" />
  <Command __id="3049" _type="SelectTextCommand" caretOffset="405" date="Tue May 03 20:21:01 EDT 2022" end="405" start="390" starttimestamp="1651619386199" timestamp="4275674" />
  <Command __id="3050" _type="SelectTextCommand" caretOffset="417" date="Tue May 03 20:21:02 EDT 2022" end="417" start="376" starttimestamp="1651619386199" timestamp="4275957" />
  <Command __id="3052" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:21:02 EDT 2022" starttimestamp="1651619386199" timestamp="4276621" />
  <Command __id="3053" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:21:03 EDT 2022" starttimestamp="1651619386199" timestamp="4277057" />
  <Command __id="3054" _type="MoveCaretCommand" caretOffset="327" date="Tue May 03 20:21:03 EDT 2022" docOffset="1494" starttimestamp="1651619386199" timestamp="4277639" />
  <Command __id="3055" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:04 EDT 2022" starttimestamp="1651619386199" timestamp="4277806" />
  <Command __id="3056" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:04 EDT 2022" starttimestamp="1651619386199" timestamp="4277820" />
  <Command __id="3058" _type="PauseCommand" date="Tue May 03 20:21:06 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4280265">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[EclipseCommand]]></prev>
    <pause><![CDATA[2445]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3057" _type="MoveCaretCommand" caretOffset="394" date="Tue May 03 20:21:06 EDT 2022" docOffset="394" starttimestamp="1651619386199" timestamp="4280265" />
  <Command __id="3059" _type="MoveCaretCommand" caretOffset="338" date="Tue May 03 20:21:07 EDT 2022" docOffset="338" starttimestamp="1651619386199" timestamp="4281042" />
  <Command __id="3060" _type="SelectTextCommand" caretOffset="370" date="Tue May 03 20:21:08 EDT 2022" end="443" start="370" starttimestamp="1651619386199" timestamp="4282041" />
  <Command __id="3062" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:21:08 EDT 2022" starttimestamp="1651619386199" timestamp="4282624" />
  <Command __id="3063" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:21:09 EDT 2022" starttimestamp="1651619386199" timestamp="4283059" />
  <Command __id="3064" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:09 EDT 2022" starttimestamp="1651619386199" timestamp="4283143" />
  <Command __id="3065" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:09 EDT 2022" starttimestamp="1651619386199" timestamp="4283159" />
  <Command __id="3066" _type="MoveCaretCommand" caretOffset="220" date="Tue May 03 20:21:10 EDT 2022" docOffset="220" starttimestamp="1651619386199" timestamp="4283876" />
  <Command __id="3068" _type="PauseCommand" date="Tue May 03 20:21:11 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4285642">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[1766]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3069" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:21:12 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4285929" />
  <Command __id="3070" _type="MoveCaretCommand" caretOffset="47" date="Tue May 03 20:21:12 EDT 2022" docOffset="47" starttimestamp="1651619386199" timestamp="4286654" />
  <Command __id="3071" _type="SelectTextCommand" caretOffset="53" date="Tue May 03 20:21:12 EDT 2022" end="53" start="43" starttimestamp="1651619386199" timestamp="4286798" />
  <Command __id="3073" _type="PauseCommand" date="Tue May 03 20:21:15 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4289215">
    <prevType><![CDATA[Select]]></prevType>
    <prev><![CDATA[SelectTextCommand]]></prev>
    <pause><![CDATA[2417]]></pause>
    <nextType><![CDATA[Select]]></nextType>
    <next><![CDATA[SelectTextCommand]]></next>
  </Command>
  <Command __id="3072" _type="SelectTextCommand" caretOffset="21" date="Tue May 03 20:21:15 EDT 2022" end="54" start="21" starttimestamp="1651619386199" timestamp="4289215" />
  <Command __id="3075" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:21:16 EDT 2022" starttimestamp="1651619386199" timestamp="4289816" />
  <Command __id="3077" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Tue May 03 20:21:16 EDT 2022" starttimestamp="1651619386199" timestamp="4290425" />
  <Command __id="3078" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:21:17 EDT 2022" starttimestamp="1651619386199" timestamp="4290857" />
  <Command __id="3079" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:17 EDT 2022" starttimestamp="1651619386199" timestamp="4291000" />
  <Command __id="3080" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:17 EDT 2022" starttimestamp="1651619386199" timestamp="4291011" />
  <Command __id="3081" _type="MoveCaretCommand" caretOffset="269" date="Tue May 03 20:21:17 EDT 2022" docOffset="269" starttimestamp="1651619386199" timestamp="4291687" />
  <Command __id="3082" _type="MoveCaretCommand" caretOffset="279" date="Tue May 03 20:21:18 EDT 2022" docOffset="279" starttimestamp="1651619386199" timestamp="4292449" />
  <Command __id="3083" _type="SelectTextCommand" caretOffset="287" date="Tue May 03 20:21:18 EDT 2022" end="287" start="277" starttimestamp="1651619386199" timestamp="4292584" />
  <Command __id="3084" _type="SelectTextCommand" caretOffset="303" date="Tue May 03 20:21:19 EDT 2022" end="303" start="229" starttimestamp="1651619386199" timestamp="4292859" />
  <Command __id="3086" _type="EclipseCommand" commandID="org.eclipse.jdt.ui.edit.text.java.toggle.comment" date="Tue May 03 20:21:19 EDT 2022" starttimestamp="1651619386199" timestamp="4293719" />
  <Command __id="3087" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Tue May 03 20:21:20 EDT 2022" starttimestamp="1651619386199" timestamp="4294197" />
  <Command __id="3088" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:20 EDT 2022" starttimestamp="1651619386199" timestamp="4294330" />
  <Command __id="3089" _type="EclipseCommand" commandID="" date="Tue May 03 20:21:20 EDT 2022" starttimestamp="1651619386199" timestamp="4294340" />
  <Command __id="3090" _type="MoveCaretCommand" caretOffset="279" date="Tue May 03 20:21:20 EDT 2022" docOffset="279" starttimestamp="1651619386199" timestamp="4294572" />
  <Command __id="3091" _type="MoveCaretCommand" caretOffset="308" date="Tue May 03 20:21:21 EDT 2022" docOffset="308" starttimestamp="1651619386199" timestamp="4295015" />
  <Command __id="3093" _type="PauseCommand" date="Tue May 03 20:21:25 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4299541">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[4526]]></pause>
    <nextType><![CDATA[Open File]]></nextType>
    <next><![CDATA[DiffBasedFileOpenCommand]]></next>
  </Command>
  <Command __id="3094" _type="MoveCaretCommand" caretOffset="0" date="Tue May 03 20:21:25 EDT 2022" docOffset="0" starttimestamp="1651619386199" timestamp="4299719" />
  <Command __id="3096" _type="PauseCommand" date="Tue May 03 20:21:28 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4302261">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[2542]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3095" _type="ShellCommand" date="Tue May 03 20:21:28 EDT 2022" starttimestamp="1651619386199" timestamp="4302261" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3102" _type="PauseCommand" date="Tue May 03 20:21:30 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4304759">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1258]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="3101" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:21:30 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4304759" type="Run" />
  <Command __id="3103" _type="RunCommand" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:21:30 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4304759" type="Run" />
  <Command __id="3105" _type="PauseCommand" date="Tue May 03 20:21:33 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4307254">
    <prevType><![CDATA[Debug]]></prevType>
    <prev><![CDATA[RunCommand]]></prev>
    <pause><![CDATA[2495]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3104" _type="ShellCommand" date="Tue May 03 20:21:33 EDT 2022" starttimestamp="1651619386199" timestamp="4307254" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3107" _type="PauseCommand" date="Tue May 03 20:21:58 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="4332226">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[24971]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3106" _type="ConsoleOutput" date="Tue May 03 20:21:58 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4332225" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22826
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):22"), Diff(DELETE,"57"), Diff(INSERT,"82"), Diff(EQUAL,"6¶")]]]></diff>
  </Command>
  <Command __id="3109" _type="PauseCommand" date="Tue May 03 20:22:13 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="4347735">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[15510]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3108" _type="ConsoleOutput" date="Tue May 03 20:22:13 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4347735" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):15505
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"22826"), Diff(INSERT,"15505"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3111" _type="PauseCommand" date="Tue May 03 20:22:28 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="4362649">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[14914]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3110" _type="ConsoleOutput" date="Tue May 03 20:22:28 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4362649" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14910
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):1"), Diff(DELETE,"5505"), Diff(INSERT,"4910"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3113" _type="PauseCommand" date="Tue May 03 20:24:10 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="4464278">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[101629]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3112" _type="ConsoleOutput" date="Tue May 03 20:24:10 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4464278" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):67586
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"14910"), Diff(INSERT,"67586"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3115" _type="PauseCommand" date="Tue May 03 20:24:20 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="4474292">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[10014]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3114" _type="ConsoleOutput" date="Tue May 03 20:24:20 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4474292" type="ConsoleOutput">
    <outputString><![CDATA[Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):67586"), Diff(INSERT,"Number of traces > 800  turning tracing off"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3117" _type="PauseCommand" date="Tue May 03 20:26:03 EDT 2022" range="1m-2m" starttimestamp="1651619386199" timestamp="4576813">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[102521]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3116" _type="ConsoleOutput" date="Tue May 03 20:26:03 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4576813" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):112579
Number of traces > 800  turning tracing off
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Test execution time (ms):112579¶"), Diff(EQUAL,"Number of traces > 800  turning tracing off¶")]]]></diff>
  </Command>
  <Command __id="3119" _type="PauseCommand" date="Tue May 03 20:26:25 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="4599440">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22627]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3118" _type="ConsoleOutput" date="Tue May 03 20:26:25 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4599440" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22574
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"11"), Diff(INSERT,"2"), Diff(EQUAL,"257"), Diff(DELETE,"9¶Number of traces > 800  turning tracing off"), Diff(INSERT,"4"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3121" _type="PauseCommand" date="Tue May 03 20:26:41 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="4615797">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[16357]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3120" _type="ShellCommand" date="Tue May 03 20:26:41 EDT 2022" starttimestamp="1651619386199" timestamp="4615797" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3123" _type="PauseCommand" date="Tue May 03 20:26:43 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4617152">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1355]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3122" _type="ShellCommand" date="Tue May 03 20:26:43 EDT 2022" starttimestamp="1651619386199" timestamp="4617152" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3125" _type="PauseCommand" date="Tue May 03 20:26:48 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4622014">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[4862]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3124" _type="ConsoleOutput" date="Tue May 03 20:26:48 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4622014" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22570
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):2257"), Diff(DELETE,"4"), Diff(INSERT,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3127" _type="PauseCommand" date="Tue May 03 20:27:10 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="4644557">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22543]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3126" _type="ConsoleOutput" date="Tue May 03 20:27:10 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4644557" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22587
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(INSERT,"8"), Diff(EQUAL,"7"), Diff(DELETE,"0"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3129" _type="PauseCommand" date="Tue May 03 20:27:33 EDT 2022" range="20s-30s" starttimestamp="1651619386199" timestamp="4667137">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[22580]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3128" _type="ConsoleOutput" date="Tue May 03 20:27:33 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4667137" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):22578
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):225"), Diff(DELETE,"8"), Diff(EQUAL,"7"), Diff(INSERT,"8"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3131" _type="PauseCommand" date="Tue May 03 20:27:50 EDT 2022" range="10s-20s" starttimestamp="1651619386199" timestamp="4684299">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[17161]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3130" _type="ConsoleOutput" date="Tue May 03 20:27:50 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4684298" type="ConsoleOutput">
    <outputString><![CDATA[Building symbol table and running first pass checks:Tue May 03 20:27:50 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):22578"), Diff(INSERT,"Building symbol table and running first pass checks:Tue May 03 20:27:50 EDT 2022"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3133" _type="PauseCommand" date="Tue May 03 20:27:53 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4687534">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[3236]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3132" _type="ConsoleOutput" date="Tue May 03 20:27:53 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4687534" type="ConsoleOutput">
    <outputString><![CDATA[Symbol table size:135
Running second pass checks Tue May 03 20:27:53 EDT 2022
Start O(n2) inter- and intra class method calls:Tue May 03 20:27:53 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Building s"), Diff(INSERT,"S"), Diff(EQUAL,"ymbol table "), Diff(DELETE,"and r"), Diff(INSERT,"size:135¶R"), Diff(EQUAL,"unning "), Diff(DELETE,"first"), Diff(INSERT,"second"), Diff(EQUAL," pass checks"), Diff(DELETE,":"), Diff(INSERT," "), Diff(EQUAL,"Tue May 03 20:27:5"), Diff(DELETE,"0"), Diff(INSERT,"3 EDT 2022¶Start O(n2) inter- and intra class method calls:Tue May 03 20:27:53"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3134" _type="ConsoleOutput" date="Tue May 03 20:27:53 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4687649" type="ConsoleOutput">
    <outputString><![CDATA[End O(n2) inter- and intra class method calls:Tue May 03 20:27:53 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Symbol table size:135¶Running second pass checks Tue May 03 20:27:53 EDT 2022¶Start"), Diff(INSERT,"End"), Diff(EQUAL," O(n2) inter- and intra class method calls:Tue May 03 20:27:53 EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3136" _type="PauseCommand" date="Tue May 03 20:27:55 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4688917">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[1268]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3135" _type="ConsoleOutput" date="Tue May 03 20:27:55 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4688917" type="ConsoleOutput">
    <outputString><![CDATA[Finished second pass checks:Tue May 03 20:27:55 EDT 2022
Generating checks:Tue May 03 20:27:55 EDT 2022
Finished Generating checks:Tue May 03 20:27:55 EDT 2022
Generating externals:Tue May 03 20:27:55 EDT 2022
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"End O(n2) inter- and intra class method cal"), Diff(INSERT,"Finished second pass checks:Tue May 03 20:27:55 EDT 2022¶Generating checks:Tue May 03 20:27:55 EDT 2022¶Finished Generating checks:Tue May 03 20:27:55 EDT 2022¶Generating externa"), Diff(EQUAL,"ls:Tue May 03 20:27:5"), Diff(DELETE,"3"), Diff(INSERT,"5"), Diff(EQUAL," EDT 2022¶")]]]></diff>
  </Command>
  <Command __id="3137" _type="ConsoleOutput" date="Tue May 03 20:27:55 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4689392" type="ConsoleOutput">
    <outputString><![CDATA[Finished Generating externals:Tue May 03 20:27:55 EDT 2022
A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0

Number of traces > 800  turning tracing off
Test execution time (ms):5107
Number of traces > 800  turning tracing off
Test execution time (ms):25
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Finished "), Diff(DELETE,"second pass check"), Diff(INSERT,"Generating external"), Diff(EQUAL,"s:Tue May 03 20:27:55 EDT 2022¶"), Diff(DELETE,"Generating checks:Tue May 03 20:27:55 EDT 2022¶Finished Generating checks:Tue May 03 20:27:55 EDT 2022¶Gene"), Diff(INSERT,"A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Number of traces > 800  turning tracing off¶Test execution time (ms):5107¶Number of traces > 800  turning t"), Diff(EQUAL,"ra"), Diff(DELETE,"t"), Diff(INSERT,"c"), Diff(EQUAL,"ing "), Diff(DELETE,"externals:Tue May 03 20:27:55 EDT 2022"), Diff(INSERT,"off¶Test execution time (ms):25"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3138" _type="ConsoleOutput" date="Tue May 03 20:27:55 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4689492" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):16
A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9436619718309859

Test execution time (ms):16
A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9933774834437086

Test execution time (ms):16
A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.5263157894736842

Test execution time (ms):15
Re-running test gradingTools.comp533s21.assignment6.style.A6MnemonicNames@3d3e9246 . Results may change.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Finished Generating externals:Tue May 03 20:27:55 EDT 2022¶A6NoCheckstyleWarnings did not pass completely:Warnings found in checkstyle text, see traced console output%0.0¶¶Number of traces > 800  turning tracing off¶Test execution time (ms):5107¶Number of traces > 800  turning tracing off"), Diff(INSERT,"Test execution time (ms):16¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9436619718309859¶¶Test execution time (ms):16¶A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9933774834437086¶¶Test execution time (ms):16¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.5263157894736842¶"), Diff(EQUAL,"¶Test execution time (ms):"), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,"5¶"), Diff(INSERT,"Re-running test gradingTools.comp533s21.assignment6.style.A6MnemonicNames@3d3e9246 . Results may change.¶")]]]></diff>
  </Command>
  <Command __id="3140" _type="PauseCommand" date="Tue May 03 20:28:04 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="4697867">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[8375]]></pause>
    <nextType><![CDATA[IO]]></nextType>
    <next><![CDATA[ConsoleOutput]]></next>
  </Command>
  <Command __id="3139" _type="ConsoleOutput" date="Tue May 03 20:28:04 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4697867" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):4
Test execution time (ms):13
Test execution time (ms):14
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Test execution time (ms):"), Diff(DELETE,"16¶A6InterfaceAsType did not pass completely:See console trace about lines failing  this check%0.9436619718309859¶¶Test execution time (ms):16¶A6MnemonicNames did not pass completely:See console trace about lines failing  this check%0.9933774834437086¶¶Test execution time (ms):16¶A6AccessModifiersMatched did not pass completely:See console trace about lines failing  this check%0.5263157894736842¶¶Test execution time (ms):15¶Re-running test gradingTools.comp533s21.assignment6.style.A6MnemonicNames@3d3e9246 . Results may change."), Diff(INSERT,"4¶Test execution time (ms):13¶Test execution time (ms):14"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3141" _type="ConsoleOutput" date="Tue May 03 20:28:04 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4697971" type="ConsoleOutput">
    <outputString><![CDATA[Test execution time (ms):14
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):4¶Test execution time (ms):13¶"), Diff(EQUAL,"Test execution time (ms):14¶")]]]></diff>
  </Command>
  <Command __id="3142" _type="ConsoleOutput" date="Tue May 03 20:28:04 EDT 2022" overflow="false" starttimestamp="1651619386199" timestamp="4697975" type="ConsoleOutput">
    <outputString><![CDATA[
Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826
|- represents a package, |~ represents a file

The structure of your project was found to be:
|- src (45)
 |- checks (1)
  |~ RunTests.java (30)
 |- client (12)
  |~ ClientClass.java (37)
  |~ ClientConfigurer.java (484)
  |~ ClientInterface.java (22)
  |~ ClientInterfaceGipc.java (33)
  |~ ClientInterfaceNio.java (25)
  |~ ClientInterfaceRmi.java (29)
  |~ ClientOutCoupler.java (73)
  |~ ClientRmiGipc.java (306)
  |~ ClientRmiGipcNio.java (200)
  |~ GIPCClient.java (12)
  |~ RemoteClientObject.java (36)
  |~ RMIClientInterface.java (17)
 |- nio (8)
  |~ ClientInterface.java (14)
  |~ ClientReadExample.java (60)
  |~ NioClient.java (124)
  |~ NioClientLaunch.java (10)
  |~ NIOManagerPrintServer.java (21)
  |~ NioServer.java (147)
  |~ NioServerLaunch.java (10)
  |~ ServerReadExample.java (70)
 |- registry (1)
  |~ MyRegistry.java (33)
 |- server (14)
  |~ GIPCServer.java (13)
  |~ RemoteServerObject.java (108)
  |~ RMIServerInterface.java (25)
  |~ Server.java (33)
  |~ ServerConfigurer.java (475)
  |~ ServerInterface.java (18)
  |~ SimulationStuff.java (9)
  |- remote (6)
   |~ ServerInterfaceGipcRmi.java (44)
   |~ ServerInterfaceNio.java (23)
   |~ ServerInterfaceRmi.java (40)
   |~ ServerNio.java (169)
   |~ ServerObjectRmiGipc.java (245)
   |~ ServerRmiGipc.java (345)
 |- utilRead (3)
  |~ ClientReadThread.java (94)
  |~ ReadThreadInterface.java (13)
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Test execution time (ms):14"), Diff(INSERT,"¶Your project does not meet the required similarity percent of: 0.95 your similarity: 0.5217391304347826¶|- represents a package, |~ represents a file¶¶The structure of your project was found to be:¶|- src (45)¶ |- checks (1)¶  |~ RunTests.java (30)¶ |- client (12)¶  |~ ClientClass.java (37)¶  |~ ClientConfigurer.java (484)¶  |~ ClientInterface.java (22)¶  |~ ClientInterfaceGipc.java (33)¶  |~ ClientInterfaceNio.java (25)¶  |~ ClientInterfaceRmi.java (29)¶  |~ ClientOutCoupler.java (73)¶  |~ ClientRmiGipc.java (306)¶  |~ ClientRmiGipcNio.java (200)¶  |~ GIPCClient.java (12)¶  |~ RemoteClientObject.java (36)¶  |~ RMIClientInterface.java (17)¶ |- nio (8)¶  |~ ClientInterface.java (14)¶  |~ ClientReadExample.java (60)¶  |~ NioClient.java (124)¶  |~ NioClientLaunch.java (10)¶  |~ NIOManagerPrintServer.java (21)¶  |~ NioServer.java (147)¶  |~ NioServerLaunch.java (10)¶  |~ ServerReadExample.java (70)¶ |- registry (1)¶  |~ MyRegistry.java (33)¶ |- server (14)¶  |~ GIPCServer.java (13)¶  |~ RemoteServerObject.java (108)¶  |~ RMIServerInterface.java (25)¶  |~ Server.java (33)¶  |~ ServerConfigurer.java (475)¶  |~ ServerInterface.java (18)¶  |~ SimulationStuff.java (9)¶  |- remote (6)¶   |~ ServerInterfaceGipcRmi.java (44)¶   |~ ServerInterfaceNio.java (23)¶   |~ ServerInterfaceRmi.java (40)¶   |~ ServerNio.java (169)¶   |~ ServerObjectRmiGipc.java (245)¶   |~ ServerRmiGipc.java (345)¶ |- utilRead (3)¶  |~ ClientReadThread.java (94)¶  |~ ReadThreadInterface.java (13)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="3146" _type="PauseCommand" date="Tue May 03 20:28:29 EDT 2022" range="5s-10s" starttimestamp="1651619386199" timestamp="4723740">
    <prevType><![CDATA[IO]]></prevType>
    <prev><![CDATA[ConsoleOutput]]></prev>
    <pause><![CDATA[5280]]></pause>
    <nextType><![CDATA[Other]]></nextType>
    <next><![CDATA[ProgramExecutionEvent]]></next>
  </Command>
  <Command __id="3145" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:28:29 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4723740" type="Run" />
  <Command __id="3147" _type="ProgramExecutionEvent" className="/533Assignment060/src/checks/RunTests.java" date="Tue May 03 20:28:29 EDT 2022" kind="HitBreakPoint" projectName="533Assignment060" starttimestamp="1651619386199" timestamp="4723740" type="Run" />
  <Command __id="3149" _type="PauseCommand" date="Tue May 03 20:28:31 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4724881">
    <prevType><![CDATA[Other]]></prevType>
    <prev><![CDATA[ProgramExecutionEvent]]></prev>
    <pause><![CDATA[1141]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3148" _type="ShellCommand" date="Tue May 03 20:28:31 EDT 2022" starttimestamp="1651619386199" timestamp="4724881" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3151" _type="PauseCommand" date="Tue May 03 20:28:32 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4726727">
    <prevType><![CDATA[Gained Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1846]]></pause>
    <nextType><![CDATA[Move Caret]]></nextType>
    <next><![CDATA[MoveCaretCommand]]></next>
  </Command>
  <Command __id="3150" _type="MoveCaretCommand" caretOffset="655" date="Tue May 03 20:28:32 EDT 2022" docOffset="774" starttimestamp="1651619386199" timestamp="4726727" />
  <Command __id="3153" _type="PauseCommand" date="Tue May 03 20:28:36 EDT 2022" range="2s-5s" starttimestamp="1651619386199" timestamp="4730418">
    <prevType><![CDATA[Move Caret]]></prevType>
    <prev><![CDATA[MoveCaretCommand]]></prev>
    <pause><![CDATA[3691]]></pause>
    <nextType><![CDATA[Lost Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3152" _type="ShellCommand" date="Tue May 03 20:28:36 EDT 2022" starttimestamp="1651619386199" timestamp="4730418" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3155" _type="PauseCommand" date="Tue May 03 20:28:38 EDT 2022" range="1s-2s" starttimestamp="1651619386199" timestamp="4732036">
    <prevType><![CDATA[Lost Focus]]></prevType>
    <prev><![CDATA[ShellCommand]]></prev>
    <pause><![CDATA[1618]]></pause>
    <nextType><![CDATA[Gained Focus]]></nextType>
    <next><![CDATA[ShellCommand]]></next>
  </Command>
  <Command __id="3154" _type="ShellCommand" date="Tue May 03 20:28:38 EDT 2022" starttimestamp="1651619386199" timestamp="4732036" type="ECLIPSE_GAINED_FOCUS" />
</Events>
